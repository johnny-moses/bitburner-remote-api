{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":3000,\"strength\":2,\"defense\":1,\"dexterity\":2,\"agility\":1,\"charisma\":2,\"intelligence\":0},\"exp\":{\"hacking\":15338786.802039161,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":2.36199897781433,\"hacking_speed\":2.420708529795824,\"hacking_money\":6.808238583268071,\"hacking_grow\":4.13636885115778,\"hacking\":5.773801653260731,\"hacking_exp\":5.4733245501180905,\"strength\":2.1745481960372324,\"strength_exp\":2.3920030156409564,\"defense\":1.890911474814985,\"defense_exp\":2.3920030156409564,\"dexterity\":2.1745481960372324,\"dexterity_exp\":2.3920030156409564,\"agility\":1.890911474814985,\"agility_exp\":2.3920030156409564,\"charisma\":2.0800026222964836,\"charisma_exp\":2.3920030156409564,\"hacknet_node_money\":4.769056012434158,\"hacknet_node_purchase_cost\":0.40456639308027387,\"hacknet_node_ram_cost\":0.5288449582748679,\"hacknet_node_core_cost\":0.5288449582748679,\"hacknet_node_level_cost\":0.4495182145336376,\"company_rep\":3.157443980646062,\"faction_rep\":2.3920030156409555,\"work_money\":2.0800026222964836,\"crime_success\":1.890911474814985,\"crime_money\":1.890911474814985,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":49,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"BitRunners Neurolink\"}],\"city\":\"Sector-12\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"run4theh111z\",\"factions\":[\"BitRunners\",\"The Black Hand\",\"NiteSec\",\"Netburners\",\"CyberSec\"],\"factionInvitations\":[\"Sector-12\"],\"factionRumors\":{\"ctor\":\"JSONSet\",\"data\":[]},\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":7470.399999995397,\"ram\":1,\"totalMoneyGenerated\":2224696.9092041426,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":7410.399999995451,\"ram\":1,\"totalMoneyGenerated\":2222050.083117244,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":7350.399999995506,\"ram\":1,\"totalMoneyGenerated\":2222002.392557119,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":7290.39999999556,\"ram\":1,\"totalMoneyGenerated\":2220094.770152147,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":7230.399999995615,\"ram\":1,\"totalMoneyGenerated\":2218711.743908542,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":7170.3999999956695,\"ram\":1,\"totalMoneyGenerated\":2216422.597022576,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":7110.399999995724,\"ram\":1,\"totalMoneyGenerated\":2211868.148530705,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":7050.399999995779,\"ram\":1,\"totalMoneyGenerated\":2211906.300978804,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":6990.399999995833,\"ram\":1,\"totalMoneyGenerated\":2211963.529650953,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":6930.399999995888,\"ram\":1,\"totalMoneyGenerated\":2212058.910771201,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":6870.399999995942,\"ram\":1,\"totalMoneyGenerated\":2212082.5175984623,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":6750.3999999960515,\"ram\":1,\"totalMoneyGenerated\":2211748.683677592,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":3,\"level\":51,\"moneyGainRatePerSecond\":486.44371326828406,\"onlineTimeSeconds\":6510.39999999627,\"ram\":1,\"totalMoneyGenerated\":2205939.9734544507,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":2,\"level\":51,\"moneyGainRatePerSecond\":425.6382491097486,\"onlineTimeSeconds\":6450.399999996324,\"ram\":1,\"totalMoneyGenerated\":1930958.3498544004,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":2,\"level\":51,\"moneyGainRatePerSecond\":425.6382491097486,\"onlineTimeSeconds\":6270.399999996488,\"ram\":1,\"totalMoneyGenerated\":1929014.9595293307,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":2,\"level\":51,\"moneyGainRatePerSecond\":425.6382491097486,\"onlineTimeSeconds\":5970.399999996761,\"ram\":1,\"totalMoneyGenerated\":1926141.6032818349,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":2,\"level\":51,\"moneyGainRatePerSecond\":425.6382491097486,\"onlineTimeSeconds\":5610.399999997088,\"ram\":1,\"totalMoneyGenerated\":1922893.8761373626,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":2,\"level\":1,\"moneyGainRatePerSecond\":8.345848021759776,\"onlineTimeSeconds\":5310.399999997361,\"ram\":1,\"totalMoneyGenerated\":44248.25549455571,\"name\":\"hacknet-node-17\"}}],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{},\"karma\":0,\"numPeopleKilled\":0,\"location\":\"Alpha Enterprises\",\"money\":214229296358.9801,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"gang_expenses\":0,\"hacking\":1087329308616.026,\"hacknet\":36554803.604994506,\"hacknet_expenses\":-41096286.57057096,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-568411331925.9607,\"total\":214229295207.9801,\"work\":0,\"servers\":-440000,\"other\":-300308700000,\"augmentations\":-4375000000}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":40010000,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"gang_expenses\":0,\"hacking\":48554374685912.9,\"hacknet\":9647861487.39266,\"hacknet_expenses\":-6.375047905287899e+31,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":4001214364788.0713,\"total\":-6.3750479056261745e+31,\"work\":394168.5962057928,\"servers\":-14499560571291520000,\"other\":-311602999755.64026,\"augmentations\":-3.368256213270192e+21}},\"playtimeSinceLastAug\":7704000,\"playtimeSinceLastBitnode\":375692000,\"lastAugReset\":1724979890537,\"lastNodeReset\":1724611901363,\"purchasedServers\":[\"trader\"],\"scriptProdSinceLastAug\":1195803326912.5005,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[[1,1]]},\"exploits\":[\"N00dles\"],\"achievements\":[{\"ID\":\"FROZE\",\"unlockedOn\":1722191842830},{\"ID\":\"NS2\",\"unlockedOn\":1723169077481},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1723169077483},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1723172140329},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1723173999879},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1723175432956},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1723176348459},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1723177848458},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1723242208245},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1723242208246},{\"ID\":\"TOR\",\"unlockedOn\":1723242208247},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1723253428239},{\"ID\":\"TRAVEL\",\"unlockedOn\":1723360914427},{\"ID\":\"WORKOUT\",\"unlockedOn\":1723429567600},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1723432207596},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1723464478584},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1723520578586},{\"ID\":\"DONATION\",\"unlockedOn\":1723952906876},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1723957173916},{\"ID\":\"4S\",\"unlockedOn\":1723966328375},{\"ID\":\"NITESEC\",\"unlockedOn\":1723990688383},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1723990808366},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1724020328368},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1724020388388},{\"ID\":\"REPUTATION_10M\",\"unlockedOn\":1724294268725},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1724308648932},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1724514699545},{\"ID\":\"SF1.1\",\"unlockedOn\":1724611907531},{\"ID\":\"MONEY_1Q\",\"unlockedOn\":1724912262618},{\"ID\":\"MAX_RAM\",\"unlockedOn\":1724912442620},{\"ID\":\"MAX_CORES\",\"unlockedOn\":1724912442621},{\"ID\":\"QUEUE_40\",\"unlockedOn\":1724950602816},{\"ID\":\"N00DLES\",\"unlockedOn\":1724955162814}],\"terminalCommandHistory\":[\"connect darkweb\",\"buy -a\",\"buy -l\",\"buy deepscanv2.exe\",\"home\",\"sa3\",\"backdoor\",\"sa3\",\"backdoor\",\"sa3\",\"backdoor\",\"home\",\"connect trader\",\"run trade.js --liquidate\",\"cd server\",\"run trade.js --liquidate\",\"home\",\"play\",\"run play.js\",\" run play.js\",\" \",\"run alias.js\",\"alias n=\\\"run NUKE.exe\\\"; alias home=\\\"home; cd src\\\"; alias sa1=\\\"scan-analyze 3\\\"; alias sa2=\\\"scan-analyze 5\\\"; alias sa3=\\\"scan-analyze 10\\\"; alias brutessh=\\\"home; connect darkweb; buy -l; buy brutessh.exe; home\\\"; alias ftpcrack=\\\"home; connect darkweb; buy -l; buy ftpcrack.exe; home\\\"; alias relaysmtp=\\\"home; connect darkweb; buy -l; buy relaysmtp.exe; home\\\"; alias httpworm=\\\"home; connect darkweb; buy -l; buy httpworm.exe; home\\\"; alias sqlinject=\\\"home; connect darkweb; buy -l; buy sqlinject.exe; home\\\"\",\"play\",\"cd src\",\"run play.js\",\"home\",\"cd ..\",\"cd server\",\"run trade-server.js\",\"connect darkweb; buy -l\",\"home\",\"brutessh\",\"ftpcrack\",\"httpworm\",\"sqlinject\",\"clear\",\"connect darkweb\",\"buy -l\",\"buy deepscanv1.exe\",\"buy deepscanv2.exe\",\"buy autolink.exe\",\"home\",\"sa3\",\"backdoor\",\"sa3\",\"backdoor\",\"sa3\",\"backdoor\",\"sa3\"],\"lastUpdate\":1724987594435,\"lastSave\":1724987573254,\"totalPlaytime\":2795755600,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":false,\"cyclesWorked\":23351,\"factionWorkType\":\"hacking\",\"factionName\":\"BitRunners\"}},\"focus\":false,\"entropy\":0,\"bitNodeOptions\":{\"sourceFileOverrides\":{\"ctor\":\"JSONMap\",\"data\":[]},\"restrictHomePCUpgrade\":false,\"disableGang\":false,\"disableCorporation\":false,\"disableBladeburner\":false,\"disable4SData\":false,\"disableHacknetServer\":false,\"disableSleeveExpAndAugmentation\":false},\"identifier\":\"14fdc0ebf8c2cc\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":8,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"76.4.2.3\",\"isConnectedTo\":false,\"maxRam\":1073741824,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"fl1ght.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"DeepscanV1.exe\",\"DeepscanV2.exe\",\"AutoLink.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"util/thanos.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const files = ns.ls('home'); // Get the list of all files on 'home' server\\n    for (const file of files) {\\n        ns.rm(file, 'home'); // Remove each file\\n        ns.tprint(`Deleted file: ${file}`);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhhbm9zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvdGhhbm9zLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyw2Q0FBNkM7SUFFMUUsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLEVBQUU7UUFDdEIsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxtQkFBbUI7UUFDeEMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSxFQUFFLENBQUMsQ0FBQztLQUN0QztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCBmaWxlcyA9IG5zLmxzKCdob21lJyk7IC8vIEdldCB0aGUgbGlzdCBvZiBhbGwgZmlsZXMgb24gJ2hvbWUnIHNlcnZlclxyXG5cclxuICAgIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykge1xyXG4gICAgICAgIG5zLnJtKGZpbGUsICdob21lJyk7IC8vIFJlbW92ZSBlYWNoIGZpbGVcclxuICAgICAgICBucy50cHJpbnQoYERlbGV0ZWQgZmlsZTogJHtmaWxlfWApO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==\",\"filename\":\"util/thanos.js\",\"server\":\"home\"}}],[\"wormy/batching/super_jack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Work in progress script for calculating and deploying batches\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const homeServer = 'home';\\n    const ramBuffer = 0.50; // Reserve 0.50GB of RAM\\n    // Pass the target server from the arguments\\n    let targetServer = ns.args[0];\\n    if (!targetServer) {\\n        ns.tprint('WARN No target server provided');\\n        return;\\n    }\\n    ns.tprint(`SUCCESS: Starting advanced attack script on target server: ${targetServer}`);\\n    const rootServers = getRootServers(ns);\\n    rootServers.push(homeServer);\\n    // Try nuking the targetServer to gain root access\\n    tryNuke(ns, targetServer);\\n    // eslint-disable-next-line no-constant-condition\\n    const formulas = ns.formulas.hacking;\\n    while (true) {\\n        // Default to 5 seconds if no scripts are running\\n        let maxRunTime = 5000;\\n        for (let source of rootServers) {\\n            const scriptsRunning = ns.ps(source);\\n            for (let script of scriptsRunning) {\\n                // Validate timeRunning before using it\\n                if (script.timeRunning && !isNaN(script.timeRunning)) {\\n                    maxRunTime = Math.max(maxRunTime, script.timeRunning);\\n                }\\n            }\\n        }\\n        // Wait for max running time plus a bit buffer if scripts are running\\n        if (maxRunTime > 5000) {\\n            await ns.sleep((maxRunTime * 1000) + 100);\\n        }\\n        else {\\n            // If no scripts are running, just sleep for the default interval\\n            await ns.sleep(100);\\n        }\\n        for (let source of rootServers) {\\n            let action, threads, scriptPath;\\n            const player = ns.getPlayer();\\n            const server = ns.getServer(targetServer);\\n            const maxRam = ns.getServerMaxRam(source);\\n            const usedRam = ns.getServerUsedRam(source);\\n            const availableRam = maxRam - usedRam;\\n            const currentSecurity = ns.getServerSecurityLevel(targetServer);\\n            const currentMoney = ns.getServerMoneyAvailable(targetServer);\\n            const maxMoney = ns.getServerMaxMoney(targetServer);\\n            const securityThreshold = ns.getServerMinSecurityLevel(targetServer) + 10;\\n            const moneyThreshold = 0.90;\\n            if (currentSecurity > securityThreshold) {\\n                action = 'weaken';\\n                threads = calculateWeakenThreads(ns, targetServer);\\n                scriptPath = 'wormy/advanced/scripts/weaken.js';\\n            }\\n            else if ((currentMoney / maxMoney) < moneyThreshold) {\\n                action = 'grow';\\n                threads = calculateGrowThreads(ns, targetServer, 2); // 2x server's money\\n                scriptPath = 'wormy/advanced/scripts/grow.js';\\n            }\\n            else {\\n                action = 'hack';\\n                threads = calculateHackThreads(ns, targetServer, 0.5); // hack 50% of the money\\n                scriptPath = 'wormy/advanced/scripts/hack.js';\\n            }\\n            const scriptRam = ns.getScriptRam(scriptPath, homeServer);\\n            if (scriptRam <= 0) {\\n                ns.print(`WARN: Script RAM usage is zero or invalid for ${scriptPath} on home server ${homeServer}`);\\n                return;\\n            }\\n            if ((threads * scriptRam) > availableRam) {\\n                ns.print(`WARN: Not enough RAM available on ${source} for ${scriptPath} with ${threads} threads.`);\\n                continue;\\n            }\\n            ns.scp(scriptPath, source);\\n            ns.exec(scriptPath, source, threads, targetServer);\\n        }\\n    }\\n}\\n// Function checks for all servers that you have root access to\\nfunction getRootServers(ns, startServer = 'home') {\\n    let visitedServers = [];\\n    let serversToVisit = [startServer];\\n    while (serversToVisit.length > 0) {\\n        let currentServer = serversToVisit.pop();\\n        if (!visitedServers.includes(currentServer)) {\\n            visitedServers.push(currentServer);\\n            let connectedServers = ns.scan(currentServer);\\n            for (let server of connectedServers) {\\n                if (ns.hasRootAccess(server)) {\\n                    serversToVisit.push(server);\\n                }\\n            }\\n        }\\n    }\\n    return visitedServers;\\n}\\nfunction tryNuke(ns, server) {\\n    if (ns.fileExists('BruteSSH.exe', 'home'))\\n        ns.brutessh(server);\\n    if (ns.fileExists('FTPCrack.exe', 'home'))\\n        ns.ftpcrack(server);\\n    if (ns.fileExists('relaySMTP.exe', 'home'))\\n        ns.relaysmtp(server);\\n    if (ns.fileExists('HTTPWorm.exe', 'home'))\\n        ns.httpworm(server);\\n    if (ns.fileExists('SQLInject.exe', 'home'))\\n        ns.sqlinject(server);\\n    if (ns.getServerNumPortsRequired(server) <= 5) {\\n        ns.nuke(server);\\n    }\\n}\\n// Weaken threads calculation function\\nfunction calculateWeakenThreads(ns, targetServer) {\\n    const oldSecurity = ns.getServerSecurityLevel(targetServer);\\n    const securityThreshold = ns.getServerMinSecurityLevel(targetServer) + 10;\\n    const weakenEffect = ns.weakenAnalyze(1);\\n    return Math.ceil((oldSecurity - securityThreshold) / weakenEffect);\\n}\\n// Grow threads calculation function\\nfunction calculateGrowThreads(ns, targetServer, desiredMultiplier) {\\n    // Use growthAnalyze to calculate required threads for achieving the desired multiplier\\n    return Math.ceil(ns.growthAnalyze(targetServer, desiredMultiplier));\\n}\\nfunction calculateHackThreads(ns, targetServer, availablePercentage) {\\n    const maxMoney = ns.getServerMaxMoney(targetServer);\\n    const hackAmount = maxMoney * availablePercentage; // percentage of maxMoney you want to hack\\n    return Math.ceil(ns.hackAnalyzeThreads(targetServer, hackAmount));\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"wormy/batching/super_jack.js\",\"server\":\"home\"}}],[\"server/deploy.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const ServerName = ns.args[0];\\n    const maxServers = ns.getPurchasedServerLimit();\\n    let purchasedServers = ns.getPurchasedServers();\\n    let serversToPurchase = maxServers - purchasedServers.length;\\n    if (serversToPurchase <= 0) {\\n        ns.tprint(\\\"You already own the maximum number of servers.\\\");\\n        return;\\n    }\\n    //\\n    const ramOptions = [8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768];\\n    let affordableRamOption = ramOptions[0];\\n    for (let i = ramOptions.length - 1; i >= 0; i--) {\\n        const ramCost = ns.getPurchasedServerCost(ramOptions[i]);\\n        if (ns.getServerMoneyAvailable('home') >= ramCost) {\\n            affordableRamOption = ramOptions[i];\\n            break;\\n        }\\n    }\\n    while (serversToPurchase > 0 && ns.getServerMoneyAvailable('home') >= ns.getPurchasedServerCost(affordableRamOption)) {\\n        const newServer = ns.purchaseServer(`${ServerName}-${purchasedServers.length}`, affordableRamOption);\\n        if (newServer) {\\n            purchasedServers.push(newServer);\\n            serversToPurchase--;\\n            ns.tprint(`Purchased new server: ${newServer} with ${affordableRamOption}GB RAM`);\\n            await copyFilesToServer(ns, newServer); // Copy files to the new server\\n        }\\n        else {\\n            ns.tprint(\\\"Failed to purchase a new server. Insufficient funds or at server limit.\\\");\\n            break;\\n        }\\n    }\\n}\\nasync function copyFilesToServer(ns, targetServer) {\\n    if (!ns.hasRootAccess(targetServer)) {\\n        ns.tprint(`Error: You do not have root access to ${targetServer}.`);\\n        return;\\n    }\\n    const files = ns.ls('home').filter(file => file.endsWith('.js') || file.endsWith('.txt') || file.endsWith('.lit'));\\n    for (const file of files) {\\n        await ns.scp(file, 'home', targetServer);\\n    }\\n    ns.tprint(`Supported files copied to ${targetServer}.`);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwbG95LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NlcnZlci9kZXBsb3kuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5QixNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUMsdUJBQXVCLEVBQUUsQ0FBQztJQUNoRCxJQUFJLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0lBQ2hELElBQUksaUJBQWlCLEdBQUcsVUFBVSxHQUFHLGdCQUFnQixDQUFDLE1BQU0sQ0FBQztJQUU3RCxJQUFJLGlCQUFpQixJQUFJLENBQUMsRUFBRTtRQUN4QixFQUFFLENBQUMsTUFBTSxDQUFDLGdEQUFnRCxDQUFDLENBQUM7UUFDNUQsT0FBTztLQUNWO0lBQ0QsRUFBRTtJQUNGLE1BQU0sVUFBVSxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDeEYsSUFBSSxtQkFBbUIsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFeEMsS0FBSyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzdDLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6RCxJQUFJLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxNQUFNLENBQUMsSUFBSSxPQUFPLEVBQUU7WUFDL0MsbUJBQW1CLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLE1BQU07U0FDVDtLQUNKO0lBRUQsT0FBTyxpQkFBaUIsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFO1FBQ2xILE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUMsR0FBRyxVQUFVLElBQUksZ0JBQWdCLENBQUMsTUFBTSxFQUFFLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztRQUNyRyxJQUFJLFNBQVMsRUFBRTtZQUNYLGdCQUFnQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNqQyxpQkFBaUIsRUFBRSxDQUFDO1lBQ3BCLEVBQUUsQ0FBQyxNQUFNLENBQUMseUJBQXlCLFNBQVMsU0FBUyxtQkFBbUIsUUFBUSxDQUFDLENBQUM7WUFDbEYsTUFBTSxpQkFBaUIsQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQywrQkFBK0I7U0FDMUU7YUFBTTtZQUNILEVBQUUsQ0FBQyxNQUFNLENBQUMseUVBQXlFLENBQUMsQ0FBQztZQUNyRixNQUFNO1NBQ1Q7S0FDSjtBQUNMLENBQUM7QUFFRCxLQUFLLFVBQVUsaUJBQWlCLENBQUMsRUFBRSxFQUFFLFlBQVk7SUFDN0MsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDakMsRUFBRSxDQUFDLE1BQU0sQ0FBQyx5Q0FBeUMsWUFBWSxHQUFHLENBQUMsQ0FBQztRQUNwRSxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEtBQUssR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDbkgsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLEVBQUU7UUFDdEIsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7S0FDNUM7SUFFRCxFQUFFLENBQUMsTUFBTSxDQUFDLDZCQUE2QixZQUFZLEdBQUcsQ0FBQyxDQUFDO0FBQzVELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCBTZXJ2ZXJOYW1lID0gbnMuYXJnc1swXTtcclxuICAgIGNvbnN0IG1heFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJMaW1pdCgpO1xyXG4gICAgbGV0IHB1cmNoYXNlZFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCk7XHJcbiAgICBsZXQgc2VydmVyc1RvUHVyY2hhc2UgPSBtYXhTZXJ2ZXJzIC0gcHVyY2hhc2VkU2VydmVycy5sZW5ndGg7XHJcblxyXG4gICAgaWYgKHNlcnZlcnNUb1B1cmNoYXNlIDw9IDApIHtcclxuICAgICAgICBucy50cHJpbnQoXCJZb3UgYWxyZWFkeSBvd24gdGhlIG1heGltdW0gbnVtYmVyIG9mIHNlcnZlcnMuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIC8vXHJcbiAgICBjb25zdCByYW1PcHRpb25zID0gWzgsIDE2LCAzMiwgNjQsIDEyOCwgMjU2LCA1MTIsIDEwMjQsIDIwNDgsIDQwOTYsIDgxOTIsIDE2Mzg0LCAzMjc2OF07XHJcbiAgICBsZXQgYWZmb3JkYWJsZVJhbU9wdGlvbiA9IHJhbU9wdGlvbnNbMF07XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IHJhbU9wdGlvbnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgICBjb25zdCByYW1Db3N0ID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVyQ29zdChyYW1PcHRpb25zW2ldKTtcclxuICAgICAgICBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoJ2hvbWUnKSA+PSByYW1Db3N0KSB7XHJcbiAgICAgICAgICAgIGFmZm9yZGFibGVSYW1PcHRpb24gPSByYW1PcHRpb25zW2ldO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgd2hpbGUgKHNlcnZlcnNUb1B1cmNoYXNlID4gMCAmJiBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSgnaG9tZScpID49IG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QoYWZmb3JkYWJsZVJhbU9wdGlvbikpIHtcclxuICAgICAgICBjb25zdCBuZXdTZXJ2ZXIgPSBucy5wdXJjaGFzZVNlcnZlcihgJHtTZXJ2ZXJOYW1lfS0ke3B1cmNoYXNlZFNlcnZlcnMubGVuZ3RofWAsIGFmZm9yZGFibGVSYW1PcHRpb24pO1xyXG4gICAgICAgIGlmIChuZXdTZXJ2ZXIpIHtcclxuICAgICAgICAgICAgcHVyY2hhc2VkU2VydmVycy5wdXNoKG5ld1NlcnZlcik7XHJcbiAgICAgICAgICAgIHNlcnZlcnNUb1B1cmNoYXNlLS07XHJcbiAgICAgICAgICAgIG5zLnRwcmludChgUHVyY2hhc2VkIG5ldyBzZXJ2ZXI6ICR7bmV3U2VydmVyfSB3aXRoICR7YWZmb3JkYWJsZVJhbU9wdGlvbn1HQiBSQU1gKTtcclxuICAgICAgICAgICAgYXdhaXQgY29weUZpbGVzVG9TZXJ2ZXIobnMsIG5ld1NlcnZlcik7IC8vIENvcHkgZmlsZXMgdG8gdGhlIG5ldyBzZXJ2ZXJcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBucy50cHJpbnQoXCJGYWlsZWQgdG8gcHVyY2hhc2UgYSBuZXcgc2VydmVyLiBJbnN1ZmZpY2llbnQgZnVuZHMgb3IgYXQgc2VydmVyIGxpbWl0LlwiKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBjb3B5RmlsZXNUb1NlcnZlcihucywgdGFyZ2V0U2VydmVyKSB7XHJcbiAgICBpZiAoIW5zLmhhc1Jvb3RBY2Nlc3ModGFyZ2V0U2VydmVyKSkge1xyXG4gICAgICAgIG5zLnRwcmludChgRXJyb3I6IFlvdSBkbyBub3QgaGF2ZSByb290IGFjY2VzcyB0byAke3RhcmdldFNlcnZlcn0uYCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGZpbGVzID0gbnMubHMoJ2hvbWUnKS5maWx0ZXIoZmlsZSA9PiBmaWxlLmVuZHNXaXRoKCcuanMnKSB8fCBmaWxlLmVuZHNXaXRoKCcudHh0JykgfHwgZmlsZS5lbmRzV2l0aCgnLmxpdCcpKTtcclxuICAgIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykge1xyXG4gICAgICAgIGF3YWl0IG5zLnNjcChmaWxlLCAnaG9tZScsIHRhcmdldFNlcnZlcik7XHJcbiAgICB9XHJcblxyXG4gICAgbnMudHByaW50KGBTdXBwb3J0ZWQgZmlsZXMgY29waWVkIHRvICR7dGFyZ2V0U2VydmVyfS5gKTtcclxufSJdfQ==\",\"filename\":\"server/deploy.js\",\"server\":\"home\"}}],[\"server/trade-server.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const serverRam = 8;\\n    const serverName = 'trader';\\n    const serverCost = ns.getPurchasedServerCost(serverRam);\\n    // Check if the player has enough money\\n    if (ns.getServerMoneyAvailable('home') < serverCost) {\\n        ns.tprint(`Not enough money to purchase ${serverRam} server`);\\n        return;\\n    }\\n    // Purchase the server\\n    ns.purchaseServer(serverName, serverRam);\\n    // Scripts to be copied\\n    const scriptFiles = ['server/trade.js', 'server/helper.js'];\\n    // Copy all scripts to the new server\\n    for (let i = 0; i < scriptFiles.length; i++) {\\n        // Only copy the script file if it exists on the home server\\n        if (ns.fileExists(scriptFiles[i], 'home')) {\\n            ns.scp(scriptFiles[i], serverName, 'home');\\n            1;\\n        }\\n    }\\n    // Execute one of the scripts if it exists on the server\\n    if (scriptFiles.length > 0 && ns.fileExists(scriptFiles[0], serverName)) {\\n        if (!ns.isRunning(scriptFiles[0], serverName)) {\\n            ns.exec('server/trade.js', serverName, 1);\\n        }\\n    }\\n    else {\\n        ns.tprint('No script files available on the server to run');\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhZGUtc2VydmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NlcnZlci90cmFkZS1zZXJ2ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBQ3BCLE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQztJQUM1QixNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFeEQsdUNBQXVDO0lBQ3ZDLElBQUksRUFBRSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxHQUFHLFVBQVUsRUFBRTtRQUNqRCxFQUFFLENBQUMsTUFBTSxDQUFDLGdDQUFnQyxTQUFTLFNBQVMsQ0FBQyxDQUFDO1FBQzlELE9BQU87S0FDVjtJQUVELHNCQUFzQjtJQUN0QixFQUFFLENBQUMsY0FBYyxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUV6Qyx1QkFBdUI7SUFDdkIsTUFBTSxXQUFXLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBRTVELHFDQUFxQztJQUNyQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN6Qyw0REFBNEQ7UUFDNUQsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRTtZQUN2QyxFQUFFLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFBQSxDQUFDLENBQUE7U0FDL0M7S0FDSjtJQUVELHdEQUF3RDtJQUN4RCxJQUFJLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxFQUFFO1FBQ3JFLElBQUcsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsRUFBRTtZQUMxQyxFQUFFLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUM3QztLQUNKO1NBQU07UUFDSCxFQUFFLENBQUMsTUFBTSxDQUFDLGdEQUFnRCxDQUFDLENBQUM7S0FDL0Q7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgY29uc3Qgc2VydmVyUmFtID0gODtcclxuICAgIGNvbnN0IHNlcnZlck5hbWUgPSAndHJhZGVyJztcclxuICAgIGNvbnN0IHNlcnZlckNvc3QgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJDb3N0KHNlcnZlclJhbSk7XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgdGhlIHBsYXllciBoYXMgZW5vdWdoIG1vbmV5XHJcbiAgICBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoJ2hvbWUnKSA8IHNlcnZlckNvc3QpIHtcclxuICAgICAgICBucy50cHJpbnQoYE5vdCBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgJHtzZXJ2ZXJSYW19IHNlcnZlcmApO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBQdXJjaGFzZSB0aGUgc2VydmVyXHJcbiAgICBucy5wdXJjaGFzZVNlcnZlcihzZXJ2ZXJOYW1lLCBzZXJ2ZXJSYW0pO1xyXG5cclxuICAgIC8vIFNjcmlwdHMgdG8gYmUgY29waWVkXHJcbiAgICBjb25zdCBzY3JpcHRGaWxlcyA9IFsnc2VydmVyL3RyYWRlLmpzJywgJ3NlcnZlci9oZWxwZXIuanMnXTtcclxuXHJcbiAgICAvLyBDb3B5IGFsbCBzY3JpcHRzIHRvIHRoZSBuZXcgc2VydmVyXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNjcmlwdEZpbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgLy8gT25seSBjb3B5IHRoZSBzY3JpcHQgZmlsZSBpZiBpdCBleGlzdHMgb24gdGhlIGhvbWUgc2VydmVyXHJcbiAgICAgICAgaWYgKG5zLmZpbGVFeGlzdHMoc2NyaXB0RmlsZXNbaV0sICdob21lJykpIHtcclxuICAgICAgICAgICAgbnMuc2NwKHNjcmlwdEZpbGVzW2ldLCBzZXJ2ZXJOYW1lLCAnaG9tZScpOzFcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRXhlY3V0ZSBvbmUgb2YgdGhlIHNjcmlwdHMgaWYgaXQgZXhpc3RzIG9uIHRoZSBzZXJ2ZXJcclxuICAgIGlmIChzY3JpcHRGaWxlcy5sZW5ndGggPiAwICYmIG5zLmZpbGVFeGlzdHMoc2NyaXB0RmlsZXNbMF0sIHNlcnZlck5hbWUpKSB7XHJcbiAgICAgICAgaWYoIW5zLmlzUnVubmluZyhzY3JpcHRGaWxlc1swXSwgc2VydmVyTmFtZSkpIHtcclxuICAgICAgICAgICAgbnMuZXhlYygnc2VydmVyL3RyYWRlLmpzJywgc2VydmVyTmFtZSwgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBucy50cHJpbnQoJ05vIHNjcmlwdCBmaWxlcyBhdmFpbGFibGUgb24gdGhlIHNlcnZlciB0byBydW4nKTtcclxuICAgIH1cclxufSJdfQ==\",\"filename\":\"server/trade-server.js\",\"server\":\"home\"}}],[\"server/helper.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Return a formatted representation of the monetary amount using scale symbols (e.g. $6.50M)\\n * @param {number} num - The number to format\\n * @param {number=} maxSignificantFigures - (default: 6) The maximum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} maxDecimalPlaces - (default: 3) The maximum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatMoney(num, maxSignificantFigures = 6, maxDecimalPlaces = 3) {\\n    let numberShort = formatNumberShort(num, maxSignificantFigures, maxDecimalPlaces);\\n    return num >= 0 ? \\\"$\\\" + numberShort : numberShort.replace(\\\"-\\\", \\\"-$\\\");\\n}\\nconst symbols = [\\\"\\\", \\\"k\\\", \\\"m\\\", \\\"b\\\", \\\"t\\\", \\\"q\\\", \\\"Q\\\", \\\"s\\\", \\\"S\\\", \\\"o\\\", \\\"n\\\", \\\"e33\\\", \\\"e36\\\", \\\"e39\\\"];\\n/**\\n * Return a formatted representation of the monetary amount using scale sympols (e.g. 6.50M)\\n * @param {number} num - The number to format\\n * @param {number=} maxSignificantFigures - (default: 6) The maximum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} maxDecimalPlaces - (default: 3) The maximum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatNumberShort(num, maxSignificantFigures = 6, maxDecimalPlaces = 3) {\\n    if (Math.abs(num) > 10 ** (3 * symbols.length)) // If we've exceeded our max symbol, switch to exponential notation\\n        return num.toExponential(Math.min(maxDecimalPlaces, maxSignificantFigures - 1));\\n    for (var i = 0, sign = Math.sign(num), num = Math.abs(num); num >= 1000 && i < symbols.length; i++)\\n        num /= 1000;\\n    // TODO: A number like 9.999 once rounded to show 3 sig figs, will become 10.00, which is now 4 sig figs.\\n    return ((sign < 0) ? \\\"-\\\" : \\\"\\\") + num.toFixed(Math.max(0, Math.min(maxDecimalPlaces, maxSignificantFigures - Math.floor(1 + Math.log10(num))))) + symbols[i];\\n}\\n/** Convert a shortened number back into a value */\\nexport function parseShortNumber(text = \\\"0\\\") {\\n    let parsed = Number(text);\\n    if (!isNaN(parsed))\\n        return parsed;\\n    for (const sym of symbols.slice(1))\\n        if (text.toLowerCase().endsWith(sym))\\n            return Number.parseFloat(text.slice(0, text.length - sym.length)) * Math.pow(10, 3 * symbols.indexOf(sym));\\n    return Number.NaN;\\n}\\n/**\\n * Return a number formatted with the specified number of significatnt figures or decimal places, whichever is more limiting.\\n * @param {number} num - The number to format\\n * @param {number=} minSignificantFigures - (default: 6) The minimum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} minDecimalPlaces - (default: 3) The minimum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatNumber(num, minSignificantFigures = 3, minDecimalPlaces = 1) {\\n    return num == 0.0 ? num : num.toFixed(Math.max(minDecimalPlaces, Math.max(0, minSignificantFigures - Math.ceil(Math.log10(num)))));\\n}\\n/** Formats some RAM amount as a round number of GB with thousands separators e.g. `1,028 GB` */\\nexport function formatRam(num) {\\n    return `${Math.round(num).toLocaleString('en')} GB`;\\n}\\n/** Return a datatime in ISO format */\\nexport function formatDateTime(datetime) {\\n    return datetime.toISOString();\\n}\\n/** Format a duration (in milliseconds) as e.g. '1h 21m 6s' for big durations or e.g '12.5s' / '23ms' for small durations */\\nexport function formatDuration(duration) {\\n    if (duration < 1000)\\n        return `${duration.toFixed(0)}ms`;\\n    if (!isFinite(duration))\\n        return 'forever (Infinity)';\\n    const portions = [];\\n    const msInHour = 1000 * 60 * 60;\\n    const hours = Math.trunc(duration / msInHour);\\n    if (hours > 0) {\\n        portions.push(hours + 'h');\\n        duration -= (hours * msInHour);\\n    }\\n    const msInMinute = 1000 * 60;\\n    const minutes = Math.trunc(duration / msInMinute);\\n    if (minutes > 0) {\\n        portions.push(minutes + 'm');\\n        duration -= (minutes * msInMinute);\\n    }\\n    let seconds = (duration / 1000.0);\\n    // Include millisecond precision if we're on the order of seconds\\n    seconds = (hours == 0 && minutes == 0) ? seconds.toPrecision(3) : seconds.toFixed(0);\\n    if (seconds > 0) {\\n        portions.push(seconds + 's');\\n        duration -= (minutes * 1000);\\n    }\\n    return portions.join(' ');\\n}\\n/** Generate a hashCode for a string that is pretty unique most of the time */\\nexport function hashCode(s) {\\n    return s.split(\\\"\\\").reduce(function (a, b) {\\n        a = ((a << 5) - a) + b.charCodeAt(0);\\n        return a & a;\\n    }, 0);\\n}\\n/** @param {NS} ns **/\\nexport function disableLogs(ns, listOfLogs) {\\n    ['disableLog'].concat(...listOfLogs).forEach(log => checkNsInstance(ns, '\\\"disableLogs\\\"').disableLog(log));\\n}\\n/** Joins all arguments as components in a path, e.g. pathJoin(\\\"foo\\\", \\\"bar\\\", \\\"/baz\\\") = \\\"foo/bar/baz\\\" **/\\nexport function pathJoin(...args) {\\n    return args.filter(s => !!s).join('/').replace(/\\\\/\\\\/+/g, '/');\\n}\\n/** Gets the path for the given local file, taking into account optional subfolder relocation via git-pull.js **/\\nexport function getFilePath(file) {\\n    const subfolder = ''; // git-pull.js optionally modifies this when downloading\\n    return pathJoin(subfolder, file);\\n}\\n// FUNCTIONS THAT PROVIDE ALTERNATIVE IMPLEMENTATIONS TO EXPENSIVE NS FUNCTIONS\\n// VARIATIONS ON NS.RUN\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.run in your script **/\\nexport function getFnRunViaNsRun(ns) {\\n    return checkNsInstance(ns, '\\\"getFnRunViaNsRun\\\"').run;\\n}\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.exec in your script **/\\nexport function getFnRunViaNsExec(ns, host = \\\"home\\\") {\\n    checkNsInstance(ns, '\\\"getFnRunViaNsExec\\\"');\\n    return function (scriptPath, ...args) {\\n        return ns.exec(scriptPath, host, ...args);\\n    };\\n}\\n// VARIATIONS ON NS.ISRUNNING\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.run in your script  */\\nexport function getFnIsAliveViaNsIsRunning(ns) {\\n    return checkNsInstance(ns, '\\\"getFnIsAliveViaNsIsRunning\\\"').isRunning;\\n}\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.ps in your script  */\\nexport function getFnIsAliveViaNsPs(ns) {\\n    checkNsInstance(ns, '\\\"getFnIsAliveViaNsPs\\\"');\\n    return function (pid, host) {\\n        return ns.ps(host).some(process => process.pid === pid);\\n    };\\n}\\n/**\\n * Retrieve the result of an ns command by executing it in a temporary .js script, writing the result to a file, then shuting it down\\n * Importing incurs a maximum of 1.1 GB RAM (0 GB for ns.read, 1 GB for ns.run, 0.1 GB for ns.isRunning).\\n * Has the capacity to retry if there is a failure (e.g. due to lack of RAM available). Not recommended for performance-critical code.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fName - (default \\\"/Temp/{command-name}.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n * @param {bool=} verbose - (default false) If set to true, pid and result of command are logged.\\n **/\\nexport async function getNsDataThroughFile(ns, command, fName = null, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"getNsDataThroughFile\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['run', 'isRunning']);\\n    return await getNsDataThroughFile_Custom(ns, ns.run, command, fName, args, verbose, maxRetries, retryDelayMs);\\n}\\n/** Convert a command name like \\\"ns.namespace.someFunction(args, args)\\\" into\\n * a default file path for running that command \\\"/Temp/namespace-someFunction.txt\\\" */\\nfunction getDefaultCommandFileName(command, ext = '.txt') {\\n    // If prefixed with \\\"ns.\\\", strip that out\\n    let fname = command;\\n    if (fname.startsWith(\\\"ns.\\\"))\\n        fname = fname.slice(3);\\n    // Remove anything between parentheses\\n    fname = fname.replace(/ *\\\\([^)]*\\\\) */g, \\\"\\\");\\n    // Replace any dereferencing (dots) with dashes\\n    fname = fname.replace(\\\".\\\", \\\"-\\\");\\n    return `/Temp/${fname}${ext}`;\\n}\\n/**\\n * An advanced version of getNsDataThroughFile that lets you pass your own \\\"fnRun\\\" implementation to reduce RAM requirements\\n * Importing incurs no RAM (now that ns.read is free) plus whatever fnRun you provide it\\n * Has the capacity to retry if there is a failure (e.g. due to lack of RAM available). Not recommended for performance-critical code.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {function} fnRun - A single-argument function used to start the new sript, e.g. `ns.run` or `(f,...args) => ns.exec(f, \\\"home\\\", ...args)`\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n **/\\nexport async function getNsDataThroughFile_Custom(ns, fnRun, command, fName = null, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"getNsDataThroughFile_Custom\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['read']);\\n    fName = fName || getDefaultCommandFileName(command);\\n    const fNameCommand = fName + '.js';\\n    // Pre-write contents to the file that will allow us to detect if our temp script never got run\\n    const initialContents = \\\"<Insufficient RAM>\\\";\\n    ns.write(fName, initialContents, 'w');\\n    // TODO: Workaround for v2.3.0 deprecation. Remove when the warning is gone.\\n    // Avoid serializing ns.getPlayer() properties that generate warnings\\n    if (command === \\\"ns.getPlayer()\\\")\\n        command = `( ()=> { let player = ns.getPlayer();\\r\\n            const excludeProperties = ['playtimeSinceLastAug', 'playtimeSinceLastBitnode', 'bitNodeN'];\\r\\n            return Object.keys(player).reduce((pCopy, key) => {\\r\\n                if (!excludeProperties.includes(key))\\r\\n                   pCopy[key] = player[key];\\r\\n                return pCopy;\\r\\n            }, {});\\r\\n        })()`;\\n    // Prepare a command that will write out a new file containing the results of the command\\n    // unless it already exists with the same contents (saves time/ram to check first)\\n    // If an error occurs, it will write an empty file to avoid old results being misread.\\n    const commandToFile = `let r;try{r=JSON.stringify(\\\\n` +\\n        `    ${command}\\\\n` +\\n        `);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\\\n` +\\n        `const f=\\\"${fName}\\\"; if(ns.read(f)!==r) ns.write(f,r,'w')`;\\n    // Run the command with auto-retries if it fails\\n    const pid = await runCommand_Custom(ns, fnRun, commandToFile, fNameCommand, args, verbose, maxRetries, retryDelayMs);\\n    // Wait for the process to complete. Note, as long as the above returned a pid, we don't actually have to check it, just the file contents\\n    const fnIsAlive = (ignored_pid) => ns.read(fName) === initialContents;\\n    await waitForProcessToComplete_Custom(ns, fnIsAlive, pid, verbose);\\n    if (verbose)\\n        log(ns, `Process ${pid} is done. Reading the contents of ${fName}...`);\\n    // Read the file, with auto-retries if it fails // TODO: Unsure reading a file can fail or needs retrying.\\n    let lastRead;\\n    const fileData = await autoRetry(ns, () => ns.read(fName), f => (lastRead = f) !== undefined && f !== \\\"\\\" && f !== initialContents && !(typeof f == \\\"string\\\" && f.startsWith(\\\"ERROR: \\\")), () => `\\\\nns.read('${fName}') returned a bad result: \\\"${lastRead}\\\".` +\\n        `\\\\n  Script:  ${fNameCommand}\\\\n  Args:    ${JSON.stringify(args)}\\\\n  Command: ${command}` +\\n        (lastRead == undefined ? '\\\\nThe developer has no idea how this could have happened. Please post a screenshot of this error on discord.' :\\n            lastRead == initialContents ? `\\\\nThe script that ran this will likely recover and try again later once you have more free ram.` :\\n                lastRead == \\\"\\\" ? `\\\\nThe file appears to have been deleted before a result could be retrieved. Perhaps there is a conflicting script.` :\\n                    `\\\\nThe script was likely passed invalid arguments. Please post a screenshot of this error on discord.`), maxRetries, retryDelayMs, undefined, verbose, verbose);\\n    if (verbose)\\n        log(ns, `Read the following data for command ${command}:\\\\n${fileData}`);\\n    return JSON.parse(fileData); // Deserialize it back into an object/array and return\\n}\\n/** Evaluate an arbitrary ns command by writing it to a new script and then running or executing it.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fileName - (default \\\"/Temp/{command-name}.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n * @param {bool=} verbose - (default false) If set to true, the evaluation result of the command is printed to the terminal\\n */\\nexport async function runCommand(ns, command, fileName, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"runCommand\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['run']);\\n    return await runCommand_Custom(ns, ns.run, command, fileName, args, verbose, maxRetries, retryDelayMs);\\n}\\nconst _cachedExports = [];\\n/** @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @returns {string[]} The set of all funciton names exported by this file. */\\nfunction getExports(ns) {\\n    if (_cachedExports.length > 0)\\n        return _cachedExports;\\n    const scriptHelpersRows = ns.read(getFilePath('server/helper.js')).split(\\\"\\\\n\\\");\\n    for (const row of scriptHelpersRows) {\\n        if (!row.startsWith(\\\"export\\\"))\\n            continue;\\n        const funcNameStart = row.indexOf(\\\"function\\\") + \\\"function\\\".length + 1;\\n        const funcNameEnd = row.indexOf(\\\"(\\\", funcNameStart);\\n        _cachedExports.push(row.substring(funcNameStart, funcNameEnd));\\n    }\\n    return _cachedExports;\\n}\\n/**\\n * An advanced version of runCommand that lets you pass your own \\\"isAlive\\\" test to reduce RAM requirements (e.g. to avoid referencing ns.isRunning)\\n * Importing incurs 0 GB RAM (assuming fnRun, fnWrite are implemented using another ns function you already reference elsewhere like ns.exec)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {function} fnRun - A single-argument function used to start the new sript, e.g. `ns.run` or `(f,...args) => ns.exec(f, \\\"home\\\", ...args)`\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fileName - (default \\\"/Temp/{commandhash}-data.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n **/\\nexport async function runCommand_Custom(ns, fnRun, command, fileName, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"runCommand_Custom\\\"');\\n    if (!Array.isArray(args))\\n        throw new Error(`args specified were a ${typeof args}, but an array is required.`);\\n    if (!verbose)\\n        disableLogs(ns, ['sleep']);\\n    // Auto-import any helpers that the temp script attempts to use\\n    const required = getExports(ns).filter(e => command.includes(`${e}(`));\\n    let script = (required.length > 0 ? `import { ${required.join(\\\", \\\")} } from 'server/helper.js'\\\\n` : '') +\\n        `export async function main(ns) { ${command} }`;\\n    fileName = fileName || getDefaultCommandFileName(command, '.js');\\n    if (verbose)\\n        log(ns, `INFO: Using a temporary script (${fileName}) to execute the command:` +\\n            `\\\\n  ${command}\\\\nWith the following arguments:    ${JSON.stringify(args)}`);\\n    // It's possible for the file to be deleted while we're trying to execute it, so even wrap writing the file in a retry\\n    return await autoRetry(ns, async () => {\\n        // To improve performance, don't re-write the temp script if it's already in place with the correct contents.\\n        const oldContents = ns.read(fileName);\\n        if (oldContents != script) {\\n            if (oldContents) // Create some noise if temp scripts are being created with the same name but different contents\\n                ns.tprint(`WARNING: Had to overwrite temp script ${fileName}\\\\nOld Contents:\\\\n${oldContents}\\\\nNew Contents:\\\\n${script}` +\\n                    `\\\\nThis warning is generated as part of an effort to switch over to using only 'immutable' temp scripts. ` +\\n                    `Please paste a screenshot in Discord at https://discord.com/channels/415207508303544321/935667531111342200`);\\n            ns.write(fileName, script, \\\"w\\\");\\n            // Wait for the script to appear and be readable (game can be finicky on actually completing the write)\\n            await autoRetry(ns, () => ns.read(fileName), c => c == script, () => `Temporary script ${fileName} is not available, ` +\\n                `despite having written it. (Did a competing process delete or overwrite it?)`, maxRetries, retryDelayMs, undefined, verbose, verbose);\\n        }\\n        // Run the script, now that we're sure it is in place\\n        return fnRun(fileName, 1 /* Always 1 thread */, ...args);\\n    }, pid => pid !== 0, () => `The temp script was not run (likely due to insufficient RAM).` +\\n        `\\\\n  Script:  ${fileName}\\\\n  Args:    ${JSON.stringify(args)}\\\\n  Command: ${command}` +\\n        `\\\\nThe script that ran this will likely recover and try again later once you have more free ram.`, maxRetries, retryDelayMs, undefined, verbose, verbose);\\n}\\n/**\\n * Wait for a process id to complete running\\n * Importing incurs a maximum of 0.1 GB RAM (for ns.isRunning)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {int} pid - The process id to monitor\\n * @param {bool=} verbose - (default false) If set to true, pid and result of command are logged.\\n **/\\nexport async function waitForProcessToComplete(ns, pid, verbose) {\\n    checkNsInstance(ns, '\\\"waitForProcessToComplete\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['isRunning']);\\n    return await waitForProcessToComplete_Custom(ns, ns.isRunning, pid, verbose);\\n}\\n/**\\n * An advanced version of waitForProcessToComplete that lets you pass your own \\\"isAlive\\\" test to reduce RAM requirements (e.g. to avoid referencing ns.isRunning)\\n * Importing incurs 0 GB RAM (assuming fnIsAlive is implemented using another ns function you already reference elsewhere like ns.ps)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {(pid: number) => Promise<boolean>} fnIsAlive - A single-argument function used to start the new sript, e.g. `ns.isRunning` or `pid => ns.ps(\\\"home\\\").some(process => process.pid === pid)`\\n **/\\nexport async function waitForProcessToComplete_Custom(ns, fnIsAlive, pid, verbose) {\\n    checkNsInstance(ns, '\\\"waitForProcessToComplete_Custom\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['sleep']);\\n    // Wait for the PID to stop running (cheaper than e.g. deleting (rm) a possibly pre-existing file and waiting for it to be recreated)\\n    let start = Date.now();\\n    let sleepMs = 1;\\n    let done = false;\\n    for (var retries = 0; retries < 1000; retries++) {\\n        if (!(await fnIsAlive(pid))) {\\n            done = true;\\n            break; // Script is done running\\n        }\\n        if (verbose && retries % 100 === 0)\\n            ns.print(`Waiting for pid ${pid} to complete... (${formatDuration(Date.now() - start)})`);\\n        await ns.sleep(sleepMs);\\n        sleepMs = Math.min(sleepMs * 2, 200);\\n    }\\n    // Make sure that the process has shut down and we haven't just stopped retrying\\n    if (!done) {\\n        let errorMessage = `run-command pid ${pid} is running much longer than expected. Max retries exceeded.`;\\n        ns.print(errorMessage);\\n        throw new Error(errorMessage);\\n    }\\n}\\n/** If the argument is an Error instance, returns it as is, otherwise, returns a new Error instance. */\\nfunction asError(error) {\\n    return error instanceof Error ? error : new Error(typeof error === 'string' ? error : JSON.stringify(error));\\n}\\n/** Helper to retry something that failed temporarily (can happen when e.g. we temporarily don't have enough RAM to run)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport async function autoRetry(ns, fnFunctionThatMayFail, fnSuccessCondition, errorContext = \\\"Success condition not met\\\", maxRetries = 5, initialRetryDelayMs = 50, backoffRate = 3, verbose = false, tprintFatalErrors = true) {\\n    checkNsInstance(ns, '\\\"autoRetry\\\"');\\n    let retryDelayMs = initialRetryDelayMs, attempts = 0;\\n    while (attempts++ <= maxRetries) {\\n        try {\\n            const result = await fnFunctionThatMayFail();\\n            const error = typeof errorContext === 'string' ? errorContext : errorContext();\\n            if (!fnSuccessCondition(result))\\n                throw asError(error);\\n            return result;\\n        }\\n        catch (error) {\\n            const fatal = attempts >= maxRetries;\\n            log(ns, `${fatal ? 'FAIL' : 'INFO'}: Attempt ${attempts} of ${maxRetries} failed` +\\n                (fatal ? `: ${typeof error === 'string' ? error : error.message || JSON.stringify(error)}` : `. Trying again in ${retryDelayMs}ms...`), tprintFatalErrors && fatal, !verbose ? undefined : (fatal ? 'error' : 'info'));\\n            if (fatal)\\n                throw asError(error);\\n            await ns.sleep(retryDelayMs);\\n            retryDelayMs *= backoffRate;\\n        }\\n    }\\n}\\n/** Helper to log a message, and optionally also tprint it and toast it\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport function log(ns, message = \\\"\\\", alsoPrintToTerminal = false, toastStyle = \\\"\\\", maxToastLength = Number.MAX_SAFE_INTEGER) {\\n    checkNsInstance(ns, '\\\"log\\\"');\\n    ns.print(message);\\n    if (toastStyle)\\n        ns.toast(message.length <= maxToastLength ? message : message.substring(0, maxToastLength - 3) + \\\"...\\\", toastStyle);\\n    if (alsoPrintToTerminal) {\\n        ns.tprint(message);\\n        // TODO: Find a way write things logged to the terminal to a \\\"permanent\\\" terminal log file, preferably without this becoming an async function.\\n        //       Perhaps we copy logs to a port so that a separate script can optionally pop and append them to a file.\\n        //ns.write(\\\"log.terminal.txt\\\", message + '\\\\n', 'a'); // Note: we should get away with not awaiting this promise since it's not a script file\\n    }\\n    return message;\\n}\\n/** Helper to get a list of all hostnames on the network\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport function scanAllServers(ns) {\\n    checkNsInstance(ns, '\\\"scanAllServers\\\"');\\n    let discoveredHosts = []; // Hosts (a.k.a. servers) we have scanned\\n    let hostsToScan = [\\\"home\\\"]; // Hosts we know about, but have no yet scanned\\n    let infiniteLoopProtection = 9999; // In case you mess with this code, this should save you from getting stuck\\n    while (hostsToScan.length > 0 && infiniteLoopProtection-- > 0) { // Loop until the list of hosts to scan is empty\\n        let hostName = hostsToScan.pop(); // Get the next host to be scanned\\n        discoveredHosts.push(hostName); // Mark this host as \\\"scanned\\\"\\n        for (const connectedHost of ns.scan(hostName)) // \\\"scan\\\" (list all hosts connected to this one)\\n            if (!discoveredHosts.includes(connectedHost) && !hostsToScan.includes(connectedHost)) // If we haven't found this host\\n                hostsToScan.push(connectedHost); // Add it to the queue of hosts to be scanned\\n    }\\n    return discoveredHosts; // The list of scanned hosts should now be the set of all hosts in the game!\\n}\\n/** @param {NS} ns\\n * Get a dictionary of active source files, taking into account the current active bitnode as well (optionally disabled). **/\\nexport async function getActiveSourceFiles(ns, includeLevelsFromCurrentBitnode = true) {\\n    return await getActiveSourceFiles_Custom(ns, getNsDataThroughFile, includeLevelsFromCurrentBitnode);\\n}\\n/** @param {NS} ns\\n * @param {(ns: NS, command: string, fName?: string, args?: any, verbose?: any, maxRetries?: number, retryDelayMs?: number) => Promise<any>} fnGetNsDataThroughFile\\n * getActiveSourceFiles Helper that allows the user to pass in their chosen implementation of getNsDataThroughFile to minimize RAM usage **/\\nexport async function getActiveSourceFiles_Custom(ns, fnGetNsDataThroughFile, includeLevelsFromCurrentBitnode = true) {\\n    checkNsInstance(ns, '\\\"getActiveSourceFiles\\\"');\\n    // Find out what source files the user has unlocked\\n    let dictSourceFiles;\\n    try {\\n        dictSourceFiles = await fnGetNsDataThroughFile(ns, `Object.fromEntries(ns.singularity.getOwnedSourceFiles().map(sf => [sf.n, sf.lvl]))`, '/Temp/owned-source-files.txt');\\n    }\\n    catch {\\n        dictSourceFiles = {};\\n    } // If this fails (e.g. low RAM), return an empty dictionary\\n    // If the user is currently in a given bitnode, they will have its features unlocked\\n    if (includeLevelsFromCurrentBitnode) {\\n        try {\\n            const currentNode = (await fnGetNsDataThroughFile(ns, 'ns.getResetInfo()', '/Temp/reset-info.txt')).currentNode;\\n            dictSourceFiles[currentNode] = Math.max(3, dictSourceFiles[currentNode] || 0);\\n        }\\n        catch { /* We are expected to be fault-tolerant in low-ram conditions */\\n        }\\n    }\\n    return dictSourceFiles;\\n}\\n/** @param {NS} ns\\n * Return bitnode multiplers, or null if they cannot be accessed. **/\\nexport async function tryGetBitNodeMultipliers(ns) {\\n    return await tryGetBitNodeMultipliers_Custom(ns, getNsDataThroughFile);\\n}\\n/** @param {NS} ns\\n * tryGetBitNodeMultipliers Helper that allows the user to pass in their chosen implementation of getNsDataThroughFile to minimize RAM usage **/\\nexport async function tryGetBitNodeMultipliers_Custom(ns, fnGetNsDataThroughFile) {\\n    checkNsInstance(ns, '\\\"tryGetBitNodeMultipliers\\\"');\\n    let canGetBitNodeMultipliers = false;\\n    try {\\n        canGetBitNodeMultipliers = 5 in (await getActiveSourceFiles_Custom(ns, fnGetNsDataThroughFile));\\n    }\\n    catch {\\n    }\\n    if (!canGetBitNodeMultipliers)\\n        return null;\\n    try {\\n        return await fnGetNsDataThroughFile(ns, 'ns.getBitNodeMultipliers()', '/Temp/bitnode-multipliers.txt');\\n    }\\n    catch {\\n    }\\n    return null;\\n}\\n/** @param {NS} ns\\n * Returns the number of instances of the current script running on the specified host. **/\\nexport async function instanceCount(ns, onHost = \\\"home\\\", warn = true, tailOtherInstances = true) {\\n    checkNsInstance(ns, '\\\"alreadyRunning\\\"');\\n    const scriptName = ns.getScriptName();\\n    const others = await getNsDataThroughFile(ns, 'ns.ps(ns.args[0]).filter(p => p.filename == ns.args[1]).map(p => p.pid)', '/Temp/ps-other-instances.txt', [onHost, scriptName]);\\n    if (others.length >= 2) {\\n        if (warn)\\n            log(ns, `WARNING: You cannot start multiple versions of this script (${scriptName}). Please shut down the other instance first.` +\\n                (tailOtherInstances ? ' (To help with this, a tail window for the other instance will be opened)' : ''), true, 'warning');\\n        if (tailOtherInstances) // Tail all but the last pid, since it will belong to the current instance (which will be shut down)\\n            others.slice(0, others.length - 1).forEach(pid => ns.tail(pid));\\n    }\\n    return others.length;\\n}\\nlet cachedStockSymbols = null; // Cache of stock symbols since these never change\\n/** Helper function to get all stock symbols, or null if you do not have TIX api access.\\n * Caches symbols the first time they are successfully requested, since symbols never change.\\n * @param {NS} ns */\\nexport async function getStockSymbols(ns) {\\n    cachedStockSymbols ??= await getNsDataThroughFile(ns, `(() => { try { return ns.stock.getSymbols(); } catch { return null; } })()`, '/Temp/stock-symbols.txt');\\n    return cachedStockSymbols;\\n}\\n/** Helper function to get the total value of stocks using as little RAM as possible.\\n * @param {NS} ns */\\nexport async function getStocksValue(ns) {\\n    let stockSymbols = await getStockSymbols(ns);\\n    if (stockSymbols == null)\\n        return 0; // No TIX API Access\\n    const stockGetAll = async (fn) => await getNsDataThroughFile(ns, `(() => { try { return Object.fromEntries(ns.args.map(sym => [sym, ns.stock.${fn}(sym)])); } catch { return null; } })()`, `/Temp/stock-${fn}-all.txt`, stockSymbols);\\n    const askPrices = await stockGetAll('getAskPrice');\\n    // Workaround for Bug #304: If we lost TIX access, our cache of stock symbols will still be valid, but we won't be able to get prices.\\n    if (askPrices == null)\\n        return 0; // No TIX API Access\\n    const bidPrices = await stockGetAll('getBidPrice');\\n    const positions = await stockGetAll('getPosition');\\n    return stockSymbols.map(sym => ({ sym, pos: positions[sym], ask: askPrices[sym], bid: bidPrices[sym] }))\\n        .reduce((total, stk) => total + (stk.pos[0] * stk.bid) /* Long Value */ + stk.pos[2] * (stk.pos[3] * 2 - stk.ask) /* Short Value */\\n        // Subtract commission only if we have one or more shares (this is money we won't get when we sell our position)\\n        // If for some crazy reason we have shares both in the short and long position, we'll have to pay the commission twice (two separate sales)\\n        - 100000 * (Math.sign(stk.pos[0]) + Math.sign(stk.pos[2])), 0);\\n}\\n/** @param {NS} ns\\n * Returns a helpful error message if we forgot to pass the ns instance to a function */\\nexport function checkNsInstance(ns, fnName = \\\"this function\\\") {\\n    if (ns === undefined || !ns.print)\\n        throw new Error(`The first argument to ${fnName} should be a 'ns' instance.`);\\n    return ns;\\n}\\n/** A helper to parse the command line arguments with a bunch of extra features, such as\\n * - Loading a persistent defaults override from a local config file named after the script.\\n * - Rendering \\\"--help\\\" output without all scripts having to explicitly specify it\\n * @param {NS} ns\\n * @param {[string, string | number | boolean | string[]][]} argsSchema - Specification of possible command line args. **/\\nexport function getConfiguration(ns, argsSchema) {\\n    checkNsInstance(ns, '\\\"getConfig\\\"');\\n    const scriptName = ns.getScriptName();\\n    // If the user has a local config file, override the defaults in the argsSchema\\n    const confName = `${scriptName}.config.txt`;\\n    const overrides = ns.read(confName);\\n    const overriddenSchema = overrides ? [...argsSchema] : argsSchema; // Clone the original args schema\\n    if (overrides) {\\n        try {\\n            let parsedOverrides = JSON.parse(overrides); // Expect a parsable dict or array of 2-element arrays like args schema\\n            if (Array.isArray(parsedOverrides))\\n                parsedOverrides = Object.fromEntries(parsedOverrides);\\n            log(ns, `INFO: Applying ${Object.keys(parsedOverrides).length} overriding default arguments from \\\"${confName}\\\"...`);\\n            for (const key in parsedOverrides) {\\n                const override = parsedOverrides[key];\\n                const matchIndex = overriddenSchema.findIndex(o => o[0] == key);\\n                const match = matchIndex === -1 ? null : overriddenSchema[matchIndex];\\n                if (!match)\\n                    throw new Error(`Unrecognized key \\\"${key}\\\" does not match of this script's options: ` + JSON.stringify(argsSchema.map(a => a[0])));\\n                else if (override === undefined)\\n                    throw new Error(`The key \\\"${key}\\\" appeared in the config with no value. Some value must be provided. Try null?`);\\n                else if (match && JSON.stringify(match[1]) != JSON.stringify(override)) {\\n                    if (typeof (match[1]) !== typeof (override))\\n                        log(ns, `WARNING: The \\\"${confName}\\\" overriding \\\"${key}\\\" value: ${JSON.stringify(override)} has a different type (${typeof override}) than the ` +\\n                            `current default value ${JSON.stringify(match[1])} (${typeof match[1]}). The resulting behaviour may be unpredictable.`, false, 'warning');\\n                    else\\n                        log(ns, `INFO: Overriding \\\"${key}\\\" value: ${JSON.stringify(match[1])}  ->  ${JSON.stringify(override)}`);\\n                    overriddenSchema[matchIndex] = { ...match }; // Clone the (previously shallow-copied) object at this position of the new argsSchema\\n                    overriddenSchema[matchIndex][1] = override; // Update the value of the clone.\\n                }\\n            }\\n        }\\n        catch (err) {\\n            log(ns, `ERROR: There's something wrong with your config file \\\"${confName}\\\", it cannot be loaded.` +\\n                `\\\\nThe error encountered was: ${(typeof err === 'string' ? err : err.message || JSON.stringify(err))}` +\\n                `\\\\nYour config file should either be a dictionary e.g.: { \\\"string-opt\\\": \\\"value\\\", \\\"num-opt\\\": 123, \\\"array-opt\\\": [\\\"one\\\", \\\"two\\\"] }` +\\n                `\\\\nor an array of dict entries (2-element arrays) e.g.: [ [\\\"string-opt\\\", \\\"value\\\"], [\\\"num-opt\\\", 123], [\\\"array-opt\\\", [\\\"one\\\", \\\"two\\\"]] ]` +\\n                `\\\\n\\\"${confName}\\\" contains:\\\\n${overrides}`, true, 'error', 80);\\n            return null;\\n        }\\n    }\\n    // Return the result of using the in-game args parser to combine the defaults with the command line args provided\\n    try {\\n        const finalOptions = ns.flags(overriddenSchema);\\n        log(ns, `INFO: Running ${scriptName} with the following settings:` + Object.keys(finalOptions).filter(a => a != \\\"_\\\").map(a => `\\\\n  ${a.length == 1 ? \\\"-\\\" : \\\"--\\\"}${a} = ${finalOptions[a] === null ? \\\"null\\\" : JSON.stringify(finalOptions[a])}`).join(\\\"\\\") +\\n            `\\\\nrun ${scriptName} --help  to get more information about these options.`);\\n        return finalOptions;\\n    }\\n    catch (err) { // Detect if the user passed invalid arguments, and return help text\\n        const error = ns.args.includes(\\\"help\\\") || ns.args.includes(\\\"--help\\\") ? null : // Detect if the user explictly asked for help and suppress the error\\n            (typeof err === 'string' ? err : err.message || JSON.stringify(err));\\n        // Try to parse documentation about each argument from the source code's comments\\n        const source = ns.read(scriptName).split(\\\"\\\\n\\\");\\n        let argsRow = 1 + source.findIndex(row => row.includes(\\\"argsSchema =\\\"));\\n        const optionDescriptions = {};\\n        while (argsRow && argsRow < source.length) {\\n            const nextArgRow = source[argsRow++].trim();\\n            if (nextArgRow.length == 0)\\n                continue;\\n            if (nextArgRow[0] == \\\"]\\\" || nextArgRow.includes(\\\";\\\"))\\n                break; // We've reached the end of the args schema\\n            const commentSplit = nextArgRow.split(\\\"//\\\").map(e => e.trim());\\n            if (commentSplit.length != 2)\\n                continue; // This row doesn't appear to be in the format: [option...], // Comment\\n            const optionSplit = commentSplit[0].split(\\\"'\\\"); // Expect something like: ['name', someDefault]. All we need is the name\\n            if (optionSplit.length < 2)\\n                continue;\\n            optionDescriptions[optionSplit[1]] = commentSplit[1];\\n        }\\n        log(ns, (error ? `ERROR: There was an error parsing the script arguments provided: ${error}\\\\n` : 'INFO: ') +\\n            `${scriptName} possible arguments:` + argsSchema.map(a => `\\\\n  ${a[0].length == 1 ? \\\" -\\\" : \\\"--\\\"}${a[0].padEnd(30)} ` +\\n            `Default: ${(a[1] === null ? \\\"null\\\" : JSON.stringify(a[1])).padEnd(10)}` +\\n            (a[0] in optionDescriptions ? ` // ${optionDescriptions[a[0]]}` : '')).join(\\\"\\\") + '\\\\n' +\\n            `\\\\nTip: All argument names, and some values support auto-complete. Hit the <tab> key to autocomplete or see possible options.` +\\n            `\\\\nTip: Array arguments are populated by specifying the argument multiple times, e.g.:` +\\n            `\\\\n       run ${scriptName} --arrayArg first --arrayArg second --arrayArg third  to run the script with arrayArg=[first, second, third]` +\\n            (!overrides ? `\\\\nTip: You can override the default values by creating a config file named \\\"${confName}\\\" containing e.g.: { \\\"arg-name\\\": \\\"preferredValue\\\" }`\\n                : overrides && !error ? `\\\\nNote: The default values are being modified by overrides in your local \\\"${confName}\\\":\\\\n${overrides}`\\n                    : `\\\\nThis error may have been caused by your local overriding \\\"${confName}\\\" (especially if you changed the types of any options):\\\\n${overrides}`), true);\\n        return null; // Caller should handle null and shut down elegantly.\\n    }\\n}\\n/** In order to pass in args to pass along to the startup/completion script, they may have to be quoted, when given as\\n * parameters to this script, but those quotes will have to be stripped when passing these along to a subsequent script as raw strings.\\n * @param {string[]} args - The the array-argument passed to the script.\\n * @returns {string[]} The the array-argument unescaped (or deserialized if a single argument starting with '[' was supplied]). */\\nexport function unEscapeArrayArgs(args) {\\n    // For convenience, also support args as a single stringified array\\n    if (args.length == 1 && args[0].startsWith(\\\"[\\\"))\\n        return JSON.parse(args[0]);\\n    // Otherwise, args wrapped in quotes should have those quotes removed.\\n    const escapeChars = ['\\\"', \\\"'\\\", \\\"`\\\"];\\n    return args.map(arg => escapeChars.some(c => arg.startsWith(c) && arg.endsWith(c)) ? arg.slice(1, -1) : arg);\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"server/helper.js\",\"server\":\"home\"}}],[\"server/trade.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { instanceCount, getConfiguration, getNsDataThroughFile, runCommand, getActiveSourceFiles, tryGetBitNodeMultipliers, formatMoney, formatNumberShort, formatDuration, getStockSymbols } from 'server/helper.js';\\nlet disableShorts = false;\\nlet commission = 100000; // Buy/sell commission. Expected profit must exceed this to buy anything.\\nlet totalProfit = 0.0; // We can keep track of how much we've earned since start.\\nlet lastLog = \\\"\\\"; // We update faster than the stock-market ticks, but we don't log anything unless there's been a change\\nlet allStockSymbols = null; // Stores the set of all symbols collected at start\\nlet mock = false; // If set to true, will \\\"mock\\\" buy/sell but not actually buy/sell anythingorecast\\nlet noisy = false; // If set to true, tprints and announces each time stocks are bought/sold\\nlet dictSourceFiles; // Populated at init, a dictionary of source-files the user has access to, and their level\\n// Pre-4S configuration (influences how we play the stock market before we have 4S data, after which everything's fool-proof)\\nlet showMarketSummary = false; // If set to true, will always generate and display the pre-4s forecast table in a separate tail window\\nlet minTickHistory; // This much history must be gathered before we will offer a stock forecast.\\nlet longTermForecastWindowLength; // This much history will be used to determine the historical probability of the stock (so long as no inversions are detected)\\nlet nearTermForecastWindowLength; // This much history will be used to detect recent negative trends and act on them immediately.\\n// The following pre-4s constants are hard-coded (not configurable via command line) but may require tweaking\\nconst marketCycleLength = 75; // Every this many ticks, all stocks have a 45% chance of \\\"reversing\\\" their probability. Something we must detect and act on quick to not lose profits.\\nconst maxTickHistory = 151; // This much history will be kept for purposes of detemining volatility and perhaps one day pinpointing the market cycle tick\\nconst inversionDetectionTolerance = 0.10; // If the near-term forecast is within this distance of (1 - long-term forecast), consider it a potential \\\"inversion\\\"\\nconst inversionLagTolerance = 5; // An inversion is \\\"trusted\\\" up to this many ticks after the normal nearTermForecastWindowLength expected detection time\\n// (Note: 33 total stocks * 45% inversion chance each cycle = ~15 expected inversions per cycle)\\n// The following pre-4s values are set during the lifetime of the program\\nlet marketCycleDetected = false; // We should not make risky purchasing decisions until the stock market cycle is detected. This can take a long time, but we'll be thanked\\nlet detectedCycleTick = 0; // This will be reset to zero once we've detected the market cycle point.\\nlet inversionAgreementThreshold = 6; // If this many stocks are detected as being in an \\\"inversion\\\", consider this the stock market cycle point\\nconst expectedTickTime = 6000;\\nconst catchUpTickTime = 4000;\\nlet lastTick = 0;\\nlet sleepInterval = 1000;\\nlet resetInfo = ( /**@returns{ResetInfo}*/() => undefined)(); // Information about the current bitnode\\nlet options;\\nconst argsSchema = [\\n    ['l', false],\\n    ['liquidate', false],\\n    ['mock', false],\\n    ['noisy', false],\\n    ['disable-shorts', false],\\n    ['reserve', null],\\n    ['fracB', 0.4],\\n    ['fracH', 0.2],\\n    ['buy-threshold', 0.0001],\\n    ['sell-threshold', 0],\\n    ['diversification', 0.34],\\n    ['disableHud', false],\\n    ['disable-purchase-tix-api', false],\\n    // The following settings are related only to tweaking pre-4s stock-market logic\\n    ['show-pre-4s-forecast', false],\\n    ['show-market-summary', false],\\n    ['pre-4s-buy-threshold-probability', 0.15],\\n    ['pre-4s-buy-threshold-return', 0.0015],\\n    ['pre-4s-sell-threshold-return', 0.0005],\\n    ['pre-4s-min-tick-history', 21],\\n    ['pre-4s-forecast-window', 51],\\n    ['pre-4s-inversion-detection-window', 10],\\n    ['pre-4s-min-blackout-window', 10],\\n    ['pre-4s-minimum-hold-time', 10],\\n    ['buy-4s-budget', 0.8], // Maximum corpus value we will sacrifice in order to buy 4S. Setting to 0 will never buy 4s.\\n];\\nexport function autocomplete(data, args) {\\n    data.flags(argsSchema);\\n    return [];\\n}\\n/** Requires access to the TIX API. Purchases access to the 4S Mkt Data API as soon as it can\\n * @param {NS} ns */\\nexport async function main(ns) {\\n    const runOptions = getConfiguration(ns, argsSchema);\\n    if (!runOptions)\\n        return; // Invalid options, or ran in --help mode.\\n    // If given the \\\"liquidate\\\" command, try to kill any versions of this script trading in stocks\\n    // NOTE: We must do this immediately before we start resetting / overwriting global state below (which is shared between script instances)\\n    const hasTixApiAccess = await getNsDataThroughFile(ns, 'ns.stock.hasTIXAPIAccess()');\\n    if (runOptions.l || runOptions.liquidate) {\\n        if (!hasTixApiAccess)\\n            return log(ns, 'ERROR: Cannot liquidate stocks because we do not have Tix Api Access', true, 'error');\\n        log(ns, 'INFO: Killing any other stockmaster processes...', false, 'info');\\n        await runCommand(ns, `ns.ps().filter(proc => proc.filename == '${ns.getScriptName()}' && !proc.args.includes('-l') && !proc.args.includes('--liquidate'))` +\\n            `.forEach(proc => ns.kill(proc.pid))`, '/Temp/kill-stockmarket-scripts.js');\\n        log(ns, 'INFO: Checking for and liquidating any stocks...', false, 'info');\\n        await liquidate(ns); // Sell all stocks\\n        return;\\n    } // Otherwise, prevent multiple instances of this script from being started, even with different args.\\n    if (await instanceCount(ns) > 1)\\n        return;\\n    ns.disableLog(\\\"ALL\\\");\\n    // Extract various options from the args (globals, purchasing decision factors, pre-4s factors)\\n    options = runOptions; // We don't set the global \\\"options\\\" until we're sure this is the only running instance\\n    mock = options.mock;\\n    noisy = options.noisy;\\n    const fracB = options.fracB;\\n    const fracH = options.fracH;\\n    const diversification = options.diversification;\\n    const disableHud = options.disableHud || options.liquidate || options.mock;\\n    disableShorts = options['disable-shorts'];\\n    const pre4sBuyThresholdProbability = options['pre-4s-buy-threshold-probability'];\\n    const pre4sMinBlackoutWindow = options['pre-4s-min-blackout-window'] || 1;\\n    const pre4sMinHoldTime = options['pre-4s-minimum-hold-time'] || 0;\\n    minTickHistory = options['pre-4s-min-tick-history'] || 21;\\n    nearTermForecastWindowLength = options['pre-4s-inversion-detection-window'] || 10;\\n    longTermForecastWindowLength = options['pre-4s-forecast-window'] || (marketCycleLength + 1);\\n    showMarketSummary = options['show-pre-4s-forecast'] || options['show-market-summary'];\\n    // Other global values must be reset at start lest they be left in memory from a prior run\\n    lastTick = 0, totalProfit = 0, lastLog = \\\"\\\", marketCycleDetected = false, detectedCycleTick = 0, inversionAgreementThreshold = 6;\\n    let myStocks = [], allStocks = [];\\n    let player = await getPlayerInfo(ns);\\n    resetInfo = await getNsDataThroughFile(ns, 'ns.getResetInfo()');\\n    if (!hasTixApiAccess) { // You cannot use the stockmaster until you have API access\\n        if (options['disable-purchase-tix-api'])\\n            return log(ns, \\\"ERROR: You do not have stock market API access, and --disable-purchase-tix-api is set.\\\", true);\\n        let success = false;\\n        log(ns, `INFO: You are missing stock market API access. (NOTE: This is granted for free once you have SF8). ` +\\n            `Waiting until we can have the 5b needed to buy it. (Run with --disable-purchase-tix-api to disable this feature.)`, true);\\n        do {\\n            await ns.sleep(sleepInterval);\\n            try {\\n                const reserve = options['reserve'] != null ? options['reserve'] : Number(ns.read(\\\"reserve.txt\\\") || 0);\\n                success = await tryGetStockMarketAccess(ns, player.money - reserve);\\n            }\\n            catch (err) {\\n                log(ns, `WARNING: stockmaster.js Caught (and suppressed) an unexpected error while waiting to buy stock market access:\\\\n` +\\n                    (typeof err === 'string' ? err : err.message || JSON.stringify(err)), false, 'warning');\\n            }\\n        } while (!success);\\n    }\\n    dictSourceFiles = await getActiveSourceFiles(ns); // Find out what source files the user has unlocked\\n    if (!disableShorts && (!(8 in dictSourceFiles) || dictSourceFiles[8] < 2)) {\\n        log(ns, \\\"INFO: Shorting stocks has been disabled (you have not yet unlocked access to shorting)\\\");\\n        disableShorts = true;\\n    }\\n    allStockSymbols = await getStockSymbols(ns);\\n    allStocks = await initAllStocks(ns);\\n    let bitnodeMults;\\n    if (5 in dictSourceFiles)\\n        bitnodeMults = await tryGetBitNodeMultipliers(ns);\\n    // Assume bitnode mults are 1 if user doesn't have this API access yet\\n    if (!bitnodeMults)\\n        bitnodeMults = { FourSigmaMarketDataCost: 1, FourSigmaMarketDataApiCost: 1 };\\n    if (showMarketSummary)\\n        await launchSummaryTail(ns); // Opens a separate script / window to continuously display the Pre4S forecast\\n    let hudElement = null;\\n    if (!disableHud) {\\n        hudElement = initializeHud();\\n        ns.atExit(() => hudElement.parentElement.parentElement.parentElement.removeChild(hudElement.parentElement.parentElement));\\n    }\\n    log(ns, `Welcome! Please note: all stock purchases will initially result in a Net (unrealized) Loss. This is not only due to commission, but because each stock has a 'spread' (difference in buy price and sell price). ` +\\n        `This script is designed to buy stocks that are most likely to surpass that loss and turn a profit, but it will take a few minutes to see the progress.\\\\n\\\\n` +\\n        `If you choose to stop the script, make sure you SELL all your stocks (can go 'run ${ns.getScriptName()} --liquidate') to get your money back.\\\\n\\\\nGood luck!\\\\n~ Insight\\\\n\\\\n`);\\n    let pre4s = true;\\n    while (true) {\\n        try {\\n            const playerStats = await getPlayerInfo(ns);\\n            const reserve = options['reserve'] != null ? options['reserve'] : Number(ns.read(\\\"reserve.txt\\\") || 0);\\n            // Check whether we have 4s access yes (once we do, we can stop checking)\\n            if (pre4s)\\n                pre4s = !(await checkAccess(ns, 'has4SDataTIXAPI'));\\n            const holdings = await refresh(ns, !pre4s, allStocks, myStocks); // Returns total stock value\\n            const corpus = holdings + playerStats.money; // Corpus means total stocks + cash\\n            const maxHoldings = (1 - fracH) * corpus; // The largest value of stock we could hold without violiating fracH (Fraction to keep as cash)\\n            if (pre4s && !mock && await tryGet4SApi(ns, playerStats, bitnodeMults, corpus * (options['buy-4s-budget'] - fracH) - reserve))\\n                continue; // Start the loop over if we just bought 4S API access\\n            // Be more conservative with our decisions if we don't have 4S data\\n            const thresholdToBuy = pre4s ? options['pre-4s-buy-threshold-return'] : options['buy-threshold'];\\n            const thresholdToSell = pre4s ? options['pre-4s-sell-threshold-return'] : options['sell-threshold'];\\n            if (myStocks.length > 0)\\n                doStatusUpdate(ns, allStocks, myStocks, hudElement);\\n            else if (hudElement)\\n                hudElement.innerText = \\\"$0.000 \\\";\\n            if (pre4s && allStocks[0].priceHistory.length < minTickHistory) {\\n                log(ns, `Building a history of stock prices (${allStocks[0].priceHistory.length}/${minTickHistory})...`);\\n                await ns.sleep(sleepInterval);\\n                continue;\\n            }\\n            // Sell forecasted-to-underperform shares (worse than some expected return threshold)\\n            let sales = 0;\\n            for (let stk of myStocks) {\\n                if (stk.absReturn() <= thresholdToSell || stk.bullish() && stk.sharesShort > 0 || stk.bearish() && stk.sharesLong > 0) {\\n                    if (pre4s && stk.ticksHeld < pre4sMinHoldTime) {\\n                        if (!stk.warnedBadPurchase)\\n                            log(ns, `WARNING: Thinking of selling ${stk.sym} with ER ${formatBP(stk.absReturn())}, but holding out as it was purchased just ${stk.ticksHeld} ticks ago...`);\\n                        stk.warnedBadPurchase = true; // Hack to ensure we don't spam this warning\\n                    }\\n                    else {\\n                        sales += await doSellAll(ns, stk);\\n                        stk.warnedBadPurchase = false;\\n                    }\\n                }\\n            }\\n            if (sales > 0)\\n                continue; // If we sold anything, loop immediately (no need to sleep) and refresh stats immediately before making purchasing decisions.\\n            // If we haven't gone above a certain liquidity threshold, don't attempt to buy more stock\\n            // Avoids death-by-a-thousand-commissions before we get super-rich, stocks are capped, and this is no longer an issue\\n            // BUT may mean we miss striking while the iron is hot while waiting to build up more funds.\\n            if (playerStats.money / corpus > fracB) {\\n                // Compute the cash we have to spend (such that spending it all on stock would bring us down to a liquidity of fracH)\\n                let cash = Math.min(playerStats.money - reserve, maxHoldings - holdings);\\n                // If we haven't detected the market cycle (or haven't detected it reliably), assume it might be quite soon and restrict bets to those that can turn a profit in the very-near term.\\n                const estTick = Math.max(detectedCycleTick, marketCycleLength - (!marketCycleDetected ? 10 : inversionAgreementThreshold <= 8 ? 20 : inversionAgreementThreshold <= 10 ? 30 : marketCycleLength));\\n                // Buy shares with cash remaining in hand if exceeding some buy threshold. Prioritize targets whose expected return will cover the ask/bit spread the soonest\\n                for (const stk of allStocks.sort(purchaseOrder)) {\\n                    if (cash <= 0)\\n                        break; // Break if we are out of money (i.e. from prior purchases)\\n                    // Do not purchase a stock if it is not forecasted to recover from the ask/bid spread before the next market cycle and potential probability inversion\\n                    if (stk.blackoutWindow() >= marketCycleLength - estTick)\\n                        continue;\\n                    if (pre4s && (Math.max(pre4sMinHoldTime, pre4sMinBlackoutWindow) >= marketCycleLength - estTick))\\n                        continue;\\n                    // Skip if we already own all possible shares in this stock, or if the expected return is below our threshold, or if shorts are disabled and stock is bearish\\n                    if (stk.ownedShares() == stk.maxShares || stk.absReturn() <= thresholdToBuy || (disableShorts && stk.bearish()))\\n                        continue;\\n                    // If pre-4s, do not purchase any stock whose last inversion was too recent, or whose probability is too close to 0.5\\n                    if (pre4s && (stk.lastInversion < minTickHistory || Math.abs(stk.prob - 0.5) < pre4sBuyThresholdProbability))\\n                        continue;\\n                    // Enforce diversification: Don't hold more than x% of our portfolio as a single stock (as corpus increases, this naturally stops being a limiter)\\n                    // Inflate our budget / current position value by a factor of stk.spread_pct to avoid repeated micro-buys of a stock due to the buy/ask spread making holdings appear more diversified after purchase\\n                    let budget = Math.min(cash, maxHoldings * (diversification + stk.spread_pct) - stk.positionValue() * (1.01 + stk.spread_pct));\\n                    let purchasePrice = stk.bullish() ? stk.ask_price : stk.bid_price; // Depends on whether we will be buying a long or short position\\n                    let affordableShares = Math.floor((budget - commission) / purchasePrice);\\n                    let numShares = Math.min(stk.maxShares - stk.ownedShares(), affordableShares);\\n                    if (numShares <= 0)\\n                        continue;\\n                    // Don't buy fewer shares than can beat the comission before the next stock market cycle (after covering the spread), lest the position reverse before we break-even.\\n                    let ticksBeforeCycleEnd = marketCycleLength - estTick - stk.timeToCoverTheSpread();\\n                    if (ticksBeforeCycleEnd < 1)\\n                        continue; // We're cutting it too close to the market cycle, position might reverse before we break-even on commission\\n                    let estEndOfCycleValue = numShares * purchasePrice * ((stk.absReturn() + 1) ** ticksBeforeCycleEnd - 1); // Expected difference in purchase price and value at next market cycle end\\n                    let owned = stk.ownedShares() > 0;\\n                    if (estEndOfCycleValue <= 2 * commission)\\n                        log(ns, (owned ? '' : `We currently have ${formatNumberShort(stk.ownedShares(), 3, 1)} shares in ${stk.sym} valued at ${formatMoney(stk.positionValue())} ` +\\n                            `(${(100 * stk.positionValue() / maxHoldings).toFixed(1)}% of corpus, capped at ${(diversification * 100).toFixed(1)}% by --diversification).\\\\n`) +\\n                            `Despite attractive ER of ${formatBP(stk.absReturn())}, ${owned ? 'more ' : ''}${stk.sym} was not bought. ` +\\n                            `\\\\nBudget: ${formatMoney(budget)} can only buy ${numShares.toLocaleString('en')} ${owned ? 'more ' : ''}shares @ ${formatMoney(purchasePrice)}. ` +\\n                            `\\\\nGiven an estimated ${marketCycleLength - estTick} ticks left in market cycle, less ${stk.timeToCoverTheSpread().toFixed(1)} ticks to cover the spread (${(stk.spread_pct * 100).toFixed(2)}%), ` +\\n                            `remaining ${ticksBeforeCycleEnd.toFixed(1)} ticks would only generate ${formatMoney(estEndOfCycleValue)}, which is less than 2x commission (${formatMoney(2 * commission, 3)})`);\\n                    else\\n                        cash -= await doBuy(ns, stk, numShares);\\n                }\\n            }\\n        }\\n        catch (err) {\\n            log(ns, `WARNING: stockmaster.js Caught (and suppressed) an unexpected error in the main loop:\\\\n` +\\n                (typeof err === 'string' ? err : err.message || JSON.stringify(err)), false, 'warning');\\n        }\\n        await ns.sleep(sleepInterval);\\n    }\\n}\\n/** Ram-dodge getting updated player info. Note that this is the only async routine called in the main loop.\\n * If latency or ram instability is an issue, you may wish to try uncommenting the direct request.\\n * @param {NS} ns\\n * @returns {Promise<Player>} */\\nasync function getPlayerInfo(ns) {\\n    return await getNsDataThroughFile(ns, `ns.getPlayer()`);\\n}\\nfunction getTimeInBitnode() {\\n    return Date.now() - resetInfo.lastNodeReset;\\n}\\n/* A sorting function to put stocks in the order we should prioritize investing in them */\\nlet purchaseOrder = (a, b) => (Math.ceil(a.timeToCoverTheSpread()) - Math.ceil(b.timeToCoverTheSpread())) || (b.absReturn() - a.absReturn());\\n/** @param {NS} ns\\n * Generic helper for dodging the hefty RAM requirements of stock functions by spawning a temporary script to collect info for us. */\\nasync function getStockInfoDict(ns, stockFunction) {\\n    allStockSymbols ??= await getStockSymbols(ns);\\n    if (allStockSymbols == null)\\n        throw new Error(`No WSE API Access yet, this call to ns.stock.${stockFunction} is premature.`);\\n    return await getNsDataThroughFile(ns, `Object.fromEntries(ns.args.map(sym => [sym, ns.stock.${stockFunction}(sym)]))`, `/Temp/stock-${stockFunction}.txt`, allStockSymbols);\\n}\\n;\\n/** @param {NS} ns **/\\nasync function initAllStocks(ns) {\\n    let dictMaxShares = await getStockInfoDict(ns, 'getMaxShares'); // Only need to get this once, it never changes\\n    return allStockSymbols.map(s => ({\\n        sym: s,\\n        maxShares: dictMaxShares[s],\\n        expectedReturn: function () {\\n            // To add conservatism to pre-4s estimates, we reduce the probability by 1 standard deviation without crossing the midpoint\\n            let normalizedProb = (this.prob - 0.5);\\n            let conservativeProb = normalizedProb < 0 ? Math.min(0, normalizedProb + this.probStdDev) : Math.max(0, normalizedProb - this.probStdDev);\\n            return this.vol * conservativeProb;\\n        },\\n        absReturn: function () {\\n            return Math.abs(this.expectedReturn());\\n        },\\n        bullish: function () {\\n            return this.prob > 0.5;\\n        },\\n        bearish: function () {\\n            return !this.bullish();\\n        },\\n        ownedShares: function () {\\n            return this.sharesLong + this.sharesShort;\\n        },\\n        owned: function () {\\n            return this.ownedShares() > 0;\\n        },\\n        positionValueLong: function () {\\n            return this.sharesLong * this.bid_price;\\n        },\\n        positionValueShort: function () {\\n            return this.sharesShort * (2 * this.boughtPriceShort - this.ask_price);\\n        },\\n        positionValue: function () {\\n            return this.positionValueLong() + this.positionValueShort();\\n        },\\n        // How many stock market ticks must occur at the current expected return before we regain the value lost by the spread between buy and sell prices.\\n        // This can be derived by taking the compound interest formula (future = current * (1 + expected_return) ^ n) and solving for n\\n        timeToCoverTheSpread: function () {\\n            return Math.log(this.ask_price / this.bid_price) / Math.log(1 + this.absReturn());\\n        },\\n        // We should not buy this stock within this many ticks of a Market cycle, or we risk being forced to sell due to a probability inversion, and losing money due to the spread\\n        blackoutWindow: function () {\\n            return Math.ceil(this.timeToCoverTheSpread());\\n        },\\n        // Pre-4s properties used for forecasting\\n        priceHistory: [],\\n        lastInversion: 0,\\n    }));\\n}\\n/** @param {NS} ns **/\\nasync function refresh(ns, has4s, allStocks, myStocks) {\\n    let holdings = 0;\\n    // Dodge hefty RAM requirements by spawning a sequence of temporary scripts to collect info for us one function at a time\\n    const dictAskPrices = await getStockInfoDict(ns, 'getAskPrice');\\n    const dictBidPrices = await getStockInfoDict(ns, 'getBidPrice');\\n    const dictVolatilities = !has4s ? null : await getStockInfoDict(ns, 'getVolatility');\\n    const dictForecasts = !has4s ? null : await getStockInfoDict(ns, 'getForecast');\\n    const dictPositions = mock ? null : await getStockInfoDict(ns, 'getPosition');\\n    const ticked = allStocks.some(stk => stk.ask_price != dictAskPrices[stk.sym]); // If any price has changed since our last update, the stock market has \\\"ticked\\\"\\n    if (ticked) {\\n        if (Date.now() - lastTick < expectedTickTime - sleepInterval) {\\n            if (Date.now() - lastTick < catchUpTickTime - sleepInterval) {\\n                let changedPrices = allStocks.filter(stk => stk.ask_price != dictAskPrices[stk.sym]);\\n                log(ns, `WARNING: Detected a stock market tick after only ${formatDuration(Date.now() - lastTick)}, but expected ~${formatDuration(expectedTickTime)}. ` +\\n                    (changedPrices.length >= 33 ? '(All stocks updated)' : `The following ${changedPrices.length} stock prices changed: ${changedPrices.map(stk => `${stk.sym} ${formatMoney(stk.ask_price)} -> ${formatMoney(dictAskPrices[stk.sym])}`).join(\\\", \\\")}`), false, 'warning');\\n            }\\n            else\\n                log(ns, `INFO: Detected a rapid stock market tick (${formatDuration(Date.now() - lastTick)}), likely to make up for lag / offline time.`);\\n        }\\n        lastTick = Date.now();\\n    }\\n    myStocks.length = 0;\\n    for (const stk of allStocks) {\\n        const sym = stk.sym;\\n        stk.ask_price = dictAskPrices[sym]; // The amount we would pay if we bought the stock (higher than 'price')\\n        stk.bid_price = dictBidPrices[sym]; // The amount we would recieve if we sold the stock (lower than 'price')\\n        stk.spread = stk.ask_price - stk.bid_price;\\n        stk.spread_pct = stk.spread / stk.ask_price; // The percentage of value we lose just by buying the stock\\n        stk.price = (stk.ask_price + stk.bid_price) / 2; // = ns.stock.getPrice(sym);\\n        stk.vol = has4s ? dictVolatilities[sym] : stk.vol;\\n        stk.prob = has4s ? dictForecasts[sym] : stk.prob;\\n        stk.probStdDev = has4s ? 0 : stk.probStdDev; // Standard deviation around the est. probability\\n        // Update our current portfolio of owned stock\\n        let [priorLong, priorShort] = [stk.sharesLong, stk.sharesShort];\\n        stk.position = mock ? null : dictPositions[sym];\\n        stk.sharesLong = mock ? (stk.sharesLong || 0) : stk.position[0];\\n        stk.boughtPrice = mock ? (stk.boughtPrice || 0) : stk.position[1];\\n        stk.sharesShort = mock ? (stk.shares_short || 0) : stk.position[2];\\n        stk.boughtPriceShort = mock ? (stk.boughtPrice_short || 0) : stk.position[3];\\n        holdings += stk.positionValue();\\n        if (stk.owned())\\n            myStocks.push(stk);\\n        else\\n            stk.ticksHeld = 0;\\n        if (ticked) // Increment ticksHeld, or reset it if we have no position in this stock or reversed our position last tick.\\n            stk.ticksHeld = !stk.owned() || (priorLong > 0 && stk.sharesLong == 0) || (priorShort > 0 && stk.sharesShort == 0) ? 0 : 1 + (stk.ticksHeld || 0);\\n    }\\n    if (ticked)\\n        await updateForecast(ns, allStocks, has4s); // Logic below only required on market tick\\n    return holdings;\\n}\\n// Historical probability can be inferred from the number of times the stock was recently observed increasing over the total number of observations\\nconst forecast = history => history.reduce((ups, price, idx) => idx == 0 ? 0 : (history[idx - 1] > price ? ups + 1 : ups), 0) / (history.length - 1);\\n// An \\\"inversion\\\" can be detected if two probabilities are far enough apart and are within \\\"tolerance\\\" of p1 being equal to 1-p2\\nconst tol2 = inversionDetectionTolerance / 2;\\nconst detectInversion = (p1, p2) => ((p1 >= 0.5 + tol2) && (p2 <= 0.5 - tol2) && p2 <= (1 - p1) + inversionDetectionTolerance)\\n    /* Reverse Condition: */ || ((p1 <= 0.5 - tol2) && (p2 >= 0.5 + tol2) && p2 >= (1 - p1) - inversionDetectionTolerance);\\n/** @param {NS} ns **/\\nasync function updateForecast(ns, allStocks, has4s) {\\n    const currentHistory = allStocks[0].priceHistory.length;\\n    const prepSummary = showMarketSummary || mock || (!has4s && (currentHistory < minTickHistory || allStocks.filter(stk => stk.owned()).length == 0)); // Decide whether to display the market summary table.\\n    const inversionsDetected = []; // Keep track of individual stocks whose probability has inverted (45% chance of happening each \\\"cycle\\\")\\n    detectedCycleTick = (detectedCycleTick + 1) % marketCycleLength; // Keep track of stock market cycle (which occurs every 75 ticks)\\n    for (const stk of allStocks) {\\n        stk.priceHistory.unshift(stk.price);\\n        if (stk.priceHistory.length > maxTickHistory) // Limit the rolling window size\\n            stk.priceHistory.splice(maxTickHistory, 1);\\n        // Volatility is easy - the largest observed % movement in a single tick\\n        if (!has4s)\\n            stk.vol = stk.priceHistory.reduce((max, price, idx) => Math.max(max, idx == 0 ? 0 : Math.abs(stk.priceHistory[idx - 1] - price) / price), 0);\\n        // We want stocks that have the best expected return, averaged over a long window for greater precision, but the game will occasionally invert probabilities\\n        // (45% chance every 75 updates), so we also compute a near-term forecast window to allow for early-detection of inversions so we can ditch our position.\\n        stk.nearTermForecast = forecast(stk.priceHistory.slice(0, nearTermForecastWindowLength));\\n        let preNearTermWindowProb = forecast(stk.priceHistory.slice(nearTermForecastWindowLength, nearTermForecastWindowLength + marketCycleLength)); // Used to detect the probability before the potential inversion event.\\n        // Detect whether it appears as though the probability of this stock has recently undergone an inversion (i.e. prob => 1 - prob)\\n        stk.possibleInversionDetected = has4s ? detectInversion(stk.prob, stk.lastTickProbability || stk.prob) : detectInversion(preNearTermWindowProb, stk.nearTermForecast);\\n        stk.lastTickProbability = stk.prob;\\n        if (stk.possibleInversionDetected)\\n            inversionsDetected.push(stk);\\n    }\\n    // Detect whether our auto-detected \\\"stock market cycle\\\" timing should be adjusted based on the number of potential inversions observed\\n    let summary = \\\"\\\";\\n    if (inversionsDetected.length > 0) {\\n        summary += `${inversionsDetected.length} Stocks appear to be reversing their outlook: ${inversionsDetected.map(s => s.sym).join(', ')} (threshold: ${inversionAgreementThreshold})\\\\n`;\\n        if (inversionsDetected.length >= inversionAgreementThreshold && (has4s || currentHistory >= minTickHistory)) { // We believe we have detected the stock market cycle!\\n            const newPredictedCycleTick = has4s ? 0 : nearTermForecastWindowLength; // By the time we've detected it, we're this many ticks past the cycle start\\n            if (detectedCycleTick != newPredictedCycleTick)\\n                log(ns, `Threshold for changing predicted market cycle met (${inversionsDetected.length} >= ${inversionAgreementThreshold}). ` +\\n                    `Changing current market tick from ${detectedCycleTick} to ${newPredictedCycleTick}.`);\\n            marketCycleDetected = true;\\n            detectedCycleTick = newPredictedCycleTick;\\n            // Don't adjust this in the future unless we see another day with as much or even more agreement (capped at 14, it seems sometimes our cycles get out of sync with\\n            // actual cycles and we need to reset our clock even after previously determining the cycle with great certainty.)\\n            inversionAgreementThreshold = Math.max(14, inversionsDetected.length);\\n        }\\n    }\\n    // Act on any inversions (if trusted), compute the probability, and prepare the stock summary\\n    for (const stk of allStocks) {\\n        // Don't \\\"trust\\\" (act on) a detected inversion unless it's near the time when we're capable of detecting market cycle start. Avoids most false-positives.\\n        if (stk.possibleInversionDetected && (has4s && detectedCycleTick == 0 ||\\n            (!has4s && (detectedCycleTick >= nearTermForecastWindowLength / 2) && (detectedCycleTick <= nearTermForecastWindowLength + inversionLagTolerance))))\\n            stk.lastInversion = detectedCycleTick; // If we \\\"trust\\\" a probability inversion has occurred, probability will be calculated based on only history since the last inversion.\\n        else\\n            stk.lastInversion++;\\n        // Only take the stock history since after the last inversion to compute the probability of the stock.\\n        const probWindowLength = Math.min(longTermForecastWindowLength, stk.lastInversion);\\n        stk.longTermForecast = forecast(stk.priceHistory.slice(0, probWindowLength));\\n        if (!has4s) {\\n            stk.prob = stk.longTermForecast;\\n            stk.probStdDev = Math.sqrt((stk.prob * (1 - stk.prob)) / probWindowLength);\\n        }\\n        const signalStrength = 1 + (stk.bullish() ? (stk.nearTermForecast > stk.prob ? 1 : 0) + (stk.prob > 0.8 ? 1 : 0) : (stk.nearTermForecast < stk.prob ? 1 : 0) + (stk.prob < 0.2 ? 1 : 0));\\n        if (prepSummary) { // Example: AERO  ++   Prob: 54% (t51: 54%, t10: 67%) tLast⇄:190 Vol:0.640% ER: 2.778BP Spread:1.784% ttProfit: 65 Pos: 14.7M long  (held 189 ticks)\\n            stk.debugLog = `${stk.sym.padEnd(5, ' ')} ${(stk.bullish() ? '+' : '-').repeat(signalStrength).padEnd(3)} ` +\\n                `Prob:${(stk.prob * 100).toFixed(0).padStart(3)}% (t${probWindowLength.toFixed(0).padStart(2)}:${(stk.longTermForecast * 100).toFixed(0).padStart(3)}%, ` +\\n                `t${Math.min(stk.priceHistory.length, nearTermForecastWindowLength).toFixed(0).padStart(2)}:${(stk.nearTermForecast * 100).toFixed(0).padStart(3)}%) ` +\\n                `tLast⇄:${(stk.lastInversion + 1).toFixed(0).padStart(3)} Vol:${(stk.vol * 100).toFixed(2)}% ER:${formatBP(stk.expectedReturn()).padStart(8)} ` +\\n                `Spread:${(stk.spread_pct * 100).toFixed(2)}% ttProfit:${stk.blackoutWindow().toFixed(0).padStart(3)}`;\\n            if (stk.owned())\\n                stk.debugLog += ` Pos: ${formatNumberShort(stk.ownedShares(), 3, 1)} (${stk.ownedShares() == stk.maxShares ? 'max' :\\n                    ((100 * stk.ownedShares() / stk.maxShares).toFixed(0).padStart(2) + '%')}) ${stk.sharesLong > 0 ? 'long ' : 'short'} (held ${stk.ticksHeld} ticks)`;\\n            if (stk.possibleInversionDetected)\\n                stk.debugLog += ' ⇄⇄⇄';\\n        }\\n    }\\n    // Print a summary of stocks as of this most recent tick (if enabled)\\n    if (prepSummary) {\\n        summary += `Market day ${detectedCycleTick + 1}${marketCycleDetected ? '' : '?'} of ${marketCycleLength} (${marketCycleDetected ? (100 * inversionAgreementThreshold / 19).toPrecision(2) : '0'}% certain) ` +\\n            `Current Stock Summary and Pre-4S Forecasts (by best payoff-time):\\\\n` + allStocks.sort(purchaseOrder).map(s => s.debugLog).join(\\\"\\\\n\\\");\\n        if (showMarketSummary)\\n            await updateForecastFile(ns, summary);\\n        else\\n            log(ns, summary);\\n    }\\n    // Write out a file of stock probabilities so that other scripts can make use of this (e.g. hack orchestrator can manipulate the stock market)\\n    await ns.write('/Temp/stock-probabilities.txt', JSON.stringify(Object.fromEntries(allStocks.map(stk => [stk.sym, { prob: stk.prob, sharesLong: stk.sharesLong, sharesShort: stk.sharesShort }]))), \\\"w\\\");\\n}\\n// Helpers to display the stock market summary in a separate window.\\nlet summaryFile = '/Temp/stockmarket-summary.txt';\\nlet updateForecastFile = async (ns, summary) => await ns.write(summaryFile, summary, 'w');\\nlet launchSummaryTail = async (ns) => {\\n    let summaryTailScript = summaryFile.replace('.txt', '-tail.js');\\n    if (await getNsDataThroughFile(ns, `ns.scriptRunning('${summaryTailScript}', ns.getHostname())`, '/Temp/stockmarket-summary-is-running.txt'))\\n        return;\\n    //await getNsDataThroughFile(ns, `ns.scriptKill('${summaryTailScript}', ns.getHostname())`, summaryTailScript.replace('.js', '-kill.js')); // Only needed if we're changing the script below\\n    await runCommand(ns, `ns.disableLog('sleep'); ns.tail(); let lastRead = '';\\r\\n        while (true) { \\r\\n            let read = ns.read('${summaryFile}');\\r\\n            if (lastRead != read) ns.print(lastRead = read);\\r\\n            await ns.sleep(1000); \\r\\n        }`, summaryTailScript);\\n};\\n// Ram-dodging helpers that spawn temporary scripts to buy/sell rather than pay 2.5GB ram per variant\\nlet buyStockWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'buyStock'); // ns.stock.buyStock(sym, numShares);\\nlet buyShortWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'buyShort'); // ns.stock.buyShort(sym, numShares);\\nlet sellStockWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'sellStock'); // ns.stock.sellStock(sym, numShares);\\nlet sellShortWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'sellShort'); // ns.stock.sellShort(sym, numShares);\\nlet transactStock = async (ns, sym, numShares, action) => await getNsDataThroughFile(ns, `ns.stock.${action}(ns.args[0], ns.args[1])`, null, [sym, numShares]);\\n/** @param {NS} ns\\n * Automatically buys either a short or long position depending on the outlook of the stock. */\\nasync function doBuy(ns, stk, sharesToBuy) {\\n    // We include -2*commission in the \\\"holdings value\\\" of our stock, but if we make repeated purchases of the same stock, we have to track\\n    // the additional commission somewhere. So only subtract it from our running profit if this isn't our first purchase of this symbol\\n    let price = 0; //price wasn't defined yet.\\n    if (stk.owned())\\n        totalProfit -= commission;\\n    let long = stk.bullish();\\n    let expectedPrice = long ? stk.ask_price : stk.bid_price; // Depends on whether we will be buying a long or short position\\n    log(ns, `INFO: ${long ? 'Buying  ' : 'Shorting'} ${formatNumberShort(sharesToBuy, 3, 3).padStart(5)} (` +\\n        `${stk.maxShares == sharesToBuy + stk.ownedShares() ? '@max shares' : `${formatNumberShort(sharesToBuy + stk.ownedShares(), 3, 3).padStart(5)}/${formatNumberShort(stk.maxShares, 3, 3).padStart(5)}`}) ` +\\n        `${stk.sym.padEnd(5)} @ ${formatMoney(expectedPrice).padStart(9)} for ${formatMoney(sharesToBuy * expectedPrice).padStart(9)} (Spread:${(stk.spread_pct * 100).toFixed(2)}% ` +\\n        `ER:${formatBP(stk.expectedReturn()).padStart(8)}) Ticks to Profit: ${stk.timeToCoverTheSpread().toFixed(2)}`, noisy, 'info');\\n    try {\\n        price = mock ? expectedPrice : Number(await transactStock(ns, stk.sym, sharesToBuy, long ? 'buyStock' : 'buyShort'));\\n    }\\n    catch (err) {\\n        if (long)\\n            throw err;\\n        disableShorts = true;\\n        log(ns, `WARN: Failed to short ${stk.sym} (Shorts not available?). Disabling shorts...`, true, 'warning');\\n        return 0;\\n    }\\n    // The rest of this work is for troubleshooting / mock-mode purposes\\n    if (price == 0) {\\n        const playerMoney = (await getPlayerInfo(ns)).money;\\n        if (playerMoney < sharesToBuy * expectedPrice)\\n            log(ns, `WARN: Failed to ${long ? 'buy' : 'short'} ${stk.sym} because money just recently dropped to ${formatMoney(playerMoney)} and we can no longer afford it.`, noisy);\\n        else\\n            log(ns, `ERROR: Failed to ${long ? 'buy' : 'short'} ${stk.sym} @ ${formatMoney(expectedPrice)} (0 was returned) despite having ${formatMoney(playerMoney)}.`, true, 'error');\\n        return 0;\\n    }\\n    else if (price != expectedPrice) {\\n        log(ns, `WARNING: ${long ? 'Bought' : 'Shorted'} ${stk.sym} @ ${formatMoney(price)} but expected ${formatMoney(expectedPrice)} (spread: ${formatMoney(stk.spread)})`, false, 'warning');\\n        price = expectedPrice; // Known Bitburner bug for now, short returns \\\"price\\\" instead of \\\"bid_price\\\". Correct this so running profit calcs are correct.\\n    }\\n    if (mock && long)\\n        stk.boughtPrice = (stk.boughtPrice * stk.sharesLong + price * sharesToBuy) / (stk.sharesLong + sharesToBuy);\\n    if (mock && !long)\\n        stk.boughtPriceShort = (stk.boughtPriceShort * stk.sharesShort + price * sharesToBuy) / (stk.sharesShort + sharesToBuy);\\n    if (long)\\n        stk.sharesLong += sharesToBuy;\\n    else\\n        stk.sharesShort += sharesToBuy; // Maintained for mock mode, otherwise, redundant (overwritten at next refresh)\\n    return sharesToBuy * price + commission; // Return the amount spent on the transaction so it can be subtracted from our cash on hand\\n}\\n/** @param {NS} ns\\n * Sell our current position in this stock. */\\nasync function doSellAll(ns, stk) {\\n    let long = stk.sharesLong > 0;\\n    if (long && stk.sharesShort > 0) // Detect any issues here - we should always sell one before buying the other.\\n        log(ns, `ERROR: Somehow ended up both ${stk.sharesShort} short and ${stk.sharesLong} long on ${stk.sym}`, true, 'error');\\n    let expectedPrice = long ? stk.bid_price : stk.ask_price; // Depends on whether we will be selling a long or short position\\n    let sharesSold = long ? stk.sharesLong : stk.sharesShort;\\n    let price = mock ? expectedPrice : await transactStock(ns, stk.sym, sharesSold, long ? 'sellStock' : 'sellShort');\\n    const profit = (long ? stk.sharesLong * (price - stk.boughtPrice) : stk.sharesShort * (stk.boughtPriceShort - price)) - 2 * commission;\\n    log(ns, `${profit > 0 ? 'SUCCESS' : 'WARNING'}: Sold all ${formatNumberShort(sharesSold, 3, 3).padStart(5)} ${stk.sym.padEnd(5)} ${long ? ' long' : 'short'} positions ` +\\n        `@ ${formatMoney(price).padStart(9)} for a ` + (profit > 0 ? `PROFIT of ${formatMoney(profit).padStart(9)}` : ` LOSS  of ${formatMoney(-profit).padStart(9)}`) + ` after ${stk.ticksHeld} ticks`, noisy, noisy ? (profit > 0 ? 'success' : 'error') : undefined);\\n    if (price == 0) {\\n        log(ns, `ERROR: Failed to sell ${sharesSold} ${stk.sym} ${long ? 'shares' : 'shorts'} @ ${formatMoney(expectedPrice)} - 0 was returned.`, true, 'error');\\n        return 0;\\n    }\\n    else if (price != expectedPrice) {\\n        log(ns, `WARNING: Sold ${stk.sym} ${long ? 'shares' : 'shorts'} @ ${formatMoney(price)} but expected ${formatMoney(expectedPrice)} (spread: ${formatMoney(stk.spread)})`, false, 'warning');\\n        price = expectedPrice; // Known Bitburner bug for now, sellSort returns \\\"price\\\" instead of \\\"ask_price\\\". Correct this so running profit calcs are correct.\\n    }\\n    if (long)\\n        stk.sharesLong -= sharesSold;\\n    else\\n        stk.sharesShort -= sharesSold; // Maintained for mock mode, otherwise, redundant (overwritten at next refresh)\\n    totalProfit += profit;\\n    return price * sharesSold - commission; // Return the amount of money recieved from the transaction\\n}\\nlet formatBP = fraction => formatNumberShort(fraction * 100 * 100, 3, 2) + \\\" BP\\\";\\n/** Log / tprint / toast helper.\\n * @param {NS} ns */\\nlet log = (ns, message, tprint = false, toastStyle = \\\"\\\") => {\\n    if (message == lastLog)\\n        return;\\n    ns.print(message);\\n    if (tprint)\\n        ns.tprint(message);\\n    if (toastStyle)\\n        ns.toast(message, toastStyle);\\n    return lastLog = message;\\n};\\nfunction doStatusUpdate(ns, stocks, myStocks, hudElement = null) {\\n    let maxReturnBP = 10000 * Math.max(...myStocks.map(s => s.absReturn())); // The largest return (in basis points) in our portfolio\\n    let minReturnBP = 10000 * Math.min(...myStocks.map(s => s.absReturn())); // The smallest return (in basis points) in our portfolio\\n    let est_holdings_cost = myStocks.reduce((sum, stk) => sum + (stk.owned() ? commission : 0) +\\n        stk.sharesLong * stk.boughtPrice + stk.sharesShort * stk.boughtPriceShort, 0);\\n    let liquidation_value = myStocks.reduce((sum, stk) => sum - (stk.owned() ? commission : 0) + stk.positionValue(), 0);\\n    let status = `Long ${myStocks.filter(s => s.sharesLong > 0).length}, Short ${myStocks.filter(s => s.sharesShort > 0).length} of ${stocks.length} stocks ` +\\n        (myStocks.length == 0 ? '' : `(ER ${minReturnBP.toFixed(1)}-${maxReturnBP.toFixed(1)} BP) `) +\\n        `Profit: ${formatMoney(totalProfit, 3)} Holdings: ${formatMoney(liquidation_value, 3)} (Cost: ${formatMoney(est_holdings_cost, 3)}) ` +\\n        `Net: ${formatMoney(totalProfit + liquidation_value - est_holdings_cost, 3)}`;\\n    log(ns, status);\\n    if (hudElement)\\n        hudElement.innerText = formatMoney(liquidation_value, 6, 3);\\n}\\n/** @param {NS} ns **/\\nasync function liquidate(ns) {\\n    allStockSymbols ??= await getStockSymbols(ns);\\n    if (allStockSymbols == null)\\n        return; // Nothing to liquidate, no API Access\\n    let totalStocks = 0, totalSharesLong = 0, totalSharesShort = 0, totalRevenue = 0;\\n    const dictPositions = mock ? null : await getStockInfoDict(ns, 'getPosition');\\n    for (const sym of allStockSymbols) {\\n        var [sharesLong, , sharesShort, avgShortCost] = dictPositions[sym];\\n        if (sharesLong + sharesShort == 0)\\n            continue;\\n        totalStocks++, totalSharesLong += sharesLong, totalSharesShort += sharesShort;\\n        if (sharesLong > 0)\\n            totalRevenue += (await sellStockWrapper(ns, sym, sharesLong)) * sharesLong - commission;\\n        if (sharesShort > 0)\\n            totalRevenue += (2 * avgShortCost - (await sellShortWrapper(ns, sym, sharesShort))) * sharesShort - commission;\\n    }\\n    log(ns, `Sold ${totalSharesLong.toLocaleString('en')} long shares and ${totalSharesShort.toLocaleString('en')} short shares ` +\\n        `in ${totalStocks} stocks for ${formatMoney(totalRevenue, 3)}`, true, 'success');\\n}\\n/** @param {NS} ns **/\\n/** @param {Player} playerStats **/\\nasync function tryGet4SApi(ns, playerStats, bitnodeMults, budget) {\\n    if (await checkAccess(ns, 'has4SDataTIXAPI'))\\n        return false; // Only return true if we just bought it\\n    const cost4sData = 1E9 * bitnodeMults.FourSigmaMarketDataCost;\\n    const cost4sApi = 25E9 * bitnodeMults.FourSigmaMarketDataApiCost;\\n    const has4S = await checkAccess(ns, 'has4SData');\\n    const totalCost = (has4S ? 0 : cost4sData) + cost4sApi;\\n    // Liquidate shares if it would allow us to afford 4S API data\\n    if (totalCost > budget) /* Need to reserve some money to invest */\\n        return false;\\n    if (playerStats.money < totalCost)\\n        await liquidate(ns);\\n    if (!has4S) {\\n        if (await tryBuy(ns, 'purchase4SMarketData'))\\n            log(ns, `SUCCESS: Purchased 4SMarketData for ${formatMoney(cost4sData)} ` +\\n                `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        else\\n            log(ns, 'ERROR attempting to purchase 4SMarketData!', false, 'error');\\n    }\\n    if (await tryBuy(ns, 'purchase4SMarketDataTixApi')) {\\n        log(ns, `SUCCESS: Purchased 4SMarketDataTixApi for ${formatMoney(cost4sApi)} ` +\\n            `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        return true;\\n    }\\n    else {\\n        log(ns, 'ERROR attempting to purchase 4SMarketDataTixApi!', false, 'error');\\n        if (!(5 in dictSourceFiles)) { // If we do not have access to bitnode multipliers, assume the cost is double and try again later\\n            log(ns, 'INFO: Bitnode mults are not available (SF5) - assuming everything is twice as expensive in the current bitnode.');\\n            bitnodeMults.FourSigmaMarketDataCost *= 2;\\n            bitnodeMults.FourSigmaMarketDataApiCost *= 2;\\n        }\\n    }\\n    return false;\\n}\\n/** @param {NS} ns\\n * @param {\\\"hasWSEAccount\\\"|\\\"hasTIXAPIAccess\\\"|\\\"has4SData\\\"|\\\"has4SDataTIXAPI\\\"} stockFn\\n * Helper to check for one of the stock access functions */\\nasync function checkAccess(ns, stockFn) {\\n    return await getNsDataThroughFile(ns, `ns.stock.${stockFn}()`);\\n}\\n/** @param {NS} ns\\n * @param {\\\"purchaseWseAccount\\\"|\\\"purchaseTixApi\\\"|\\\"purchase4SMarketData\\\"|\\\"purchase4SMarketDataTixApi\\\"} stockFn\\n * Helper to try and buy a stock access. Yes, the code is the same as above, but I wanted to be explicit. */\\nasync function tryBuy(ns, stockFn) {\\n    return await getNsDataThroughFile(ns, `ns.stock.${stockFn}()`);\\n}\\n/** @param {NS} ns\\n * @param {number} budget - The amount we are willing to spend on WSE and API access\\n * Tries to purchase access to the stock market **/\\nasync function tryGetStockMarketAccess(ns, budget) {\\n    if (await checkAccess(ns, 'hasTIXAPIAccess'))\\n        return true; // Already have access\\n    const costWseAccount = 200E6;\\n    const costTixApi = 5E9;\\n    const hasWSE = await checkAccess(ns, 'hasWSEAccount');\\n    const totalCost = (hasWSE ? 0 : costWseAccount) + costTixApi;\\n    if (totalCost > budget)\\n        return false;\\n    if (!hasWSE) {\\n        if (await tryBuy(ns, 'purchaseWseAccount'))\\n            log(ns, `SUCCESS: Purchased a WSE (stockmarket) account for ${formatMoney(costWseAccount)} ` +\\n                `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        else\\n            log(ns, 'ERROR attempting to purchase WSE account!', false, 'error');\\n    }\\n    if (await tryBuy(ns, 'purchaseTixApi')) {\\n        log(ns, `SUCCESS: Purchased Tix (stockmarket) Api access for ${formatMoney(costTixApi)} ` +\\n            `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        return true;\\n    }\\n    else\\n        log(ns, 'ERROR attempting to purchase Tix Api!', false, 'error');\\n    return false;\\n}\\nfunction initializeHud() {\\n    const d = eval(\\\"document\\\");\\n    let htmlDisplay = d.getElementById(\\\"stock-display-1\\\");\\n    if (htmlDisplay !== null)\\n        return htmlDisplay;\\n    // Get the custom display elements in HUD.\\n    let customElements = d.getElementById(\\\"overview-extra-hook-0\\\").parentElement.parentElement;\\n    // Make a clone of the hook for extra hud elements, and move it up under money\\n    let stockValueTracker = customElements.cloneNode(true);\\n    // Remove any nested elements created by stats.js\\n    stockValueTracker.querySelectorAll(\\\"p > p\\\").forEach(el => el.parentElement.removeChild(el));\\n    // Change ids since duplicate id's are invalid\\n    stockValueTracker.querySelectorAll(\\\"p\\\").forEach((el, i) => el.id = \\\"stock-display-\\\" + i);\\n    // Get out output element\\n    htmlDisplay = stockValueTracker.querySelector(\\\"#stock-display-1\\\");\\n    // Display label and default value\\n    stockValueTracker.querySelectorAll(\\\"p\\\")[0].innerText = \\\"Stock\\\";\\n    htmlDisplay.innerText = \\\"$0.000 \\\";\\n    // Insert our element right after Money\\n    customElements.parentElement.insertBefore(stockValueTracker, customElements.parentElement.childNodes[2]);\\n    return htmlDisplay;\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"server/trade.js\",\"server\":\"home\"}}],[\"trade/helper.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Return a formatted representation of the monetary amount using scale symbols (e.g. $6.50M)\\n * @param {number} num - The number to format\\n * @param {number=} maxSignificantFigures - (default: 6) The maximum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} maxDecimalPlaces - (default: 3) The maximum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatMoney(num, maxSignificantFigures = 6, maxDecimalPlaces = 3) {\\n    let numberShort = formatNumberShort(num, maxSignificantFigures, maxDecimalPlaces);\\n    return num >= 0 ? \\\"$\\\" + numberShort : numberShort.replace(\\\"-\\\", \\\"-$\\\");\\n}\\nconst symbols = [\\\"\\\", \\\"k\\\", \\\"m\\\", \\\"b\\\", \\\"t\\\", \\\"q\\\", \\\"Q\\\", \\\"s\\\", \\\"S\\\", \\\"o\\\", \\\"n\\\", \\\"e33\\\", \\\"e36\\\", \\\"e39\\\"];\\n/**\\n * Return a formatted representation of the monetary amount using scale sympols (e.g. 6.50M)\\n * @param {number} num - The number to format\\n * @param {number=} maxSignificantFigures - (default: 6) The maximum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} maxDecimalPlaces - (default: 3) The maximum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatNumberShort(num, maxSignificantFigures = 6, maxDecimalPlaces = 3) {\\n    if (Math.abs(num) > 10 ** (3 * symbols.length)) // If we've exceeded our max symbol, switch to exponential notation\\n        return num.toExponential(Math.min(maxDecimalPlaces, maxSignificantFigures - 1));\\n    for (var i = 0, sign = Math.sign(num), num = Math.abs(num); num >= 1000 && i < symbols.length; i++)\\n        num /= 1000;\\n    // TODO: A number like 9.999 once rounded to show 3 sig figs, will become 10.00, which is now 4 sig figs.\\n    return ((sign < 0) ? \\\"-\\\" : \\\"\\\") + num.toFixed(Math.max(0, Math.min(maxDecimalPlaces, maxSignificantFigures - Math.floor(1 + Math.log10(num))))) + symbols[i];\\n}\\n/** Convert a shortened number back into a value */\\nexport function parseShortNumber(text = \\\"0\\\") {\\n    let parsed = Number(text);\\n    if (!isNaN(parsed))\\n        return parsed;\\n    for (const sym of symbols.slice(1))\\n        if (text.toLowerCase().endsWith(sym))\\n            return Number.parseFloat(text.slice(0, text.length - sym.length)) * Math.pow(10, 3 * symbols.indexOf(sym));\\n    return Number.NaN;\\n}\\n/**\\n * Return a number formatted with the specified number of significatnt figures or decimal places, whichever is more limiting.\\n * @param {number} num - The number to format\\n * @param {number=} minSignificantFigures - (default: 6) The minimum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} minDecimalPlaces - (default: 3) The minimum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatNumber(num, minSignificantFigures = 3, minDecimalPlaces = 1) {\\n    return num == 0.0 ? num : num.toFixed(Math.max(minDecimalPlaces, Math.max(0, minSignificantFigures - Math.ceil(Math.log10(num)))));\\n}\\n/** Formats some RAM amount as a round number of GB with thousands separators e.g. `1,028 GB` */\\nexport function formatRam(num) {\\n    return `${Math.round(num).toLocaleString('en')} GB`;\\n}\\n/** Return a datatime in ISO format */\\nexport function formatDateTime(datetime) {\\n    return datetime.toISOString();\\n}\\n/** Format a duration (in milliseconds) as e.g. '1h 21m 6s' for big durations or e.g '12.5s' / '23ms' for small durations */\\nexport function formatDuration(duration) {\\n    if (duration < 1000)\\n        return `${duration.toFixed(0)}ms`;\\n    if (!isFinite(duration))\\n        return 'forever (Infinity)';\\n    const portions = [];\\n    const msInHour = 1000 * 60 * 60;\\n    const hours = Math.trunc(duration / msInHour);\\n    if (hours > 0) {\\n        portions.push(hours + 'h');\\n        duration -= (hours * msInHour);\\n    }\\n    const msInMinute = 1000 * 60;\\n    const minutes = Math.trunc(duration / msInMinute);\\n    if (minutes > 0) {\\n        portions.push(minutes + 'm');\\n        duration -= (minutes * msInMinute);\\n    }\\n    let seconds = (duration / 1000.0);\\n    // Include millisecond precision if we're on the order of seconds\\n    seconds = (hours == 0 && minutes == 0) ? seconds.toPrecision(3) : seconds.toFixed(0);\\n    if (seconds > 0) {\\n        portions.push(seconds + 's');\\n        duration -= (minutes * 1000);\\n    }\\n    return portions.join(' ');\\n}\\n/** Generate a hashCode for a string that is pretty unique most of the time */\\nexport function hashCode(s) {\\n    return s.split(\\\"\\\").reduce(function (a, b) {\\n        a = ((a << 5) - a) + b.charCodeAt(0);\\n        return a & a;\\n    }, 0);\\n}\\n/** @param {NS} ns **/\\nexport function disableLogs(ns, listOfLogs) {\\n    ['disableLog'].concat(...listOfLogs).forEach(log => checkNsInstance(ns, '\\\"disableLogs\\\"').disableLog(log));\\n}\\n/** Joins all arguments as components in a path, e.g. pathJoin(\\\"foo\\\", \\\"bar\\\", \\\"/baz\\\") = \\\"foo/bar/baz\\\" **/\\nexport function pathJoin(...args) {\\n    return args.filter(s => !!s).join('/').replace(/\\\\/\\\\/+/g, '/');\\n}\\n/** Gets the path for the given local file, taking into account optional subfolder relocation via git-pull.js **/\\nexport function getFilePath(file) {\\n    const subfolder = ''; // git-pull.js optionally modifies this when downloading\\n    return pathJoin(subfolder, file);\\n}\\n// FUNCTIONS THAT PROVIDE ALTERNATIVE IMPLEMENTATIONS TO EXPENSIVE NS FUNCTIONS\\n// VARIATIONS ON NS.RUN\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.run in your script **/\\nexport function getFnRunViaNsRun(ns) {\\n    return checkNsInstance(ns, '\\\"getFnRunViaNsRun\\\"').run;\\n}\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.exec in your script **/\\nexport function getFnRunViaNsExec(ns, host = \\\"home\\\") {\\n    checkNsInstance(ns, '\\\"getFnRunViaNsExec\\\"');\\n    return function (scriptPath, ...args) {\\n        return ns.exec(scriptPath, host, ...args);\\n    };\\n}\\n// VARIATIONS ON NS.ISRUNNING\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.run in your script  */\\nexport function getFnIsAliveViaNsIsRunning(ns) {\\n    return checkNsInstance(ns, '\\\"getFnIsAliveViaNsIsRunning\\\"').isRunning;\\n}\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.ps in your script  */\\nexport function getFnIsAliveViaNsPs(ns) {\\n    checkNsInstance(ns, '\\\"getFnIsAliveViaNsPs\\\"');\\n    return function (pid, host) {\\n        return ns.ps(host).some(process => process.pid === pid);\\n    };\\n}\\n/**\\n * Retrieve the result of an ns command by executing it in a temporary .js script, writing the result to a file, then shuting it down\\n * Importing incurs a maximum of 1.1 GB RAM (0 GB for ns.read, 1 GB for ns.run, 0.1 GB for ns.isRunning).\\n * Has the capacity to retry if there is a failure (e.g. due to lack of RAM available). Not recommended for performance-critical code.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fName - (default \\\"/Temp/{command-name}.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n * @param {bool=} verbose - (default false) If set to true, pid and result of command are logged.\\n **/\\nexport async function getNsDataThroughFile(ns, command, fName = null, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"getNsDataThroughFile\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['run', 'isRunning']);\\n    return await getNsDataThroughFile_Custom(ns, ns.run, command, fName, args, verbose, maxRetries, retryDelayMs);\\n}\\n/** Convert a command name like \\\"ns.namespace.someFunction(args, args)\\\" into\\n * a default file path for running that command \\\"/Temp/namespace-someFunction.txt\\\" */\\nfunction getDefaultCommandFileName(command, ext = '.txt') {\\n    // If prefixed with \\\"ns.\\\", strip that out\\n    let fname = command;\\n    if (fname.startsWith(\\\"ns.\\\"))\\n        fname = fname.slice(3);\\n    // Remove anything between parentheses\\n    fname = fname.replace(/ *\\\\([^)]*\\\\) */g, \\\"\\\");\\n    // Replace any dereferencing (dots) with dashes\\n    fname = fname.replace(\\\".\\\", \\\"-\\\");\\n    return `/Temp/${fname}${ext}`;\\n}\\n/**\\n * An advanced version of getNsDataThroughFile that lets you pass your own \\\"fnRun\\\" implementation to reduce RAM requirements\\n * Importing incurs no RAM (now that ns.read is free) plus whatever fnRun you provide it\\n * Has the capacity to retry if there is a failure (e.g. due to lack of RAM available). Not recommended for performance-critical code.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {function} fnRun - A single-argument function used to start the new sript, e.g. `ns.run` or `(f,...args) => ns.exec(f, \\\"home\\\", ...args)`\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n **/\\nexport async function getNsDataThroughFile_Custom(ns, fnRun, command, fName = null, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"getNsDataThroughFile_Custom\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['read']);\\n    fName = fName || getDefaultCommandFileName(command);\\n    const fNameCommand = fName + '.js';\\n    // Pre-write contents to the file that will allow us to detect if our temp script never got run\\n    const initialContents = \\\"<Insufficient RAM>\\\";\\n    ns.write(fName, initialContents, 'w');\\n    // TODO: Workaround for v2.3.0 deprecation. Remove when the warning is gone.\\n    // Avoid serializing ns.getPlayer() properties that generate warnings\\n    if (command === \\\"ns.getPlayer()\\\")\\n        command = `( ()=> { let player = ns.getPlayer();\\r\\n            const excludeProperties = ['playtimeSinceLastAug', 'playtimeSinceLastBitnode', 'bitNodeN'];\\r\\n            return Object.keys(player).reduce((pCopy, key) => {\\r\\n                if (!excludeProperties.includes(key))\\r\\n                   pCopy[key] = player[key];\\r\\n                return pCopy;\\r\\n            }, {});\\r\\n        })()`;\\n    // Prepare a command that will write out a new file containing the results of the command\\n    // unless it already exists with the same contents (saves time/ram to check first)\\n    // If an error occurs, it will write an empty file to avoid old results being misread.\\n    const commandToFile = `let r;try{r=JSON.stringify(\\\\n` +\\n        `    ${command}\\\\n` +\\n        `);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\\\n` +\\n        `const f=\\\"${fName}\\\"; if(ns.read(f)!==r) ns.write(f,r,'w')`;\\n    // Run the command with auto-retries if it fails\\n    const pid = await runCommand_Custom(ns, fnRun, commandToFile, fNameCommand, args, verbose, maxRetries, retryDelayMs);\\n    // Wait for the process to complete. Note, as long as the above returned a pid, we don't actually have to check it, just the file contents\\n    const fnIsAlive = (ignored_pid) => ns.read(fName) === initialContents;\\n    await waitForProcessToComplete_Custom(ns, fnIsAlive, pid, verbose);\\n    if (verbose)\\n        log(ns, `Process ${pid} is done. Reading the contents of ${fName}...`);\\n    // Read the file, with auto-retries if it fails // TODO: Unsure reading a file can fail or needs retrying.\\n    let lastRead;\\n    const fileData = await autoRetry(ns, () => ns.read(fName), f => (lastRead = f) !== undefined && f !== \\\"\\\" && f !== initialContents && !(typeof f == \\\"string\\\" && f.startsWith(\\\"ERROR: \\\")), () => `\\\\nns.read('${fName}') returned a bad result: \\\"${lastRead}\\\".` +\\n        `\\\\n  Script:  ${fNameCommand}\\\\n  Args:    ${JSON.stringify(args)}\\\\n  Command: ${command}` +\\n        (lastRead == undefined ? '\\\\nThe developer has no idea how this could have happened. Please post a screenshot of this error on discord.' :\\n            lastRead == initialContents ? `\\\\nThe script that ran this will likely recover and try again later once you have more free ram.` :\\n                lastRead == \\\"\\\" ? `\\\\nThe file appears to have been deleted before a result could be retrieved. Perhaps there is a conflicting script.` :\\n                    `\\\\nThe script was likely passed invalid arguments. Please post a screenshot of this error on discord.`), maxRetries, retryDelayMs, undefined, verbose, verbose);\\n    if (verbose)\\n        log(ns, `Read the following data for command ${command}:\\\\n${fileData}`);\\n    return JSON.parse(fileData); // Deserialize it back into an object/array and return\\n}\\n/** Evaluate an arbitrary ns command by writing it to a new script and then running or executing it.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fileName - (default \\\"/Temp/{command-name}.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n * @param {bool=} verbose - (default false) If set to true, the evaluation result of the command is printed to the terminal\\n */\\nexport async function runCommand(ns, command, fileName, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"runCommand\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['run']);\\n    return await runCommand_Custom(ns, ns.run, command, fileName, args, verbose, maxRetries, retryDelayMs);\\n}\\nconst _cachedExports = [];\\n/** @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @returns {string[]} The set of all funciton names exported by this file. */\\nfunction getExports(ns) {\\n    if (_cachedExports.length > 0)\\n        return _cachedExports;\\n    const scriptHelpersRows = ns.read(getFilePath('trade/helper.js')).split(\\\"\\\\n\\\");\\n    for (const row of scriptHelpersRows) {\\n        if (!row.startsWith(\\\"export\\\"))\\n            continue;\\n        const funcNameStart = row.indexOf(\\\"function\\\") + \\\"function\\\".length + 1;\\n        const funcNameEnd = row.indexOf(\\\"(\\\", funcNameStart);\\n        _cachedExports.push(row.substring(funcNameStart, funcNameEnd));\\n    }\\n    return _cachedExports;\\n}\\n/**\\n * An advanced version of runCommand that lets you pass your own \\\"isAlive\\\" test to reduce RAM requirements (e.g. to avoid referencing ns.isRunning)\\n * Importing incurs 0 GB RAM (assuming fnRun, fnWrite are implemented using another ns function you already reference elsewhere like ns.exec)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {function} fnRun - A single-argument function used to start the new sript, e.g. `ns.run` or `(f,...args) => ns.exec(f, \\\"home\\\", ...args)`\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fileName - (default \\\"/Temp/{commandhash}-data.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n **/\\nexport async function runCommand_Custom(ns, fnRun, command, fileName, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"runCommand_Custom\\\"');\\n    if (!Array.isArray(args))\\n        throw new Error(`args specified were a ${typeof args}, but an array is required.`);\\n    if (!verbose)\\n        disableLogs(ns, ['sleep']);\\n    // Auto-import any helpers that the temp script attempts to use\\n    const required = getExports(ns).filter(e => command.includes(`${e}(`));\\n    let script = (required.length > 0 ? `import { ${required.join(\\\", \\\")} } from 'trade/helper.js'\\\\n` : '') +\\n        `export async function main(ns) { ${command} }`;\\n    fileName = fileName || getDefaultCommandFileName(command, '.js');\\n    if (verbose)\\n        log(ns, `INFO: Using a temporary script (${fileName}) to execute the command:` +\\n            `\\\\n  ${command}\\\\nWith the following arguments:    ${JSON.stringify(args)}`);\\n    // It's possible for the file to be deleted while we're trying to execute it, so even wrap writing the file in a retry\\n    return await autoRetry(ns, async () => {\\n        // To improve performance, don't re-write the temp script if it's already in place with the correct contents.\\n        const oldContents = ns.read(fileName);\\n        if (oldContents != script) {\\n            if (oldContents) // Create some noise if temp scripts are being created with the same name but different contents\\n                ns.tprint(`WARNING: Had to overwrite temp script ${fileName}\\\\nOld Contents:\\\\n${oldContents}\\\\nNew Contents:\\\\n${script}` +\\n                    `\\\\nThis warning is generated as part of an effort to switch over to using only 'immutable' temp scripts. ` +\\n                    `Please paste a screenshot in Discord at https://discord.com/channels/415207508303544321/935667531111342200`);\\n            ns.write(fileName, script, \\\"w\\\");\\n            // Wait for the script to appear and be readable (game can be finicky on actually completing the write)\\n            await autoRetry(ns, () => ns.read(fileName), c => c == script, () => `Temporary script ${fileName} is not available, ` +\\n                `despite having written it. (Did a competing process delete or overwrite it?)`, maxRetries, retryDelayMs, undefined, verbose, verbose);\\n        }\\n        // Run the script, now that we're sure it is in place\\n        return fnRun(fileName, 1 /* Always 1 thread */, ...args);\\n    }, pid => pid !== 0, () => `The temp script was not run (likely due to insufficient RAM).` +\\n        `\\\\n  Script:  ${fileName}\\\\n  Args:    ${JSON.stringify(args)}\\\\n  Command: ${command}` +\\n        `\\\\nThe script that ran this will likely recover and try again later once you have more free ram.`, maxRetries, retryDelayMs, undefined, verbose, verbose);\\n}\\n/**\\n * Wait for a process id to complete running\\n * Importing incurs a maximum of 0.1 GB RAM (for ns.isRunning)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {int} pid - The process id to monitor\\n * @param {bool=} verbose - (default false) If set to true, pid and result of command are logged.\\n **/\\nexport async function waitForProcessToComplete(ns, pid, verbose) {\\n    checkNsInstance(ns, '\\\"waitForProcessToComplete\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['isRunning']);\\n    return await waitForProcessToComplete_Custom(ns, ns.isRunning, pid, verbose);\\n}\\n/**\\n * An advanced version of waitForProcessToComplete that lets you pass your own \\\"isAlive\\\" test to reduce RAM requirements (e.g. to avoid referencing ns.isRunning)\\n * Importing incurs 0 GB RAM (assuming fnIsAlive is implemented using another ns function you already reference elsewhere like ns.ps)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {(pid: number) => Promise<boolean>} fnIsAlive - A single-argument function used to start the new sript, e.g. `ns.isRunning` or `pid => ns.ps(\\\"home\\\").some(process => process.pid === pid)`\\n **/\\nexport async function waitForProcessToComplete_Custom(ns, fnIsAlive, pid, verbose) {\\n    checkNsInstance(ns, '\\\"waitForProcessToComplete_Custom\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['sleep']);\\n    // Wait for the PID to stop running (cheaper than e.g. deleting (rm) a possibly pre-existing file and waiting for it to be recreated)\\n    let start = Date.now();\\n    let sleepMs = 1;\\n    let done = false;\\n    for (var retries = 0; retries < 1000; retries++) {\\n        if (!(await fnIsAlive(pid))) {\\n            done = true;\\n            break; // Script is done running\\n        }\\n        if (verbose && retries % 100 === 0)\\n            ns.print(`Waiting for pid ${pid} to complete... (${formatDuration(Date.now() - start)})`);\\n        await ns.sleep(sleepMs);\\n        sleepMs = Math.min(sleepMs * 2, 200);\\n    }\\n    // Make sure that the process has shut down and we haven't just stopped retrying\\n    if (!done) {\\n        let errorMessage = `run-command pid ${pid} is running much longer than expected. Max retries exceeded.`;\\n        ns.print(errorMessage);\\n        throw new Error(errorMessage);\\n    }\\n}\\n/** If the argument is an Error instance, returns it as is, otherwise, returns a new Error instance. */\\nfunction asError(error) {\\n    return error instanceof Error ? error : new Error(typeof error === 'string' ? error : JSON.stringify(error));\\n}\\n/** Helper to retry something that failed temporarily (can happen when e.g. we temporarily don't have enough RAM to run)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport async function autoRetry(ns, fnFunctionThatMayFail, fnSuccessCondition, errorContext = \\\"Success condition not met\\\", maxRetries = 5, initialRetryDelayMs = 50, backoffRate = 3, verbose = false, tprintFatalErrors = true) {\\n    checkNsInstance(ns, '\\\"autoRetry\\\"');\\n    let retryDelayMs = initialRetryDelayMs, attempts = 0;\\n    while (attempts++ <= maxRetries) {\\n        try {\\n            const result = await fnFunctionThatMayFail();\\n            const error = typeof errorContext === 'string' ? errorContext : errorContext();\\n            if (!fnSuccessCondition(result))\\n                throw asError(error);\\n            return result;\\n        }\\n        catch (error) {\\n            const fatal = attempts >= maxRetries;\\n            log(ns, `${fatal ? 'FAIL' : 'INFO'}: Attempt ${attempts} of ${maxRetries} failed` +\\n                (fatal ? `: ${typeof error === 'string' ? error : error.message || JSON.stringify(error)}` : `. Trying again in ${retryDelayMs}ms...`), tprintFatalErrors && fatal, !verbose ? undefined : (fatal ? 'error' : 'info'));\\n            if (fatal)\\n                throw asError(error);\\n            await ns.sleep(retryDelayMs);\\n            retryDelayMs *= backoffRate;\\n        }\\n    }\\n}\\n/** Helper to log a message, and optionally also tprint it and toast it\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport function log(ns, message = \\\"\\\", alsoPrintToTerminal = false, toastStyle = \\\"\\\", maxToastLength = Number.MAX_SAFE_INTEGER) {\\n    checkNsInstance(ns, '\\\"log\\\"');\\n    ns.print(message);\\n    if (toastStyle)\\n        ns.toast(message.length <= maxToastLength ? message : message.substring(0, maxToastLength - 3) + \\\"...\\\", toastStyle);\\n    if (alsoPrintToTerminal) {\\n        ns.tprint(message);\\n        // TODO: Find a way write things logged to the terminal to a \\\"permanent\\\" terminal log file, preferably without this becoming an async function.\\n        //       Perhaps we copy logs to a port so that a separate script can optionally pop and append them to a file.\\n        //ns.write(\\\"log.terminal.txt\\\", message + '\\\\n', 'a'); // Note: we should get away with not awaiting this promise since it's not a script file\\n    }\\n    return message;\\n}\\n/** Helper to get a list of all hostnames on the network\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport function scanAllServers(ns) {\\n    checkNsInstance(ns, '\\\"scanAllServers\\\"');\\n    let discoveredHosts = []; // Hosts (a.k.a. servers) we have scanned\\n    let hostsToScan = [\\\"home\\\"]; // Hosts we know about, but have no yet scanned\\n    let infiniteLoopProtection = 9999; // In case you mess with this code, this should save you from getting stuck\\n    while (hostsToScan.length > 0 && infiniteLoopProtection-- > 0) { // Loop until the list of hosts to scan is empty\\n        let hostName = hostsToScan.pop(); // Get the next host to be scanned\\n        discoveredHosts.push(hostName); // Mark this host as \\\"scanned\\\"\\n        for (const connectedHost of ns.scan(hostName)) // \\\"scan\\\" (list all hosts connected to this one)\\n            if (!discoveredHosts.includes(connectedHost) && !hostsToScan.includes(connectedHost)) // If we haven't found this host\\n                hostsToScan.push(connectedHost); // Add it to the queue of hosts to be scanned\\n    }\\n    return discoveredHosts; // The list of scanned hosts should now be the set of all hosts in the game!\\n}\\n/** @param {NS} ns\\n * Get a dictionary of active source files, taking into account the current active bitnode as well (optionally disabled). **/\\nexport async function getActiveSourceFiles(ns, includeLevelsFromCurrentBitnode = true) {\\n    return await getActiveSourceFiles_Custom(ns, getNsDataThroughFile, includeLevelsFromCurrentBitnode);\\n}\\n/** @param {NS} ns\\n * @param {(ns: NS, command: string, fName?: string, args?: any, verbose?: any, maxRetries?: number, retryDelayMs?: number) => Promise<any>} fnGetNsDataThroughFile\\n * getActiveSourceFiles Helper that allows the user to pass in their chosen implementation of getNsDataThroughFile to minimize RAM usage **/\\nexport async function getActiveSourceFiles_Custom(ns, fnGetNsDataThroughFile, includeLevelsFromCurrentBitnode = true) {\\n    checkNsInstance(ns, '\\\"getActiveSourceFiles\\\"');\\n    // Find out what source files the user has unlocked\\n    let dictSourceFiles;\\n    try {\\n        dictSourceFiles = await fnGetNsDataThroughFile(ns, `Object.fromEntries(ns.singularity.getOwnedSourceFiles().map(sf => [sf.n, sf.lvl]))`, '/Temp/owned-source-files.txt');\\n    }\\n    catch {\\n        dictSourceFiles = {};\\n    } // If this fails (e.g. low RAM), return an empty dictionary\\n    // If the user is currently in a given bitnode, they will have its features unlocked\\n    if (includeLevelsFromCurrentBitnode) {\\n        try {\\n            const currentNode = (await fnGetNsDataThroughFile(ns, 'ns.getResetInfo()', '/Temp/reset-info.txt')).currentNode;\\n            dictSourceFiles[currentNode] = Math.max(3, dictSourceFiles[currentNode] || 0);\\n        }\\n        catch { /* We are expected to be fault-tolerant in low-ram conditions */\\n        }\\n    }\\n    return dictSourceFiles;\\n}\\n/** @param {NS} ns\\n * Return bitnode multiplers, or null if they cannot be accessed. **/\\nexport async function tryGetBitNodeMultipliers(ns) {\\n    return await tryGetBitNodeMultipliers_Custom(ns, getNsDataThroughFile);\\n}\\n/** @param {NS} ns\\n * tryGetBitNodeMultipliers Helper that allows the user to pass in their chosen implementation of getNsDataThroughFile to minimize RAM usage **/\\nexport async function tryGetBitNodeMultipliers_Custom(ns, fnGetNsDataThroughFile) {\\n    checkNsInstance(ns, '\\\"tryGetBitNodeMultipliers\\\"');\\n    let canGetBitNodeMultipliers = false;\\n    try {\\n        canGetBitNodeMultipliers = 5 in (await getActiveSourceFiles_Custom(ns, fnGetNsDataThroughFile));\\n    }\\n    catch {\\n    }\\n    if (!canGetBitNodeMultipliers)\\n        return null;\\n    try {\\n        return await fnGetNsDataThroughFile(ns, 'ns.getBitNodeMultipliers()', '/Temp/bitnode-multipliers.txt');\\n    }\\n    catch {\\n    }\\n    return null;\\n}\\n/** @param {NS} ns\\n * Returns the number of instances of the current script running on the specified host. **/\\nexport async function instanceCount(ns, onHost = \\\"home\\\", warn = true, tailOtherInstances = true) {\\n    checkNsInstance(ns, '\\\"alreadyRunning\\\"');\\n    const scriptName = ns.getScriptName();\\n    const others = await getNsDataThroughFile(ns, 'ns.ps(ns.args[0]).filter(p => p.filename == ns.args[1]).map(p => p.pid)', '/Temp/ps-other-instances.txt', [onHost, scriptName]);\\n    if (others.length >= 2) {\\n        if (warn)\\n            log(ns, `WARNING: You cannot start multiple versions of this script (${scriptName}). Please shut down the other instance first.` +\\n                (tailOtherInstances ? ' (To help with this, a tail window for the other instance will be opened)' : ''), true, 'warning');\\n        if (tailOtherInstances) // Tail all but the last pid, since it will belong to the current instance (which will be shut down)\\n            others.slice(0, others.length - 1).forEach(pid => ns.tail(pid));\\n    }\\n    return others.length;\\n}\\nlet cachedStockSymbols = null; // Cache of stock symbols since these never change\\n/** Helper function to get all stock symbols, or null if you do not have TIX api access.\\n * Caches symbols the first time they are successfully requested, since symbols never change.\\n * @param {NS} ns */\\nexport async function getStockSymbols(ns) {\\n    cachedStockSymbols ??= await getNsDataThroughFile(ns, `(() => { try { return ns.stock.getSymbols(); } catch { return null; } })()`, '/Temp/stock-symbols.txt');\\n    return cachedStockSymbols;\\n}\\n/** Helper function to get the total value of stocks using as little RAM as possible.\\n * @param {NS} ns */\\nexport async function getStocksValue(ns) {\\n    let stockSymbols = await getStockSymbols(ns);\\n    if (stockSymbols == null)\\n        return 0; // No TIX API Access\\n    const stockGetAll = async (fn) => await getNsDataThroughFile(ns, `(() => { try { return Object.fromEntries(ns.args.map(sym => [sym, ns.stock.${fn}(sym)])); } catch { return null; } })()`, `/Temp/stock-${fn}-all.txt`, stockSymbols);\\n    const askPrices = await stockGetAll('getAskPrice');\\n    // Workaround for Bug #304: If we lost TIX access, our cache of stock symbols will still be valid, but we won't be able to get prices.\\n    if (askPrices == null)\\n        return 0; // No TIX API Access\\n    const bidPrices = await stockGetAll('getBidPrice');\\n    const positions = await stockGetAll('getPosition');\\n    return stockSymbols.map(sym => ({ sym, pos: positions[sym], ask: askPrices[sym], bid: bidPrices[sym] }))\\n        .reduce((total, stk) => total + (stk.pos[0] * stk.bid) /* Long Value */ + stk.pos[2] * (stk.pos[3] * 2 - stk.ask) /* Short Value */\\n        // Subtract commission only if we have one or more shares (this is money we won't get when we sell our position)\\n        // If for some crazy reason we have shares both in the short and long position, we'll have to pay the commission twice (two separate sales)\\n        - 100000 * (Math.sign(stk.pos[0]) + Math.sign(stk.pos[2])), 0);\\n}\\n/** @param {NS} ns\\n * Returns a helpful error message if we forgot to pass the ns instance to a function */\\nexport function checkNsInstance(ns, fnName = \\\"this function\\\") {\\n    if (ns === undefined || !ns.print)\\n        throw new Error(`The first argument to ${fnName} should be a 'ns' instance.`);\\n    return ns;\\n}\\n/** A helper to parse the command line arguments with a bunch of extra features, such as\\n * - Loading a persistent defaults override from a local config file named after the script.\\n * - Rendering \\\"--help\\\" output without all scripts having to explicitly specify it\\n * @param {NS} ns\\n * @param {[string, string | number | boolean | string[]][]} argsSchema - Specification of possible command line args. **/\\nexport function getConfiguration(ns, argsSchema) {\\n    checkNsInstance(ns, '\\\"getConfig\\\"');\\n    const scriptName = ns.getScriptName();\\n    // If the user has a local config file, override the defaults in the argsSchema\\n    const confName = `${scriptName}.config.txt`;\\n    const overrides = ns.read(confName);\\n    const overriddenSchema = overrides ? [...argsSchema] : argsSchema; // Clone the original args schema\\n    if (overrides) {\\n        try {\\n            let parsedOverrides = JSON.parse(overrides); // Expect a parsable dict or array of 2-element arrays like args schema\\n            if (Array.isArray(parsedOverrides))\\n                parsedOverrides = Object.fromEntries(parsedOverrides);\\n            log(ns, `INFO: Applying ${Object.keys(parsedOverrides).length} overriding default arguments from \\\"${confName}\\\"...`);\\n            for (const key in parsedOverrides) {\\n                const override = parsedOverrides[key];\\n                const matchIndex = overriddenSchema.findIndex(o => o[0] == key);\\n                const match = matchIndex === -1 ? null : overriddenSchema[matchIndex];\\n                if (!match)\\n                    throw new Error(`Unrecognized key \\\"${key}\\\" does not match of this script's options: ` + JSON.stringify(argsSchema.map(a => a[0])));\\n                else if (override === undefined)\\n                    throw new Error(`The key \\\"${key}\\\" appeared in the config with no value. Some value must be provided. Try null?`);\\n                else if (match && JSON.stringify(match[1]) != JSON.stringify(override)) {\\n                    if (typeof (match[1]) !== typeof (override))\\n                        log(ns, `WARNING: The \\\"${confName}\\\" overriding \\\"${key}\\\" value: ${JSON.stringify(override)} has a different type (${typeof override}) than the ` +\\n                            `current default value ${JSON.stringify(match[1])} (${typeof match[1]}). The resulting behaviour may be unpredictable.`, false, 'warning');\\n                    else\\n                        log(ns, `INFO: Overriding \\\"${key}\\\" value: ${JSON.stringify(match[1])}  ->  ${JSON.stringify(override)}`);\\n                    overriddenSchema[matchIndex] = { ...match }; // Clone the (previously shallow-copied) object at this position of the new argsSchema\\n                    overriddenSchema[matchIndex][1] = override; // Update the value of the clone.\\n                }\\n            }\\n        }\\n        catch (err) {\\n            log(ns, `ERROR: There's something wrong with your config file \\\"${confName}\\\", it cannot be loaded.` +\\n                `\\\\nThe error encountered was: ${(typeof err === 'string' ? err : err.message || JSON.stringify(err))}` +\\n                `\\\\nYour config file should either be a dictionary e.g.: { \\\"string-opt\\\": \\\"value\\\", \\\"num-opt\\\": 123, \\\"array-opt\\\": [\\\"one\\\", \\\"two\\\"] }` +\\n                `\\\\nor an array of dict entries (2-element arrays) e.g.: [ [\\\"string-opt\\\", \\\"value\\\"], [\\\"num-opt\\\", 123], [\\\"array-opt\\\", [\\\"one\\\", \\\"two\\\"]] ]` +\\n                `\\\\n\\\"${confName}\\\" contains:\\\\n${overrides}`, true, 'error', 80);\\n            return null;\\n        }\\n    }\\n    // Return the result of using the in-game args parser to combine the defaults with the command line args provided\\n    try {\\n        const finalOptions = ns.flags(overriddenSchema);\\n        log(ns, `INFO: Running ${scriptName} with the following settings:` + Object.keys(finalOptions).filter(a => a != \\\"_\\\").map(a => `\\\\n  ${a.length == 1 ? \\\"-\\\" : \\\"--\\\"}${a} = ${finalOptions[a] === null ? \\\"null\\\" : JSON.stringify(finalOptions[a])}`).join(\\\"\\\") +\\n            `\\\\nrun ${scriptName} --help  to get more information about these options.`);\\n        return finalOptions;\\n    }\\n    catch (err) { // Detect if the user passed invalid arguments, and return help text\\n        const error = ns.args.includes(\\\"help\\\") || ns.args.includes(\\\"--help\\\") ? null : // Detect if the user explictly asked for help and suppress the error\\n            (typeof err === 'string' ? err : err.message || JSON.stringify(err));\\n        // Try to parse documentation about each argument from the source code's comments\\n        const source = ns.read(scriptName).split(\\\"\\\\n\\\");\\n        let argsRow = 1 + source.findIndex(row => row.includes(\\\"argsSchema =\\\"));\\n        const optionDescriptions = {};\\n        while (argsRow && argsRow < source.length) {\\n            const nextArgRow = source[argsRow++].trim();\\n            if (nextArgRow.length == 0)\\n                continue;\\n            if (nextArgRow[0] == \\\"]\\\" || nextArgRow.includes(\\\";\\\"))\\n                break; // We've reached the end of the args schema\\n            const commentSplit = nextArgRow.split(\\\"//\\\").map(e => e.trim());\\n            if (commentSplit.length != 2)\\n                continue; // This row doesn't appear to be in the format: [option...], // Comment\\n            const optionSplit = commentSplit[0].split(\\\"'\\\"); // Expect something like: ['name', someDefault]. All we need is the name\\n            if (optionSplit.length < 2)\\n                continue;\\n            optionDescriptions[optionSplit[1]] = commentSplit[1];\\n        }\\n        log(ns, (error ? `ERROR: There was an error parsing the script arguments provided: ${error}\\\\n` : 'INFO: ') +\\n            `${scriptName} possible arguments:` + argsSchema.map(a => `\\\\n  ${a[0].length == 1 ? \\\" -\\\" : \\\"--\\\"}${a[0].padEnd(30)} ` +\\n            `Default: ${(a[1] === null ? \\\"null\\\" : JSON.stringify(a[1])).padEnd(10)}` +\\n            (a[0] in optionDescriptions ? ` // ${optionDescriptions[a[0]]}` : '')).join(\\\"\\\") + '\\\\n' +\\n            `\\\\nTip: All argument names, and some values support auto-complete. Hit the <tab> key to autocomplete or see possible options.` +\\n            `\\\\nTip: Array arguments are populated by specifying the argument multiple times, e.g.:` +\\n            `\\\\n       run ${scriptName} --arrayArg first --arrayArg second --arrayArg third  to run the script with arrayArg=[first, second, third]` +\\n            (!overrides ? `\\\\nTip: You can override the default values by creating a config file named \\\"${confName}\\\" containing e.g.: { \\\"arg-name\\\": \\\"preferredValue\\\" }`\\n                : overrides && !error ? `\\\\nNote: The default values are being modified by overrides in your local \\\"${confName}\\\":\\\\n${overrides}`\\n                    : `\\\\nThis error may have been caused by your local overriding \\\"${confName}\\\" (especially if you changed the types of any options):\\\\n${overrides}`), true);\\n        return null; // Caller should handle null and shut down elegantly.\\n    }\\n}\\n/** In order to pass in args to pass along to the startup/completion script, they may have to be quoted, when given as\\n * parameters to this script, but those quotes will have to be stripped when passing these along to a subsequent script as raw strings.\\n * @param {string[]} args - The the array-argument passed to the script.\\n * @returns {string[]} The the array-argument unescaped (or deserialized if a single argument starting with '[' was supplied]). */\\nexport function unEscapeArrayArgs(args) {\\n    // For convenience, also support args as a single stringified array\\n    if (args.length == 1 && args[0].startsWith(\\\"[\\\"))\\n        return JSON.parse(args[0]);\\n    // Otherwise, args wrapped in quotes should have those quotes removed.\\n    const escapeChars = ['\\\"', \\\"'\\\", \\\"`\\\"];\\n    return args.map(arg => escapeChars.some(c => arg.startsWith(c) && arg.endsWith(c)) ? arg.slice(1, -1) : arg);\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"trade/helper.js\",\"server\":\"home\"}}],[\"trade/trade.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { instanceCount, getConfiguration, getNsDataThroughFile, runCommand, getActiveSourceFiles, tryGetBitNodeMultipliers, formatMoney, formatNumberShort, formatDuration, getStockSymbols } from 'trade/helper.js';\\nlet disableShorts = false;\\nlet commission = 100000; // Buy/sell commission. Expected profit must exceed this to buy anything.\\nlet totalProfit = 0.0; // We can keep track of how much we've earned since start.\\nlet lastLog = \\\"\\\"; // We update faster than the stock-market ticks, but we don't log anything unless there's been a change\\nlet allStockSymbols = null; // Stores the set of all symbols collected at start\\nlet mock = false; // If set to true, will \\\"mock\\\" buy/sell but not actually buy/sell anythingorecast\\nlet noisy = false; // If set to true, tprints and announces each time stocks are bought/sold\\nlet dictSourceFiles; // Populated at init, a dictionary of source-files the user has access to, and their level\\n// Pre-4S configuration (influences how we play the stock market before we have 4S data, after which everything's fool-proof)\\nlet showMarketSummary = false; // If set to true, will always generate and display the pre-4s forecast table in a separate tail window\\nlet minTickHistory; // This much history must be gathered before we will offer a stock forecast.\\nlet longTermForecastWindowLength; // This much history will be used to determine the historical probability of the stock (so long as no inversions are detected)\\nlet nearTermForecastWindowLength; // This much history will be used to detect recent negative trends and act on them immediately.\\n// The following pre-4s constants are hard-coded (not configurable via command line) but may require tweaking\\nconst marketCycleLength = 75; // Every this many ticks, all stocks have a 45% chance of \\\"reversing\\\" their probability. Something we must detect and act on quick to not lose profits.\\nconst maxTickHistory = 151; // This much history will be kept for purposes of detemining volatility and perhaps one day pinpointing the market cycle tick\\nconst inversionDetectionTolerance = 0.10; // If the near-term forecast is within this distance of (1 - long-term forecast), consider it a potential \\\"inversion\\\"\\nconst inversionLagTolerance = 5; // An inversion is \\\"trusted\\\" up to this many ticks after the normal nearTermForecastWindowLength expected detection time\\n// (Note: 33 total stocks * 45% inversion chance each cycle = ~15 expected inversions per cycle)\\n// The following pre-4s values are set during the lifetime of the program\\nlet marketCycleDetected = false; // We should not make risky purchasing decisions until the stock market cycle is detected. This can take a long time, but we'll be thanked\\nlet detectedCycleTick = 0; // This will be reset to zero once we've detected the market cycle point.\\nlet inversionAgreementThreshold = 6; // If this many stocks are detected as being in an \\\"inversion\\\", consider this the stock market cycle point\\nconst expectedTickTime = 6000;\\nconst catchUpTickTime = 4000;\\nlet lastTick = 0;\\nlet sleepInterval = 1000;\\nlet resetInfo = ( /**@returns{ResetInfo}*/() => undefined)(); // Information about the current bitnode\\nlet options;\\nconst argsSchema = [\\n    ['l', false],\\n    ['liquidate', false],\\n    ['mock', false],\\n    ['noisy', false],\\n    ['disable-shorts', false],\\n    ['reserve', null],\\n    ['fracB', 0.4],\\n    ['fracH', 0.2],\\n    ['buy-threshold', 0.0001],\\n    ['sell-threshold', 0],\\n    ['diversification', 0.34],\\n    ['disableHud', false],\\n    ['disable-purchase-tix-api', false],\\n    // The following settings are related only to tweaking pre-4s stock-market logic\\n    ['show-pre-4s-forecast', false],\\n    ['show-market-summary', false],\\n    ['pre-4s-buy-threshold-probability', 0.15],\\n    ['pre-4s-buy-threshold-return', 0.0015],\\n    ['pre-4s-sell-threshold-return', 0.0005],\\n    ['pre-4s-min-tick-history', 21],\\n    ['pre-4s-forecast-window', 51],\\n    ['pre-4s-inversion-detection-window', 10],\\n    ['pre-4s-min-blackout-window', 10],\\n    ['pre-4s-minimum-hold-time', 10],\\n    ['buy-4s-budget', 0.8], // Maximum corpus value we will sacrifice in order to buy 4S. Setting to 0 will never buy 4s.\\n];\\nexport function autocomplete(data, args) {\\n    data.flags(argsSchema);\\n    return [];\\n}\\n/** Requires access to the TIX API. Purchases access to the 4S Mkt Data API as soon as it can\\n * @param {NS} ns */\\nexport async function main(ns) {\\n    const runOptions = getConfiguration(ns, argsSchema);\\n    if (!runOptions)\\n        return; // Invalid options, or ran in --help mode.\\n    // If given the \\\"liquidate\\\" command, try to kill any versions of this script trading in stocks\\n    // NOTE: We must do this immediately before we start resetting / overwriting global state below (which is shared between script instances)\\n    const hasTixApiAccess = await getNsDataThroughFile(ns, 'ns.stock.hasTIXAPIAccess()');\\n    if (runOptions.l || runOptions.liquidate) {\\n        if (!hasTixApiAccess)\\n            return log(ns, 'ERROR: Cannot liquidate stocks because we do not have Tix Api Access', true, 'error');\\n        log(ns, 'INFO: Killing any other stockmaster processes...', false, 'info');\\n        await runCommand(ns, `ns.ps().filter(proc => proc.filename == '${ns.getScriptName()}' && !proc.args.includes('-l') && !proc.args.includes('--liquidate'))` +\\n            `.forEach(proc => ns.kill(proc.pid))`, '/Temp/kill-stockmarket-scripts.js');\\n        log(ns, 'INFO: Checking for and liquidating any stocks...', false, 'info');\\n        await liquidate(ns); // Sell all stocks\\n        return;\\n    } // Otherwise, prevent multiple instances of this script from being started, even with different args.\\n    if (await instanceCount(ns) > 1)\\n        return;\\n    ns.disableLog(\\\"ALL\\\");\\n    // Extract various options from the args (globals, purchasing decision factors, pre-4s factors)\\n    options = runOptions; // We don't set the global \\\"options\\\" until we're sure this is the only running instance\\n    mock = options.mock;\\n    noisy = options.noisy;\\n    const fracB = options.fracB;\\n    const fracH = options.fracH;\\n    const diversification = options.diversification;\\n    const disableHud = options.disableHud || options.liquidate || options.mock;\\n    disableShorts = options['disable-shorts'];\\n    const pre4sBuyThresholdProbability = options['pre-4s-buy-threshold-probability'];\\n    const pre4sMinBlackoutWindow = options['pre-4s-min-blackout-window'] || 1;\\n    const pre4sMinHoldTime = options['pre-4s-minimum-hold-time'] || 0;\\n    minTickHistory = options['pre-4s-min-tick-history'] || 21;\\n    nearTermForecastWindowLength = options['pre-4s-inversion-detection-window'] || 10;\\n    longTermForecastWindowLength = options['pre-4s-forecast-window'] || (marketCycleLength + 1);\\n    showMarketSummary = options['show-pre-4s-forecast'] || options['show-market-summary'];\\n    // Other global values must be reset at start lest they be left in memory from a prior run\\n    lastTick = 0, totalProfit = 0, lastLog = \\\"\\\", marketCycleDetected = false, detectedCycleTick = 0, inversionAgreementThreshold = 6;\\n    let myStocks = [], allStocks = [];\\n    let player = await getPlayerInfo(ns);\\n    resetInfo = await getNsDataThroughFile(ns, 'ns.getResetInfo()');\\n    if (!hasTixApiAccess) { // You cannot use the stockmaster until you have API access\\n        if (options['disable-purchase-tix-api'])\\n            return log(ns, \\\"ERROR: You do not have stock market API access, and --disable-purchase-tix-api is set.\\\", true);\\n        let success = false;\\n        log(ns, `INFO: You are missing stock market API access. (NOTE: This is granted for free once you have SF8). ` +\\n            `Waiting until we can have the 5b needed to buy it. (Run with --disable-purchase-tix-api to disable this feature.)`, true);\\n        do {\\n            await ns.sleep(sleepInterval);\\n            try {\\n                const reserve = options['reserve'] != null ? options['reserve'] : Number(ns.read(\\\"reserve.txt\\\") || 0);\\n                success = await tryGetStockMarketAccess(ns, player.money - reserve);\\n            }\\n            catch (err) {\\n                log(ns, `WARNING: stockmaster.js Caught (and suppressed) an unexpected error while waiting to buy stock market access:\\\\n` +\\n                    (typeof err === 'string' ? err : err.message || JSON.stringify(err)), false, 'warning');\\n            }\\n        } while (!success);\\n    }\\n    dictSourceFiles = await getActiveSourceFiles(ns); // Find out what source files the user has unlocked\\n    if (!disableShorts && (!(8 in dictSourceFiles) || dictSourceFiles[8] < 2)) {\\n        log(ns, \\\"INFO: Shorting stocks has been disabled (you have not yet unlocked access to shorting)\\\");\\n        disableShorts = true;\\n    }\\n    allStockSymbols = await getStockSymbols(ns);\\n    allStocks = await initAllStocks(ns);\\n    let bitnodeMults;\\n    if (5 in dictSourceFiles)\\n        bitnodeMults = await tryGetBitNodeMultipliers(ns);\\n    // Assume bitnode mults are 1 if user doesn't have this API access yet\\n    if (!bitnodeMults)\\n        bitnodeMults = { FourSigmaMarketDataCost: 1, FourSigmaMarketDataApiCost: 1 };\\n    if (showMarketSummary)\\n        await launchSummaryTail(ns); // Opens a separate script / window to continuously display the Pre4S forecast\\n    let hudElement = null;\\n    if (!disableHud) {\\n        hudElement = initializeHud();\\n        ns.atExit(() => hudElement.parentElement.parentElement.parentElement.removeChild(hudElement.parentElement.parentElement));\\n    }\\n    log(ns, `Welcome! Please note: all stock purchases will initially result in a Net (unrealized) Loss. This is not only due to commission, but because each stock has a 'spread' (difference in buy price and sell price). ` +\\n        `This script is designed to buy stocks that are most likely to surpass that loss and turn a profit, but it will take a few minutes to see the progress.\\\\n\\\\n` +\\n        `If you choose to stop the script, make sure you SELL all your stocks (can go 'run ${ns.getScriptName()} --liquidate') to get your money back.\\\\n\\\\nGood luck!\\\\n~ Insight\\\\n\\\\n`);\\n    let pre4s = true;\\n    while (true) {\\n        try {\\n            const playerStats = await getPlayerInfo(ns);\\n            const reserve = options['reserve'] != null ? options['reserve'] : Number(ns.read(\\\"reserve.txt\\\") || 0);\\n            // Check whether we have 4s access yes (once we do, we can stop checking)\\n            if (pre4s)\\n                pre4s = !(await checkAccess(ns, 'has4SDataTIXAPI'));\\n            const holdings = await refresh(ns, !pre4s, allStocks, myStocks); // Returns total stock value\\n            const corpus = holdings + playerStats.money; // Corpus means total stocks + cash\\n            const maxHoldings = (1 - fracH) * corpus; // The largest value of stock we could hold without violiating fracH (Fraction to keep as cash)\\n            if (pre4s && !mock && await tryGet4SApi(ns, playerStats, bitnodeMults, corpus * (options['buy-4s-budget'] - fracH) - reserve))\\n                continue; // Start the loop over if we just bought 4S API access\\n            // Be more conservative with our decisions if we don't have 4S data\\n            const thresholdToBuy = pre4s ? options['pre-4s-buy-threshold-return'] : options['buy-threshold'];\\n            const thresholdToSell = pre4s ? options['pre-4s-sell-threshold-return'] : options['sell-threshold'];\\n            if (myStocks.length > 0)\\n                doStatusUpdate(ns, allStocks, myStocks, hudElement);\\n            else if (hudElement)\\n                hudElement.innerText = \\\"$0.000 \\\";\\n            if (pre4s && allStocks[0].priceHistory.length < minTickHistory) {\\n                log(ns, `Building a history of stock prices (${allStocks[0].priceHistory.length}/${minTickHistory})...`);\\n                await ns.sleep(sleepInterval);\\n                continue;\\n            }\\n            // Sell forecasted-to-underperform shares (worse than some expected return threshold)\\n            let sales = 0;\\n            for (let stk of myStocks) {\\n                if (stk.absReturn() <= thresholdToSell || stk.bullish() && stk.sharesShort > 0 || stk.bearish() && stk.sharesLong > 0) {\\n                    if (pre4s && stk.ticksHeld < pre4sMinHoldTime) {\\n                        if (!stk.warnedBadPurchase)\\n                            log(ns, `WARNING: Thinking of selling ${stk.sym} with ER ${formatBP(stk.absReturn())}, but holding out as it was purchased just ${stk.ticksHeld} ticks ago...`);\\n                        stk.warnedBadPurchase = true; // Hack to ensure we don't spam this warning\\n                    }\\n                    else {\\n                        sales += await doSellAll(ns, stk);\\n                        stk.warnedBadPurchase = false;\\n                    }\\n                }\\n            }\\n            if (sales > 0)\\n                continue; // If we sold anything, loop immediately (no need to sleep) and refresh stats immediately before making purchasing decisions.\\n            // If we haven't gone above a certain liquidity threshold, don't attempt to buy more stock\\n            // Avoids death-by-a-thousand-commissions before we get super-rich, stocks are capped, and this is no longer an issue\\n            // BUT may mean we miss striking while the iron is hot while waiting to build up more funds.\\n            if (playerStats.money / corpus > fracB) {\\n                // Compute the cash we have to spend (such that spending it all on stock would bring us down to a liquidity of fracH)\\n                let cash = Math.min(playerStats.money - reserve, maxHoldings - holdings);\\n                // If we haven't detected the market cycle (or haven't detected it reliably), assume it might be quite soon and restrict bets to those that can turn a profit in the very-near term.\\n                const estTick = Math.max(detectedCycleTick, marketCycleLength - (!marketCycleDetected ? 10 : inversionAgreementThreshold <= 8 ? 20 : inversionAgreementThreshold <= 10 ? 30 : marketCycleLength));\\n                // Buy shares with cash remaining in hand if exceeding some buy threshold. Prioritize targets whose expected return will cover the ask/bit spread the soonest\\n                for (const stk of allStocks.sort(purchaseOrder)) {\\n                    if (cash <= 0)\\n                        break; // Break if we are out of money (i.e. from prior purchases)\\n                    // Do not purchase a stock if it is not forecasted to recover from the ask/bid spread before the next market cycle and potential probability inversion\\n                    if (stk.blackoutWindow() >= marketCycleLength - estTick)\\n                        continue;\\n                    if (pre4s && (Math.max(pre4sMinHoldTime, pre4sMinBlackoutWindow) >= marketCycleLength - estTick))\\n                        continue;\\n                    // Skip if we already own all possible shares in this stock, or if the expected return is below our threshold, or if shorts are disabled and stock is bearish\\n                    if (stk.ownedShares() == stk.maxShares || stk.absReturn() <= thresholdToBuy || (disableShorts && stk.bearish()))\\n                        continue;\\n                    // If pre-4s, do not purchase any stock whose last inversion was too recent, or whose probability is too close to 0.5\\n                    if (pre4s && (stk.lastInversion < minTickHistory || Math.abs(stk.prob - 0.5) < pre4sBuyThresholdProbability))\\n                        continue;\\n                    // Enforce diversification: Don't hold more than x% of our portfolio as a single stock (as corpus increases, this naturally stops being a limiter)\\n                    // Inflate our budget / current position value by a factor of stk.spread_pct to avoid repeated micro-buys of a stock due to the buy/ask spread making holdings appear more diversified after purchase\\n                    let budget = Math.min(cash, maxHoldings * (diversification + stk.spread_pct) - stk.positionValue() * (1.01 + stk.spread_pct));\\n                    let purchasePrice = stk.bullish() ? stk.ask_price : stk.bid_price; // Depends on whether we will be buying a long or short position\\n                    let affordableShares = Math.floor((budget - commission) / purchasePrice);\\n                    let numShares = Math.min(stk.maxShares - stk.ownedShares(), affordableShares);\\n                    if (numShares <= 0)\\n                        continue;\\n                    // Don't buy fewer shares than can beat the comission before the next stock market cycle (after covering the spread), lest the position reverse before we break-even.\\n                    let ticksBeforeCycleEnd = marketCycleLength - estTick - stk.timeToCoverTheSpread();\\n                    if (ticksBeforeCycleEnd < 1)\\n                        continue; // We're cutting it too close to the market cycle, position might reverse before we break-even on commission\\n                    let estEndOfCycleValue = numShares * purchasePrice * ((stk.absReturn() + 1) ** ticksBeforeCycleEnd - 1); // Expected difference in purchase price and value at next market cycle end\\n                    let owned = stk.ownedShares() > 0;\\n                    if (estEndOfCycleValue <= 2 * commission)\\n                        log(ns, (owned ? '' : `We currently have ${formatNumberShort(stk.ownedShares(), 3, 1)} shares in ${stk.sym} valued at ${formatMoney(stk.positionValue())} ` +\\n                            `(${(100 * stk.positionValue() / maxHoldings).toFixed(1)}% of corpus, capped at ${(diversification * 100).toFixed(1)}% by --diversification).\\\\n`) +\\n                            `Despite attractive ER of ${formatBP(stk.absReturn())}, ${owned ? 'more ' : ''}${stk.sym} was not bought. ` +\\n                            `\\\\nBudget: ${formatMoney(budget)} can only buy ${numShares.toLocaleString('en')} ${owned ? 'more ' : ''}shares @ ${formatMoney(purchasePrice)}. ` +\\n                            `\\\\nGiven an estimated ${marketCycleLength - estTick} ticks left in market cycle, less ${stk.timeToCoverTheSpread().toFixed(1)} ticks to cover the spread (${(stk.spread_pct * 100).toFixed(2)}%), ` +\\n                            `remaining ${ticksBeforeCycleEnd.toFixed(1)} ticks would only generate ${formatMoney(estEndOfCycleValue)}, which is less than 2x commission (${formatMoney(2 * commission, 3)})`);\\n                    else\\n                        cash -= await doBuy(ns, stk, numShares);\\n                }\\n            }\\n        }\\n        catch (err) {\\n            log(ns, `WARNING: stockmaster.js Caught (and suppressed) an unexpected error in the main loop:\\\\n` +\\n                (typeof err === 'string' ? err : err.message || JSON.stringify(err)), false, 'warning');\\n        }\\n        await ns.sleep(sleepInterval);\\n    }\\n}\\n/** Ram-dodge getting updated player info. Note that this is the only async routine called in the main loop.\\n * If latency or ram instability is an issue, you may wish to try uncommenting the direct request.\\n * @param {NS} ns\\n * @returns {Promise<Player>} */\\nasync function getPlayerInfo(ns) {\\n    return await getNsDataThroughFile(ns, `ns.getPlayer()`);\\n}\\nfunction getTimeInBitnode() {\\n    return Date.now() - resetInfo.lastNodeReset;\\n}\\n/* A sorting function to put stocks in the order we should prioritize investing in them */\\nlet purchaseOrder = (a, b) => (Math.ceil(a.timeToCoverTheSpread()) - Math.ceil(b.timeToCoverTheSpread())) || (b.absReturn() - a.absReturn());\\n/** @param {NS} ns\\n * Generic helper for dodging the hefty RAM requirements of stock functions by spawning a temporary script to collect info for us. */\\nasync function getStockInfoDict(ns, stockFunction) {\\n    allStockSymbols ??= await getStockSymbols(ns);\\n    if (allStockSymbols == null)\\n        throw new Error(`No WSE API Access yet, this call to ns.stock.${stockFunction} is premature.`);\\n    return await getNsDataThroughFile(ns, `Object.fromEntries(ns.args.map(sym => [sym, ns.stock.${stockFunction}(sym)]))`, `/Temp/stock-${stockFunction}.txt`, allStockSymbols);\\n}\\n;\\n/** @param {NS} ns **/\\nasync function initAllStocks(ns) {\\n    let dictMaxShares = await getStockInfoDict(ns, 'getMaxShares'); // Only need to get this once, it never changes\\n    return allStockSymbols.map(s => ({\\n        sym: s,\\n        maxShares: dictMaxShares[s],\\n        expectedReturn: function () {\\n            // To add conservatism to pre-4s estimates, we reduce the probability by 1 standard deviation without crossing the midpoint\\n            let normalizedProb = (this.prob - 0.5);\\n            let conservativeProb = normalizedProb < 0 ? Math.min(0, normalizedProb + this.probStdDev) : Math.max(0, normalizedProb - this.probStdDev);\\n            return this.vol * conservativeProb;\\n        },\\n        absReturn: function () {\\n            return Math.abs(this.expectedReturn());\\n        },\\n        bullish: function () {\\n            return this.prob > 0.5;\\n        },\\n        bearish: function () {\\n            return !this.bullish();\\n        },\\n        ownedShares: function () {\\n            return this.sharesLong + this.sharesShort;\\n        },\\n        owned: function () {\\n            return this.ownedShares() > 0;\\n        },\\n        positionValueLong: function () {\\n            return this.sharesLong * this.bid_price;\\n        },\\n        positionValueShort: function () {\\n            return this.sharesShort * (2 * this.boughtPriceShort - this.ask_price);\\n        },\\n        positionValue: function () {\\n            return this.positionValueLong() + this.positionValueShort();\\n        },\\n        // How many stock market ticks must occur at the current expected return before we regain the value lost by the spread between buy and sell prices.\\n        // This can be derived by taking the compound interest formula (future = current * (1 + expected_return) ^ n) and solving for n\\n        timeToCoverTheSpread: function () {\\n            return Math.log(this.ask_price / this.bid_price) / Math.log(1 + this.absReturn());\\n        },\\n        // We should not buy this stock within this many ticks of a Market cycle, or we risk being forced to sell due to a probability inversion, and losing money due to the spread\\n        blackoutWindow: function () {\\n            return Math.ceil(this.timeToCoverTheSpread());\\n        },\\n        // Pre-4s properties used for forecasting\\n        priceHistory: [],\\n        lastInversion: 0,\\n    }));\\n}\\n/** @param {NS} ns **/\\nasync function refresh(ns, has4s, allStocks, myStocks) {\\n    let holdings = 0;\\n    // Dodge hefty RAM requirements by spawning a sequence of temporary scripts to collect info for us one function at a time\\n    const dictAskPrices = await getStockInfoDict(ns, 'getAskPrice');\\n    const dictBidPrices = await getStockInfoDict(ns, 'getBidPrice');\\n    const dictVolatilities = !has4s ? null : await getStockInfoDict(ns, 'getVolatility');\\n    const dictForecasts = !has4s ? null : await getStockInfoDict(ns, 'getForecast');\\n    const dictPositions = mock ? null : await getStockInfoDict(ns, 'getPosition');\\n    const ticked = allStocks.some(stk => stk.ask_price != dictAskPrices[stk.sym]); // If any price has changed since our last update, the stock market has \\\"ticked\\\"\\n    if (ticked) {\\n        if (Date.now() - lastTick < expectedTickTime - sleepInterval) {\\n            if (Date.now() - lastTick < catchUpTickTime - sleepInterval) {\\n                let changedPrices = allStocks.filter(stk => stk.ask_price != dictAskPrices[stk.sym]);\\n                log(ns, `WARNING: Detected a stock market tick after only ${formatDuration(Date.now() - lastTick)}, but expected ~${formatDuration(expectedTickTime)}. ` +\\n                    (changedPrices.length >= 33 ? '(All stocks updated)' : `The following ${changedPrices.length} stock prices changed: ${changedPrices.map(stk => `${stk.sym} ${formatMoney(stk.ask_price)} -> ${formatMoney(dictAskPrices[stk.sym])}`).join(\\\", \\\")}`), false, 'warning');\\n            }\\n            else\\n                log(ns, `INFO: Detected a rapid stock market tick (${formatDuration(Date.now() - lastTick)}), likely to make up for lag / offline time.`);\\n        }\\n        lastTick = Date.now();\\n    }\\n    myStocks.length = 0;\\n    for (const stk of allStocks) {\\n        const sym = stk.sym;\\n        stk.ask_price = dictAskPrices[sym]; // The amount we would pay if we bought the stock (higher than 'price')\\n        stk.bid_price = dictBidPrices[sym]; // The amount we would recieve if we sold the stock (lower than 'price')\\n        stk.spread = stk.ask_price - stk.bid_price;\\n        stk.spread_pct = stk.spread / stk.ask_price; // The percentage of value we lose just by buying the stock\\n        stk.price = (stk.ask_price + stk.bid_price) / 2; // = ns.stock.getPrice(sym);\\n        stk.vol = has4s ? dictVolatilities[sym] : stk.vol;\\n        stk.prob = has4s ? dictForecasts[sym] : stk.prob;\\n        stk.probStdDev = has4s ? 0 : stk.probStdDev; // Standard deviation around the est. probability\\n        // Update our current portfolio of owned stock\\n        let [priorLong, priorShort] = [stk.sharesLong, stk.sharesShort];\\n        stk.position = mock ? null : dictPositions[sym];\\n        stk.sharesLong = mock ? (stk.sharesLong || 0) : stk.position[0];\\n        stk.boughtPrice = mock ? (stk.boughtPrice || 0) : stk.position[1];\\n        stk.sharesShort = mock ? (stk.shares_short || 0) : stk.position[2];\\n        stk.boughtPriceShort = mock ? (stk.boughtPrice_short || 0) : stk.position[3];\\n        holdings += stk.positionValue();\\n        if (stk.owned())\\n            myStocks.push(stk);\\n        else\\n            stk.ticksHeld = 0;\\n        if (ticked) // Increment ticksHeld, or reset it if we have no position in this stock or reversed our position last tick.\\n            stk.ticksHeld = !stk.owned() || (priorLong > 0 && stk.sharesLong == 0) || (priorShort > 0 && stk.sharesShort == 0) ? 0 : 1 + (stk.ticksHeld || 0);\\n    }\\n    if (ticked)\\n        await updateForecast(ns, allStocks, has4s); // Logic below only required on market tick\\n    return holdings;\\n}\\n// Historical probability can be inferred from the number of times the stock was recently observed increasing over the total number of observations\\nconst forecast = history => history.reduce((ups, price, idx) => idx == 0 ? 0 : (history[idx - 1] > price ? ups + 1 : ups), 0) / (history.length - 1);\\n// An \\\"inversion\\\" can be detected if two probabilities are far enough apart and are within \\\"tolerance\\\" of p1 being equal to 1-p2\\nconst tol2 = inversionDetectionTolerance / 2;\\nconst detectInversion = (p1, p2) => ((p1 >= 0.5 + tol2) && (p2 <= 0.5 - tol2) && p2 <= (1 - p1) + inversionDetectionTolerance)\\n    /* Reverse Condition: */ || ((p1 <= 0.5 - tol2) && (p2 >= 0.5 + tol2) && p2 >= (1 - p1) - inversionDetectionTolerance);\\n/** @param {NS} ns **/\\nasync function updateForecast(ns, allStocks, has4s) {\\n    const currentHistory = allStocks[0].priceHistory.length;\\n    const prepSummary = showMarketSummary || mock || (!has4s && (currentHistory < minTickHistory || allStocks.filter(stk => stk.owned()).length == 0)); // Decide whether to display the market summary table.\\n    const inversionsDetected = []; // Keep track of individual stocks whose probability has inverted (45% chance of happening each \\\"cycle\\\")\\n    detectedCycleTick = (detectedCycleTick + 1) % marketCycleLength; // Keep track of stock market cycle (which occurs every 75 ticks)\\n    for (const stk of allStocks) {\\n        stk.priceHistory.unshift(stk.price);\\n        if (stk.priceHistory.length > maxTickHistory) // Limit the rolling window size\\n            stk.priceHistory.splice(maxTickHistory, 1);\\n        // Volatility is easy - the largest observed % movement in a single tick\\n        if (!has4s)\\n            stk.vol = stk.priceHistory.reduce((max, price, idx) => Math.max(max, idx == 0 ? 0 : Math.abs(stk.priceHistory[idx - 1] - price) / price), 0);\\n        // We want stocks that have the best expected return, averaged over a long window for greater precision, but the game will occasionally invert probabilities\\n        // (45% chance every 75 updates), so we also compute a near-term forecast window to allow for early-detection of inversions so we can ditch our position.\\n        stk.nearTermForecast = forecast(stk.priceHistory.slice(0, nearTermForecastWindowLength));\\n        let preNearTermWindowProb = forecast(stk.priceHistory.slice(nearTermForecastWindowLength, nearTermForecastWindowLength + marketCycleLength)); // Used to detect the probability before the potential inversion event.\\n        // Detect whether it appears as though the probability of this stock has recently undergone an inversion (i.e. prob => 1 - prob)\\n        stk.possibleInversionDetected = has4s ? detectInversion(stk.prob, stk.lastTickProbability || stk.prob) : detectInversion(preNearTermWindowProb, stk.nearTermForecast);\\n        stk.lastTickProbability = stk.prob;\\n        if (stk.possibleInversionDetected)\\n            inversionsDetected.push(stk);\\n    }\\n    // Detect whether our auto-detected \\\"stock market cycle\\\" timing should be adjusted based on the number of potential inversions observed\\n    let summary = \\\"\\\";\\n    if (inversionsDetected.length > 0) {\\n        summary += `${inversionsDetected.length} Stocks appear to be reversing their outlook: ${inversionsDetected.map(s => s.sym).join(', ')} (threshold: ${inversionAgreementThreshold})\\\\n`;\\n        if (inversionsDetected.length >= inversionAgreementThreshold && (has4s || currentHistory >= minTickHistory)) { // We believe we have detected the stock market cycle!\\n            const newPredictedCycleTick = has4s ? 0 : nearTermForecastWindowLength; // By the time we've detected it, we're this many ticks past the cycle start\\n            if (detectedCycleTick != newPredictedCycleTick)\\n                log(ns, `Threshold for changing predicted market cycle met (${inversionsDetected.length} >= ${inversionAgreementThreshold}). ` +\\n                    `Changing current market tick from ${detectedCycleTick} to ${newPredictedCycleTick}.`);\\n            marketCycleDetected = true;\\n            detectedCycleTick = newPredictedCycleTick;\\n            // Don't adjust this in the future unless we see another day with as much or even more agreement (capped at 14, it seems sometimes our cycles get out of sync with\\n            // actual cycles and we need to reset our clock even after previously determining the cycle with great certainty.)\\n            inversionAgreementThreshold = Math.max(14, inversionsDetected.length);\\n        }\\n    }\\n    // Act on any inversions (if trusted), compute the probability, and prepare the stock summary\\n    for (const stk of allStocks) {\\n        // Don't \\\"trust\\\" (act on) a detected inversion unless it's near the time when we're capable of detecting market cycle start. Avoids most false-positives.\\n        if (stk.possibleInversionDetected && (has4s && detectedCycleTick == 0 ||\\n            (!has4s && (detectedCycleTick >= nearTermForecastWindowLength / 2) && (detectedCycleTick <= nearTermForecastWindowLength + inversionLagTolerance))))\\n            stk.lastInversion = detectedCycleTick; // If we \\\"trust\\\" a probability inversion has occurred, probability will be calculated based on only history since the last inversion.\\n        else\\n            stk.lastInversion++;\\n        // Only take the stock history since after the last inversion to compute the probability of the stock.\\n        const probWindowLength = Math.min(longTermForecastWindowLength, stk.lastInversion);\\n        stk.longTermForecast = forecast(stk.priceHistory.slice(0, probWindowLength));\\n        if (!has4s) {\\n            stk.prob = stk.longTermForecast;\\n            stk.probStdDev = Math.sqrt((stk.prob * (1 - stk.prob)) / probWindowLength);\\n        }\\n        const signalStrength = 1 + (stk.bullish() ? (stk.nearTermForecast > stk.prob ? 1 : 0) + (stk.prob > 0.8 ? 1 : 0) : (stk.nearTermForecast < stk.prob ? 1 : 0) + (stk.prob < 0.2 ? 1 : 0));\\n        if (prepSummary) { // Example: AERO  ++   Prob: 54% (t51: 54%, t10: 67%) tLast⇄:190 Vol:0.640% ER: 2.778BP Spread:1.784% ttProfit: 65 Pos: 14.7M long  (held 189 ticks)\\n            stk.debugLog = `${stk.sym.padEnd(5, ' ')} ${(stk.bullish() ? '+' : '-').repeat(signalStrength).padEnd(3)} ` +\\n                `Prob:${(stk.prob * 100).toFixed(0).padStart(3)}% (t${probWindowLength.toFixed(0).padStart(2)}:${(stk.longTermForecast * 100).toFixed(0).padStart(3)}%, ` +\\n                `t${Math.min(stk.priceHistory.length, nearTermForecastWindowLength).toFixed(0).padStart(2)}:${(stk.nearTermForecast * 100).toFixed(0).padStart(3)}%) ` +\\n                `tLast⇄:${(stk.lastInversion + 1).toFixed(0).padStart(3)} Vol:${(stk.vol * 100).toFixed(2)}% ER:${formatBP(stk.expectedReturn()).padStart(8)} ` +\\n                `Spread:${(stk.spread_pct * 100).toFixed(2)}% ttProfit:${stk.blackoutWindow().toFixed(0).padStart(3)}`;\\n            if (stk.owned())\\n                stk.debugLog += ` Pos: ${formatNumberShort(stk.ownedShares(), 3, 1)} (${stk.ownedShares() == stk.maxShares ? 'max' :\\n                    ((100 * stk.ownedShares() / stk.maxShares).toFixed(0).padStart(2) + '%')}) ${stk.sharesLong > 0 ? 'long ' : 'short'} (held ${stk.ticksHeld} ticks)`;\\n            if (stk.possibleInversionDetected)\\n                stk.debugLog += ' ⇄⇄⇄';\\n        }\\n    }\\n    // Print a summary of stocks as of this most recent tick (if enabled)\\n    if (prepSummary) {\\n        summary += `Market day ${detectedCycleTick + 1}${marketCycleDetected ? '' : '?'} of ${marketCycleLength} (${marketCycleDetected ? (100 * inversionAgreementThreshold / 19).toPrecision(2) : '0'}% certain) ` +\\n            `Current Stock Summary and Pre-4S Forecasts (by best payoff-time):\\\\n` + allStocks.sort(purchaseOrder).map(s => s.debugLog).join(\\\"\\\\n\\\");\\n        if (showMarketSummary)\\n            await updateForecastFile(ns, summary);\\n        else\\n            log(ns, summary);\\n    }\\n    // Write out a file of stock probabilities so that other scripts can make use of this (e.g. hack orchestrator can manipulate the stock market)\\n    await ns.write('/Temp/stock-probabilities.txt', JSON.stringify(Object.fromEntries(allStocks.map(stk => [stk.sym, { prob: stk.prob, sharesLong: stk.sharesLong, sharesShort: stk.sharesShort }]))), \\\"w\\\");\\n}\\n// Helpers to display the stock market summary in a separate window.\\nlet summaryFile = '/Temp/stockmarket-summary.txt';\\nlet updateForecastFile = async (ns, summary) => await ns.write(summaryFile, summary, 'w');\\nlet launchSummaryTail = async (ns) => {\\n    let summaryTailScript = summaryFile.replace('.txt', '-tail.js');\\n    if (await getNsDataThroughFile(ns, `ns.scriptRunning('${summaryTailScript}', ns.getHostname())`, '/Temp/stockmarket-summary-is-running.txt'))\\n        return;\\n    //await getNsDataThroughFile(ns, `ns.scriptKill('${summaryTailScript}', ns.getHostname())`, summaryTailScript.replace('.js', '-kill.js')); // Only needed if we're changing the script below\\n    await runCommand(ns, `ns.disableLog('sleep'); ns.tail(); let lastRead = '';\\r\\n        while (true) { \\r\\n            let read = ns.read('${summaryFile}');\\r\\n            if (lastRead != read) ns.print(lastRead = read);\\r\\n            await ns.sleep(1000); \\r\\n        }`, summaryTailScript);\\n};\\n// Ram-dodging helpers that spawn temporary scripts to buy/sell rather than pay 2.5GB ram per variant\\nlet buyStockWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'buyStock'); // ns.stock.buyStock(sym, numShares);\\nlet buyShortWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'buyShort'); // ns.stock.buyShort(sym, numShares);\\nlet sellStockWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'sellStock'); // ns.stock.sellStock(sym, numShares);\\nlet sellShortWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'sellShort'); // ns.stock.sellShort(sym, numShares);\\nlet transactStock = async (ns, sym, numShares, action) => await getNsDataThroughFile(ns, `ns.stock.${action}(ns.args[0], ns.args[1])`, null, [sym, numShares]);\\n/** @param {NS} ns\\n * Automatically buys either a short or long position depending on the outlook of the stock. */\\nasync function doBuy(ns, stk, sharesToBuy) {\\n    // We include -2*commission in the \\\"holdings value\\\" of our stock, but if we make repeated purchases of the same stock, we have to track\\n    // the additional commission somewhere. So only subtract it from our running profit if this isn't our first purchase of this symbol\\n    let price = 0; //price wasn't defined yet.\\n    if (stk.owned())\\n        totalProfit -= commission;\\n    let long = stk.bullish();\\n    let expectedPrice = long ? stk.ask_price : stk.bid_price; // Depends on whether we will be buying a long or short position\\n    log(ns, `INFO: ${long ? 'Buying  ' : 'Shorting'} ${formatNumberShort(sharesToBuy, 3, 3).padStart(5)} (` +\\n        `${stk.maxShares == sharesToBuy + stk.ownedShares() ? '@max shares' : `${formatNumberShort(sharesToBuy + stk.ownedShares(), 3, 3).padStart(5)}/${formatNumberShort(stk.maxShares, 3, 3).padStart(5)}`}) ` +\\n        `${stk.sym.padEnd(5)} @ ${formatMoney(expectedPrice).padStart(9)} for ${formatMoney(sharesToBuy * expectedPrice).padStart(9)} (Spread:${(stk.spread_pct * 100).toFixed(2)}% ` +\\n        `ER:${formatBP(stk.expectedReturn()).padStart(8)}) Ticks to Profit: ${stk.timeToCoverTheSpread().toFixed(2)}`, noisy, 'info');\\n    try {\\n        price = mock ? expectedPrice : Number(await transactStock(ns, stk.sym, sharesToBuy, long ? 'buyStock' : 'buyShort'));\\n    }\\n    catch (err) {\\n        if (long)\\n            throw err;\\n        disableShorts = true;\\n        log(ns, `WARN: Failed to short ${stk.sym} (Shorts not available?). Disabling shorts...`, true, 'warning');\\n        return 0;\\n    }\\n    // The rest of this work is for troubleshooting / mock-mode purposes\\n    if (price == 0) {\\n        const playerMoney = (await getPlayerInfo(ns)).money;\\n        if (playerMoney < sharesToBuy * expectedPrice)\\n            log(ns, `WARN: Failed to ${long ? 'buy' : 'short'} ${stk.sym} because money just recently dropped to ${formatMoney(playerMoney)} and we can no longer afford it.`, noisy);\\n        else\\n            log(ns, `ERROR: Failed to ${long ? 'buy' : 'short'} ${stk.sym} @ ${formatMoney(expectedPrice)} (0 was returned) despite having ${formatMoney(playerMoney)}.`, true, 'error');\\n        return 0;\\n    }\\n    else if (price != expectedPrice) {\\n        log(ns, `WARNING: ${long ? 'Bought' : 'Shorted'} ${stk.sym} @ ${formatMoney(price)} but expected ${formatMoney(expectedPrice)} (spread: ${formatMoney(stk.spread)})`, false, 'warning');\\n        price = expectedPrice; // Known Bitburner bug for now, short returns \\\"price\\\" instead of \\\"bid_price\\\". Correct this so running profit calcs are correct.\\n    }\\n    if (mock && long)\\n        stk.boughtPrice = (stk.boughtPrice * stk.sharesLong + price * sharesToBuy) / (stk.sharesLong + sharesToBuy);\\n    if (mock && !long)\\n        stk.boughtPriceShort = (stk.boughtPriceShort * stk.sharesShort + price * sharesToBuy) / (stk.sharesShort + sharesToBuy);\\n    if (long)\\n        stk.sharesLong += sharesToBuy;\\n    else\\n        stk.sharesShort += sharesToBuy; // Maintained for mock mode, otherwise, redundant (overwritten at next refresh)\\n    return sharesToBuy * price + commission; // Return the amount spent on the transaction so it can be subtracted from our cash on hand\\n}\\n/** @param {NS} ns\\n * Sell our current position in this stock. */\\nasync function doSellAll(ns, stk) {\\n    let long = stk.sharesLong > 0;\\n    if (long && stk.sharesShort > 0) // Detect any issues here - we should always sell one before buying the other.\\n        log(ns, `ERROR: Somehow ended up both ${stk.sharesShort} short and ${stk.sharesLong} long on ${stk.sym}`, true, 'error');\\n    let expectedPrice = long ? stk.bid_price : stk.ask_price; // Depends on whether we will be selling a long or short position\\n    let sharesSold = long ? stk.sharesLong : stk.sharesShort;\\n    let price = mock ? expectedPrice : await transactStock(ns, stk.sym, sharesSold, long ? 'sellStock' : 'sellShort');\\n    const profit = (long ? stk.sharesLong * (price - stk.boughtPrice) : stk.sharesShort * (stk.boughtPriceShort - price)) - 2 * commission;\\n    log(ns, `${profit > 0 ? 'SUCCESS' : 'WARNING'}: Sold all ${formatNumberShort(sharesSold, 3, 3).padStart(5)} ${stk.sym.padEnd(5)} ${long ? ' long' : 'short'} positions ` +\\n        `@ ${formatMoney(price).padStart(9)} for a ` + (profit > 0 ? `PROFIT of ${formatMoney(profit).padStart(9)}` : ` LOSS  of ${formatMoney(-profit).padStart(9)}`) + ` after ${stk.ticksHeld} ticks`, noisy, noisy ? (profit > 0 ? 'success' : 'error') : undefined);\\n    if (price == 0) {\\n        log(ns, `ERROR: Failed to sell ${sharesSold} ${stk.sym} ${long ? 'shares' : 'shorts'} @ ${formatMoney(expectedPrice)} - 0 was returned.`, true, 'error');\\n        return 0;\\n    }\\n    else if (price != expectedPrice) {\\n        log(ns, `WARNING: Sold ${stk.sym} ${long ? 'shares' : 'shorts'} @ ${formatMoney(price)} but expected ${formatMoney(expectedPrice)} (spread: ${formatMoney(stk.spread)})`, false, 'warning');\\n        price = expectedPrice; // Known Bitburner bug for now, sellSort returns \\\"price\\\" instead of \\\"ask_price\\\". Correct this so running profit calcs are correct.\\n    }\\n    if (long)\\n        stk.sharesLong -= sharesSold;\\n    else\\n        stk.sharesShort -= sharesSold; // Maintained for mock mode, otherwise, redundant (overwritten at next refresh)\\n    totalProfit += profit;\\n    return price * sharesSold - commission; // Return the amount of money recieved from the transaction\\n}\\nlet formatBP = fraction => formatNumberShort(fraction * 100 * 100, 3, 2) + \\\" BP\\\";\\n/** Log / tprint / toast helper.\\n * @param {NS} ns */\\nlet log = (ns, message, tprint = false, toastStyle = \\\"\\\") => {\\n    if (message == lastLog)\\n        return;\\n    ns.print(message);\\n    if (tprint)\\n        ns.tprint(message);\\n    if (toastStyle)\\n        ns.toast(message, toastStyle);\\n    return lastLog = message;\\n};\\nfunction doStatusUpdate(ns, stocks, myStocks, hudElement = null) {\\n    let maxReturnBP = 10000 * Math.max(...myStocks.map(s => s.absReturn())); // The largest return (in basis points) in our portfolio\\n    let minReturnBP = 10000 * Math.min(...myStocks.map(s => s.absReturn())); // The smallest return (in basis points) in our portfolio\\n    let est_holdings_cost = myStocks.reduce((sum, stk) => sum + (stk.owned() ? commission : 0) +\\n        stk.sharesLong * stk.boughtPrice + stk.sharesShort * stk.boughtPriceShort, 0);\\n    let liquidation_value = myStocks.reduce((sum, stk) => sum - (stk.owned() ? commission : 0) + stk.positionValue(), 0);\\n    let status = `Long ${myStocks.filter(s => s.sharesLong > 0).length}, Short ${myStocks.filter(s => s.sharesShort > 0).length} of ${stocks.length} stocks ` +\\n        (myStocks.length == 0 ? '' : `(ER ${minReturnBP.toFixed(1)}-${maxReturnBP.toFixed(1)} BP) `) +\\n        `Profit: ${formatMoney(totalProfit, 3)} Holdings: ${formatMoney(liquidation_value, 3)} (Cost: ${formatMoney(est_holdings_cost, 3)}) ` +\\n        `Net: ${formatMoney(totalProfit + liquidation_value - est_holdings_cost, 3)}`;\\n    log(ns, status);\\n    if (hudElement)\\n        hudElement.innerText = formatMoney(liquidation_value, 6, 3);\\n}\\n/** @param {NS} ns **/\\nasync function liquidate(ns) {\\n    allStockSymbols ??= await getStockSymbols(ns);\\n    if (allStockSymbols == null)\\n        return; // Nothing to liquidate, no API Access\\n    let totalStocks = 0, totalSharesLong = 0, totalSharesShort = 0, totalRevenue = 0;\\n    const dictPositions = mock ? null : await getStockInfoDict(ns, 'getPosition');\\n    for (const sym of allStockSymbols) {\\n        var [sharesLong, , sharesShort, avgShortCost] = dictPositions[sym];\\n        if (sharesLong + sharesShort == 0)\\n            continue;\\n        totalStocks++, totalSharesLong += sharesLong, totalSharesShort += sharesShort;\\n        if (sharesLong > 0)\\n            totalRevenue += (await sellStockWrapper(ns, sym, sharesLong)) * sharesLong - commission;\\n        if (sharesShort > 0)\\n            totalRevenue += (2 * avgShortCost - (await sellShortWrapper(ns, sym, sharesShort))) * sharesShort - commission;\\n    }\\n    log(ns, `Sold ${totalSharesLong.toLocaleString('en')} long shares and ${totalSharesShort.toLocaleString('en')} short shares ` +\\n        `in ${totalStocks} stocks for ${formatMoney(totalRevenue, 3)}`, true, 'success');\\n}\\n/** @param {NS} ns **/\\n/** @param {Player} playerStats **/\\nasync function tryGet4SApi(ns, playerStats, bitnodeMults, budget) {\\n    if (await checkAccess(ns, 'has4SDataTIXAPI'))\\n        return false; // Only return true if we just bought it\\n    const cost4sData = 1E9 * bitnodeMults.FourSigmaMarketDataCost;\\n    const cost4sApi = 25E9 * bitnodeMults.FourSigmaMarketDataApiCost;\\n    const has4S = await checkAccess(ns, 'has4SData');\\n    const totalCost = (has4S ? 0 : cost4sData) + cost4sApi;\\n    // Liquidate shares if it would allow us to afford 4S API data\\n    if (totalCost > budget) /* Need to reserve some money to invest */\\n        return false;\\n    if (playerStats.money < totalCost)\\n        await liquidate(ns);\\n    if (!has4S) {\\n        if (await tryBuy(ns, 'purchase4SMarketData'))\\n            log(ns, `SUCCESS: Purchased 4SMarketData for ${formatMoney(cost4sData)} ` +\\n                `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        else\\n            log(ns, 'ERROR attempting to purchase 4SMarketData!', false, 'error');\\n    }\\n    if (await tryBuy(ns, 'purchase4SMarketDataTixApi')) {\\n        log(ns, `SUCCESS: Purchased 4SMarketDataTixApi for ${formatMoney(cost4sApi)} ` +\\n            `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        return true;\\n    }\\n    else {\\n        log(ns, 'ERROR attempting to purchase 4SMarketDataTixApi!', false, 'error');\\n        if (!(5 in dictSourceFiles)) { // If we do not have access to bitnode multipliers, assume the cost is double and try again later\\n            log(ns, 'INFO: Bitnode mults are not available (SF5) - assuming everything is twice as expensive in the current bitnode.');\\n            bitnodeMults.FourSigmaMarketDataCost *= 2;\\n            bitnodeMults.FourSigmaMarketDataApiCost *= 2;\\n        }\\n    }\\n    return false;\\n}\\n/** @param {NS} ns\\n * @param {\\\"hasWSEAccount\\\"|\\\"hasTIXAPIAccess\\\"|\\\"has4SData\\\"|\\\"has4SDataTIXAPI\\\"} stockFn\\n * Helper to check for one of the stock access functions */\\nasync function checkAccess(ns, stockFn) {\\n    return await getNsDataThroughFile(ns, `ns.stock.${stockFn}()`);\\n}\\n/** @param {NS} ns\\n * @param {\\\"purchaseWseAccount\\\"|\\\"purchaseTixApi\\\"|\\\"purchase4SMarketData\\\"|\\\"purchase4SMarketDataTixApi\\\"} stockFn\\n * Helper to try and buy a stock access. Yes, the code is the same as above, but I wanted to be explicit. */\\nasync function tryBuy(ns, stockFn) {\\n    return await getNsDataThroughFile(ns, `ns.stock.${stockFn}()`);\\n}\\n/** @param {NS} ns\\n * @param {number} budget - The amount we are willing to spend on WSE and API access\\n * Tries to purchase access to the stock market **/\\nasync function tryGetStockMarketAccess(ns, budget) {\\n    if (await checkAccess(ns, 'hasTIXAPIAccess'))\\n        return true; // Already have access\\n    const costWseAccount = 200E6;\\n    const costTixApi = 5E9;\\n    const hasWSE = await checkAccess(ns, 'hasWSEAccount');\\n    const totalCost = (hasWSE ? 0 : costWseAccount) + costTixApi;\\n    if (totalCost > budget)\\n        return false;\\n    if (!hasWSE) {\\n        if (await tryBuy(ns, 'purchaseWseAccount'))\\n            log(ns, `SUCCESS: Purchased a WSE (stockmarket) account for ${formatMoney(costWseAccount)} ` +\\n                `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        else\\n            log(ns, 'ERROR attempting to purchase WSE account!', false, 'error');\\n    }\\n    if (await tryBuy(ns, 'purchaseTixApi')) {\\n        log(ns, `SUCCESS: Purchased Tix (stockmarket) Api access for ${formatMoney(costTixApi)} ` +\\n            `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        return true;\\n    }\\n    else\\n        log(ns, 'ERROR attempting to purchase Tix Api!', false, 'error');\\n    return false;\\n}\\nfunction initializeHud() {\\n    const d = eval(\\\"document\\\");\\n    let htmlDisplay = d.getElementById(\\\"stock-display-1\\\");\\n    if (htmlDisplay !== null)\\n        return htmlDisplay;\\n    // Get the custom display elements in HUD.\\n    let customElements = d.getElementById(\\\"overview-extra-hook-0\\\").parentElement.parentElement;\\n    // Make a clone of the hook for extra hud elements, and move it up under money\\n    let stockValueTracker = customElements.cloneNode(true);\\n    // Remove any nested elements created by stats.js\\n    stockValueTracker.querySelectorAll(\\\"p > p\\\").forEach(el => el.parentElement.removeChild(el));\\n    // Change ids since duplicate id's are invalid\\n    stockValueTracker.querySelectorAll(\\\"p\\\").forEach((el, i) => el.id = \\\"stock-display-\\\" + i);\\n    // Get out output element\\n    htmlDisplay = stockValueTracker.querySelector(\\\"#stock-display-1\\\");\\n    // Display label and default value\\n    stockValueTracker.querySelectorAll(\\\"p\\\")[0].innerText = \\\"Stock\\\";\\n    htmlDisplay.innerText = \\\"$0.000 \\\";\\n    // Insert our element right after Money\\n    customElements.parentElement.insertBefore(stockValueTracker, customElements.parentElement.childNodes[2]);\\n    return htmlDisplay;\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"trade/trade.js\",\"server\":\"home\"}}],[\"util/copyfilesto.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const targetServer = ns.args[0];\\n    if (!targetServer) {\\n        ns.tprint(\\\"Error: No target server specified. Usage: run copyToServer.js [targetServer]\\\");\\n        return;\\n    }\\n    if (!ns.hasRootAccess(targetServer)) {\\n        ns.tprint(`Error: You do not have root access to ${targetServer}.`);\\n        return;\\n    }\\n    const files = ns.ls('home').filter(file => file.endsWith('.js') || file.endsWith('.txt') || file.endsWith('.lit'));\\n    for (const file of files) {\\n        await ns.scp(file, targetServer);\\n    }\\n    ns.tprint(`Supported files copied to ${targetServer}.`);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29weWZpbGVzdG8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9jb3B5ZmlsZXN0by5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLElBQUksQ0FBQyxZQUFZLEVBQUU7UUFDZixFQUFFLENBQUMsTUFBTSxDQUFDLDhFQUE4RSxDQUFDLENBQUM7UUFDMUYsT0FBTztLQUNWO0lBRUQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDakMsRUFBRSxDQUFDLE1BQU0sQ0FBQyx5Q0FBeUMsWUFBWSxHQUFHLENBQUMsQ0FBQztRQUNwRSxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEtBQUssR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDbkgsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLEVBQUU7UUFDdEIsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxZQUFZLENBQUMsQ0FBQztLQUNwQztJQUVELEVBQUUsQ0FBQyxNQUFNLENBQUMsNkJBQTZCLFlBQVksR0FBRyxDQUFDLENBQUM7QUFDNUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldFNlcnZlciA9IG5zLmFyZ3NbMF07XHJcbiAgICBpZiAoIXRhcmdldFNlcnZlcikge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVycm9yOiBObyB0YXJnZXQgc2VydmVyIHNwZWNpZmllZC4gVXNhZ2U6IHJ1biBjb3B5VG9TZXJ2ZXIuanMgW3RhcmdldFNlcnZlcl1cIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghbnMuaGFzUm9vdEFjY2Vzcyh0YXJnZXRTZXJ2ZXIpKSB7XHJcbiAgICAgICAgbnMudHByaW50KGBFcnJvcjogWW91IGRvIG5vdCBoYXZlIHJvb3QgYWNjZXNzIHRvICR7dGFyZ2V0U2VydmVyfS5gKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZmlsZXMgPSBucy5scygnaG9tZScpLmZpbHRlcihmaWxlID0+IGZpbGUuZW5kc1dpdGgoJy5qcycpIHx8IGZpbGUuZW5kc1dpdGgoJy50eHQnKSB8fCBmaWxlLmVuZHNXaXRoKCcubGl0JykpO1xyXG4gICAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7XHJcbiAgICAgICAgYXdhaXQgbnMuc2NwKGZpbGUsIHRhcmdldFNlcnZlcik7XHJcbiAgICB9XHJcblxyXG4gICAgbnMudHByaW50KGBTdXBwb3J0ZWQgZmlsZXMgY29waWVkIHRvICR7dGFyZ2V0U2VydmVyfS5gKTtcclxufVxyXG4iXX0=\",\"filename\":\"util/copyfilesto.js\",\"server\":\"home\"}}],[\"util/hacknet.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    var totalSpent = 0; // Tracks how much money we have spent on nodes\\n    ns.tprint(\\\"Hacknet Node Manager Started\\\");\\n    // Bring all available hacknet nodes up to base level\\n    for (let i = 0; i < ns.hacknet.numNodes(); i++) {\\n        var node = ns.hacknet.nodes[i];\\n        var cost = node.getLevelUpgradeCost(1);\\n        totalSpent += cost; // Add the upgrade cost to the money spent\\n        node.upgradeLevel(1);\\n    }\\n    // Mandatory wait period to allow earnings to accumulate\\n    await ns.sleep(60000);\\n    while (true) { // Loop keeps the script running forever\\n        var totalEarned = 0;\\n        // Sum earnings from all nodes\\n        for (let i = 0; i < ns.hacknet.numNodes(); i++) {\\n            var node = ns.hacknet.nodes[i];\\n            totalEarned += node.totalMoneyEarned; // Add the earnings from each node to total\\n        }\\n        // Check if we have enough earnings to buy a new node\\n        if (totalEarned >= totalSpent * 3) {\\n            var newNode = ns.hacknet.purchaseNode();\\n            if (newNode !== -1) {\\n                var cost = ns.hacknet.nodes[newNode].getLevelUpgradeCost(1);\\n                totalSpent += cost; // Add cost to the money spent\\n                ns.hacknet.node[newNode].upgradeLevel(1);\\n            }\\n        }\\n        await ns.sleep(30000); // Check for upgrades every 30 seconds\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFja25ldC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2hhY2tuZXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsSUFBSSxVQUFVLEdBQUcsQ0FBQyxDQUFDLENBQUUsK0NBQStDO0lBQ3BFLEVBQUUsQ0FBQyxNQUFNLENBQUMsOEJBQThCLENBQUMsQ0FBQztJQUUxQyxxREFBcUQ7SUFDckQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDNUMsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0IsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZDLFVBQVUsSUFBSSxJQUFJLENBQUMsQ0FBRSwwQ0FBMEM7UUFDL0QsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN4QjtJQUVELHdEQUF3RDtJQUN4RCxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFdEIsT0FBTyxJQUFJLEVBQUUsRUFBRSx3Q0FBd0M7UUFDbkQsSUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBRXBCLDhCQUE4QjtRQUM5QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM1QyxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQixXQUFXLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsMkNBQTJDO1NBQ3BGO1FBRUQscURBQXFEO1FBQ3JELElBQUksV0FBVyxJQUFJLFVBQVUsR0FBRyxDQUFDLEVBQUU7WUFDL0IsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUN4QyxJQUFHLE9BQU8sS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDZixJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDNUQsVUFBVSxJQUFJLElBQUksQ0FBQyxDQUFFLDhCQUE4QjtnQkFDbkQsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQzVDO1NBQ0o7UUFFRCxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxzQ0FBc0M7S0FDaEU7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgdmFyIHRvdGFsU3BlbnQgPSAwOyAgLy8gVHJhY2tzIGhvdyBtdWNoIG1vbmV5IHdlIGhhdmUgc3BlbnQgb24gbm9kZXNcclxuICAgIG5zLnRwcmludChcIkhhY2tuZXQgTm9kZSBNYW5hZ2VyIFN0YXJ0ZWRcIik7XHJcblxyXG4gICAgLy8gQnJpbmcgYWxsIGF2YWlsYWJsZSBoYWNrbmV0IG5vZGVzIHVwIHRvIGJhc2UgbGV2ZWxcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnMuaGFja25ldC5udW1Ob2RlcygpOyBpKyspIHtcclxuICAgICAgICB2YXIgbm9kZSA9IG5zLmhhY2tuZXQubm9kZXNbaV07XHJcbiAgICAgICAgdmFyIGNvc3QgPSBub2RlLmdldExldmVsVXBncmFkZUNvc3QoMSk7XHJcbiAgICAgICAgdG90YWxTcGVudCArPSBjb3N0OyAgLy8gQWRkIHRoZSB1cGdyYWRlIGNvc3QgdG8gdGhlIG1vbmV5IHNwZW50XHJcbiAgICAgICAgbm9kZS51cGdyYWRlTGV2ZWwoMSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gTWFuZGF0b3J5IHdhaXQgcGVyaW9kIHRvIGFsbG93IGVhcm5pbmdzIHRvIGFjY3VtdWxhdGVcclxuICAgIGF3YWl0IG5zLnNsZWVwKDYwMDAwKTtcclxuXHJcbiAgICB3aGlsZSAodHJ1ZSkgeyAvLyBMb29wIGtlZXBzIHRoZSBzY3JpcHQgcnVubmluZyBmb3JldmVyXHJcbiAgICAgICAgdmFyIHRvdGFsRWFybmVkID0gMDtcclxuXHJcbiAgICAgICAgLy8gU3VtIGVhcm5pbmdzIGZyb20gYWxsIG5vZGVzXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBucy5oYWNrbmV0Lm51bU5vZGVzKCk7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgbm9kZSA9IG5zLmhhY2tuZXQubm9kZXNbaV07XHJcbiAgICAgICAgICAgIHRvdGFsRWFybmVkICs9IG5vZGUudG90YWxNb25leUVhcm5lZDsgLy8gQWRkIHRoZSBlYXJuaW5ncyBmcm9tIGVhY2ggbm9kZSB0byB0b3RhbFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQ2hlY2sgaWYgd2UgaGF2ZSBlbm91Z2ggZWFybmluZ3MgdG8gYnV5IGEgbmV3IG5vZGVcclxuICAgICAgICBpZiAodG90YWxFYXJuZWQgPj0gdG90YWxTcGVudCAqIDMpIHtcclxuICAgICAgICAgICAgdmFyIG5ld05vZGUgPSBucy5oYWNrbmV0LnB1cmNoYXNlTm9kZSgpO1xyXG4gICAgICAgICAgICBpZihuZXdOb2RlICE9PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvc3QgPSBucy5oYWNrbmV0Lm5vZGVzW25ld05vZGVdLmdldExldmVsVXBncmFkZUNvc3QoMSk7XHJcbiAgICAgICAgICAgICAgICB0b3RhbFNwZW50ICs9IGNvc3Q7ICAvLyBBZGQgY29zdCB0byB0aGUgbW9uZXkgc3BlbnRcclxuICAgICAgICAgICAgICAgIG5zLmhhY2tuZXQubm9kZVtuZXdOb2RlXS51cGdyYWRlTGV2ZWwoMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKDMwMDAwKTsgLy8gQ2hlY2sgZm9yIHVwZ3JhZGVzIGV2ZXJ5IDMwIHNlY29uZHNcclxuICAgIH1cclxufSJdfQ==\",\"filename\":\"util/hacknet.js\",\"server\":\"home\"}}],[\"util/killall.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const serverName = 'home';\\n    const scriptName = 'wormy/advanced/jackx.js';\\n    const runningScripts = ns.ps(serverName);\\n    for (const script of runningScripts) {\\n        if (script.filename === scriptName) {\\n            // If script.args is an array, join them into a string\\n            const scriptArgs = Array.isArray(script.args) ? script.args.join(\\\" \\\") : \\\"\\\";\\n            ns.kill(scriptName, serverName, scriptArgs);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2lsbGFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2tpbGxhbGwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDO0lBQzFCLE1BQU0sVUFBVSxHQUFHLHlCQUF5QixDQUFDO0lBRTdDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDekMsS0FBSyxNQUFNLE1BQU0sSUFBSSxjQUFjLEVBQUU7UUFDakMsSUFBSSxNQUFNLENBQUMsUUFBUSxLQUFLLFVBQVUsRUFBRTtZQUNoQyxzREFBc0Q7WUFDdEQsTUFBTSxVQUFVLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFFM0UsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsVUFBVSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQy9DO0tBQ0o7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgY29uc3Qgc2VydmVyTmFtZSA9ICdob21lJztcclxuICAgIGNvbnN0IHNjcmlwdE5hbWUgPSAnd29ybXkvYWR2YW5jZWQvamFja3guanMnO1xyXG5cclxuICAgIGNvbnN0IHJ1bm5pbmdTY3JpcHRzID0gbnMucHMoc2VydmVyTmFtZSk7XHJcbiAgICBmb3IgKGNvbnN0IHNjcmlwdCBvZiBydW5uaW5nU2NyaXB0cykge1xyXG4gICAgICAgIGlmIChzY3JpcHQuZmlsZW5hbWUgPT09IHNjcmlwdE5hbWUpIHtcclxuICAgICAgICAgICAgLy8gSWYgc2NyaXB0LmFyZ3MgaXMgYW4gYXJyYXksIGpvaW4gdGhlbSBpbnRvIGEgc3RyaW5nXHJcbiAgICAgICAgICAgIGNvbnN0IHNjcmlwdEFyZ3MgPSBBcnJheS5pc0FycmF5KHNjcmlwdC5hcmdzKSA/IHNjcmlwdC5hcmdzLmpvaW4oXCIgXCIpIDogXCJcIjtcclxuXHJcbiAgICAgICAgICAgIG5zLmtpbGwoc2NyaXB0TmFtZSwgc2VydmVyTmFtZSwgc2NyaXB0QXJncyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19\",\"filename\":\"util/killall.js\",\"server\":\"home\"}}],[\"util/ispy.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    var refreshInterval = 10;\\n    const topServers = getTopServers(ns, 5);\\n    ns.print(\\\"Top servers: \\\" + JSON.stringify(topServers));\\n    if (topServers.length === 0) {\\n        ns.toast(\\\"No top servers found\\\", \\\"error\\\");\\n        return;\\n    }\\n    topServers.forEach(server => {\\n        ns.exec('ispy.js', 'home', 1, server);\\n        ns.print(`Launched monitoring on ${server}`);\\n    });\\n    while (true) {\\n        ns.clearLog();\\n        ns.print(\\\"===== Monitoring Top Servers =====\\\");\\n        for (const server of topServers) {\\n            // Fetch and display server stats\\n            const moneyAvailable = ns.getServerMoneyAvailable(server);\\n            const maxMoney = ns.getServerMaxMoney(server);\\n            const securityLevel = ns.getServerSecurityLevel(server);\\n            const minSecurityLevel = ns.getServerMinSecurityLevel(server);\\n            const hackingLevel = ns.getServerRequiredHackingLevel(server);\\n            const growthRate = ns.getServerGrowth(server);\\n            ns.print(`Money Available: $${ns.nFormat(moneyAvailable, '0.000a')}`);\\n            ns.print(`Maximum Money: $${ns.nFormat(maxMoney, '0.000a')}`);\\n            ns.print(`Current Security Level: ${securityLevel.toFixed(2)}`);\\n            ns.print(`Minimum Security Level: ${minSecurityLevel.toFixed(2)}`);\\n            ns.print(`Required Hacking Level: ${hackingLevel}`);\\n            ns.print(`Server Growth Rate: ${growthRate}`);\\n        }\\n        for (let i = refreshInterval; i > 0; i--) {\\n            ns.print(`Refreshing all servers in ${i} seconds...`);\\n            await ns.sleep(1000);\\n        }\\n    }\\n}\\nfunction getAllServers(ns, server = 'home', seenServers = new Set()) {\\n    if (seenServers.has(server))\\n        return [];\\n    seenServers.add(server);\\n    const connectedServers = ns.scan(server);\\n    let servers = [server];\\n    for (const connectedServer of connectedServers) {\\n        servers = servers.concat(getAllServers(ns, connectedServer, seenServers));\\n    }\\n    return servers;\\n}\\nfunction getTopServers(ns, number) {\\n    let allServers = getAllServers(ns);\\n    let hackableServers = allServers.filter(server => ns.hasRootAccess(server) &&\\n        ns.getServerMaxMoney(server) > 0 &&\\n        ns.getServerRequiredHackingLevel(server) <= ns.getHackingLevel());\\n    hackableServers.sort((a, b) => ns.getServerMaxMoney(b) - ns.getServerMaxMoney(a));\\n    return hackableServers.slice(0, number);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNweS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2lzcHkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsSUFBSSxlQUFlLEdBQUcsRUFBRSxDQUFDO0lBQ3pCLE1BQU0sVUFBVSxHQUFHLGFBQWEsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDeEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBRXZELElBQUksVUFBVSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDekIsRUFBRSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMxQyxPQUFPO0tBQ1Y7SUFFRCxVQUFVLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ3hCLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDdEMsRUFBRSxDQUFDLEtBQUssQ0FBQywwQkFBMEIsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUNqRCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sSUFBSSxFQUFFO1FBQ1QsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFBO1FBQ2IsRUFBRSxDQUFDLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1FBQy9DLEtBQUssTUFBTSxNQUFNLElBQUksVUFBVSxFQUFFO1lBRTdCLGlDQUFpQztZQUNqQyxNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUMsdUJBQXVCLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDMUQsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzlDLE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4RCxNQUFNLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM5RCxNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsNkJBQTZCLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDOUQsTUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUU5QyxFQUFFLENBQUMsS0FBSyxDQUFDLHFCQUFxQixFQUFFLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDdEUsRUFBRSxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzlELEVBQUUsQ0FBQyxLQUFLLENBQUMsMkJBQTJCLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ2hFLEVBQUUsQ0FBQyxLQUFLLENBQUMsMkJBQTJCLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDbkUsRUFBRSxDQUFDLEtBQUssQ0FBQywyQkFBMkIsWUFBWSxFQUFFLENBQUMsQ0FBQztZQUNwRCxFQUFFLENBQUMsS0FBSyxDQUFDLHVCQUF1QixVQUFVLEVBQUUsQ0FBQyxDQUFDO1NBQ2pEO1FBRUQsS0FBSyxJQUFJLENBQUMsR0FBRyxlQUFlLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QyxFQUFFLENBQUMsS0FBSyxDQUFDLDZCQUE2QixDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3RELE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN4QjtLQUNKO0FBQ0wsQ0FBQztBQUdELFNBQVMsYUFBYSxDQUFDLEVBQUUsRUFBRSxNQUFNLEdBQUcsTUFBTSxFQUFFLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBRTtJQUMvRCxJQUFJLFdBQVcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQUUsT0FBTyxFQUFFLENBQUM7SUFDdkMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV4QixNQUFNLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDekMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV2QixLQUFLLE1BQU0sZUFBZSxJQUFJLGdCQUFnQixFQUFFO1FBQzVDLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFFLEVBQUUsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUM7S0FDN0U7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNuQixDQUFDO0FBRUQsU0FBUyxhQUFhLENBQUMsRUFBRSxFQUFFLE1BQU07SUFDN0IsSUFBSSxVQUFVLEdBQUcsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ25DLElBQUksZUFBZSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FDN0MsRUFBRSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUM7UUFDeEIsRUFBRSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDaEMsRUFBRSxDQUFDLDZCQUE2QixDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxlQUFlLEVBQUUsQ0FDbkUsQ0FBQztJQUVGLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEYsT0FBTyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM1QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgdmFyIHJlZnJlc2hJbnRlcnZhbCA9IDEwO1xyXG4gICAgY29uc3QgdG9wU2VydmVycyA9IGdldFRvcFNlcnZlcnMobnMsIDUpO1xyXG4gICAgbnMucHJpbnQoXCJUb3Agc2VydmVyczogXCIgKyBKU09OLnN0cmluZ2lmeSh0b3BTZXJ2ZXJzKSk7XHJcblxyXG4gICAgaWYgKHRvcFNlcnZlcnMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgbnMudG9hc3QoXCJObyB0b3Agc2VydmVycyBmb3VuZFwiLCBcImVycm9yXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0b3BTZXJ2ZXJzLmZvckVhY2goc2VydmVyID0+IHtcclxuICAgICAgICBucy5leGVjKCdpc3B5LmpzJywgJ2hvbWUnLCAxLCBzZXJ2ZXIpO1xyXG4gICAgICAgIG5zLnByaW50KGBMYXVuY2hlZCBtb25pdG9yaW5nIG9uICR7c2VydmVyfWApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgd2hpbGUgKHRydWUpIHtcclxuICAgICAgICBucy5jbGVhckxvZygpXHJcbiAgICAgICAgbnMucHJpbnQoXCI9PT09PSBNb25pdG9yaW5nIFRvcCBTZXJ2ZXJzID09PT09XCIpO1xyXG4gICAgICAgIGZvciAoY29uc3Qgc2VydmVyIG9mIHRvcFNlcnZlcnMpIHtcclxuXHJcbiAgICAgICAgICAgIC8vIEZldGNoIGFuZCBkaXNwbGF5IHNlcnZlciBzdGF0c1xyXG4gICAgICAgICAgICBjb25zdCBtb25leUF2YWlsYWJsZSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHNlcnZlcik7XHJcbiAgICAgICAgICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKTtcclxuICAgICAgICAgICAgY29uc3Qgc2VjdXJpdHlMZXZlbCA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcclxuICAgICAgICAgICAgY29uc3QgbWluU2VjdXJpdHlMZXZlbCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcclxuICAgICAgICAgICAgY29uc3QgaGFja2luZ0xldmVsID0gbnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc2VydmVyKTtcclxuICAgICAgICAgICAgY29uc3QgZ3Jvd3RoUmF0ZSA9IG5zLmdldFNlcnZlckdyb3d0aChzZXJ2ZXIpO1xyXG5cclxuICAgICAgICAgICAgbnMucHJpbnQoYE1vbmV5IEF2YWlsYWJsZTogJCR7bnMubkZvcm1hdChtb25leUF2YWlsYWJsZSwgJzAuMDAwYScpfWApO1xyXG4gICAgICAgICAgICBucy5wcmludChgTWF4aW11bSBNb25leTogJCR7bnMubkZvcm1hdChtYXhNb25leSwgJzAuMDAwYScpfWApO1xyXG4gICAgICAgICAgICBucy5wcmludChgQ3VycmVudCBTZWN1cml0eSBMZXZlbDogJHtzZWN1cml0eUxldmVsLnRvRml4ZWQoMil9YCk7XHJcbiAgICAgICAgICAgIG5zLnByaW50KGBNaW5pbXVtIFNlY3VyaXR5IExldmVsOiAke21pblNlY3VyaXR5TGV2ZWwudG9GaXhlZCgyKX1gKTtcclxuICAgICAgICAgICAgbnMucHJpbnQoYFJlcXVpcmVkIEhhY2tpbmcgTGV2ZWw6ICR7aGFja2luZ0xldmVsfWApO1xyXG4gICAgICAgICAgICBucy5wcmludChgU2VydmVyIEdyb3d0aCBSYXRlOiAke2dyb3d0aFJhdGV9YCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gcmVmcmVzaEludGVydmFsOyBpID4gMDsgaS0tKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KGBSZWZyZXNoaW5nIGFsbCBzZXJ2ZXJzIGluICR7aX0gc2Vjb25kcy4uLmApO1xyXG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcCgxMDAwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBnZXRBbGxTZXJ2ZXJzKG5zLCBzZXJ2ZXIgPSAnaG9tZScsIHNlZW5TZXJ2ZXJzID0gbmV3IFNldCgpKSB7XHJcbiAgICBpZiAoc2VlblNlcnZlcnMuaGFzKHNlcnZlcikpIHJldHVybiBbXTtcclxuICAgIHNlZW5TZXJ2ZXJzLmFkZChzZXJ2ZXIpO1xyXG5cclxuICAgIGNvbnN0IGNvbm5lY3RlZFNlcnZlcnMgPSBucy5zY2FuKHNlcnZlcik7XHJcbiAgICBsZXQgc2VydmVycyA9IFtzZXJ2ZXJdO1xyXG5cclxuICAgIGZvciAoY29uc3QgY29ubmVjdGVkU2VydmVyIG9mIGNvbm5lY3RlZFNlcnZlcnMpIHtcclxuICAgICAgICBzZXJ2ZXJzID0gc2VydmVycy5jb25jYXQoZ2V0QWxsU2VydmVycyhucywgY29ubmVjdGVkU2VydmVyLCBzZWVuU2VydmVycykpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBzZXJ2ZXJzO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRUb3BTZXJ2ZXJzKG5zLCBudW1iZXIpIHtcclxuICAgIGxldCBhbGxTZXJ2ZXJzID0gZ2V0QWxsU2VydmVycyhucyk7XHJcbiAgICBsZXQgaGFja2FibGVTZXJ2ZXJzID0gYWxsU2VydmVycy5maWx0ZXIoc2VydmVyID0+XHJcbiAgICAgICAgbnMuaGFzUm9vdEFjY2VzcyhzZXJ2ZXIpICYmXHJcbiAgICAgICAgbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKSA+IDAgJiZcclxuICAgICAgICBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzZXJ2ZXIpIDw9IG5zLmdldEhhY2tpbmdMZXZlbCgpXHJcbiAgICApO1xyXG5cclxuICAgIGhhY2thYmxlU2VydmVycy5zb3J0KChhLCBiKSA9PiBucy5nZXRTZXJ2ZXJNYXhNb25leShiKSAtIG5zLmdldFNlcnZlck1heE1vbmV5KGEpKTtcclxuICAgIHJldHVybiBoYWNrYWJsZVNlcnZlcnMuc2xpY2UoMCwgbnVtYmVyKTtcclxufVxyXG4iXX0=\",\"filename\":\"util/ispy.js\",\"server\":\"home\"}}],[\"wormy/simple/jack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Description: Attack deployment manager. This script will automatically launch grow/weaken/hack scripts as needed.\\n// Uses grow.js, weaken.js, and hack.js to attack a target server.\\n// Usage: run jack.js [target]\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const hostServer = ns.getHostname();\\n    const moneyThreshold = 0.90; // 75% of max money\\n    const ramBuffer = 2.5; // Reserve 2.5GB of RAM\\n    if (!target) {\\n        ns.tprint(\\\"Error: No target specified. Exiting.\\\");\\n        return;\\n    }\\n    ns.tprint(`Starting advanced attack script on target: ${target} from server: ${hostServer}`);\\n    // eslint-disable-next-line no-constant-condition\\n    while (true) {\\n        try {\\n            const currentSecurity = ns.getServerSecurityLevel(target);\\n            const securityThreshold = ns.getServerMinSecurityLevel(target) + 10;\\n            const lowSecurityThreshold = ns.getServerSecurityLevel(target) + 1;\\n            const currentMoney = ns.getServerMoneyAvailable(target);\\n            const maxMoney = ns.getServerMaxMoney(target);\\n            // If security is too high, kill all grow and hack processes and deploy weaken scripts\\n            if (currentSecurity >= securityThreshold) {\\n                // Kill grow and hack processes\\n                killGrowAndHack(ns, hostServer, target);\\n                deployWeaken(ns, hostServer, target);\\n                break;\\n                // If security is low enough, and target has maxMoney available, kill all grow and weaken processes and deploy hack scripts\\n            }\\n            else if (currentSecurity <= securityThreshold && currentMoney >= maxMoney) {\\n                killGrowAndHack(ns, hostServer, target);\\n                deployHack(ns, hostServer, target);\\n                break;\\n                // if security is at minimum, and target has maxMoney available, kill all grow and weaken processes and deploy hack scripts\\n            }\\n            else if (currentSecurity <= lowSecurityThreshold && currentMoney >= maxMoney) {\\n                killGrowAndWeaken(ns, hostServer, target);\\n                deployHack(ns, hostServer, target);\\n                break;\\n            }\\n            let action;\\n            if (currentSecurity > securityThreshold) {\\n                action = 'weaken';\\n            }\\n            else if (currentMoney < maxMoney * moneyThreshold) {\\n                action = 'grow';\\n            }\\n            else {\\n                action = 'hack';\\n            }\\n            const scriptRam = ns.getScriptRam(`wormy/simple/scripts/${action}.js`, hostServer);\\n            if (scriptRam <= 0) {\\n                ns.tprint(`Error: Script RAM usage is zero or invalid for ${action}.js on server ${hostServer}`);\\n                return;\\n            }\\n            let availableRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer) - ramBuffer;\\n            while (availableRam >= scriptRam) {\\n                const pid = ns.exec(`wormy/simple/scripts/${action}.js`, hostServer, 1, target);\\n                if (pid === 0) {\\n                    // ns.tprint(`Failed to start ${action}.js on target: ${target} from server ${hostServer}.`);\\n                    break; // Break the loop if unable to start a new process\\n                }\\n                else {\\n                    // ns.tprint(`Launched ${action}.js on target: ${target} from server ${hostServer}. PID: ${pid}`);\\n                    availableRam -= scriptRam;\\n                }\\n                await ns.sleep(100); // Short sleep to prevent script from hogging CPU\\n            }\\n            // ns.tprint(`Not enough RAM on server ${hostServer} to perform ${action} on target: ${target}. Waiting to retry...`);\\n            await ns.sleep(5000);\\n        }\\n        catch (e) {\\n            ns.tprint(`An error occurred on server ${hostServer}: ${e}`);\\n            await ns.sleep(1000);\\n        }\\n    }\\n    function calculateWeakenThreads(ns, target, currentSecurity, securityThreshold) {\\n        const weakenAmount = ns.weakenAnalyze(1); // The amount of security reduced by a single thread\\n        const securityDifference = currentSecurity - securityThreshold;\\n        return Math.ceil(securityDifference / weakenAmount);\\n    }\\n    function deployWeaken(ns, hostServer, target) {\\n        const currentSecurity = ns.getServerSecurityLevel(target);\\n        const securityThreshold = ns.getServerMinSecurityLevel(target) + 10;\\n        const threadsNeeded = calculateWeakenThreads(ns, target, currentSecurity, securityThreshold);\\n        const scriptRam = ns.getScriptRam('wormy/simple/scripts/weaken.js', hostServer);\\n        let availableRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer) - ramBuffer;\\n        let scriptsToLaunch = Math.min(Math.floor(availableRam / scriptRam), threadsNeeded);\\n        for (let i = 0; i < scriptsToLaunch; i++) {\\n            ns.exec('wormy/simple/scripts/weaken.js', hostServer, 1, target);\\n        }\\n    }\\n    function killGrowAndHack(ns, hostServer, target) {\\n        // Get all running scripts on the host server\\n        const runningScripts = ns.ps(hostServer);\\n        for (const process of runningScripts) {\\n            if ((process.filename === 'wormy/simple/scripts/grow.js' || process.filename === 'wormy/simple/scripts/hack.js') && process.args.includes(target)) {\\n                ns.kill(process.pid); // Kill the process if it's grow or hack targeting the specific server\\n            }\\n        }\\n    }\\n    function calculateHackThreads(ns, target, currentMoney) {\\n        const hackPercent = 0.1; //hacks 10% of the available money\\n        const moneyToSteal = currentMoney * hackPercent;\\n        const hackChance = ns.hackAnalyzeChance(target);\\n        const hackAmount = ns.hackAnalyze(target); // The amount of money stolen by a single thread\\n        return Math.ceil((moneyToSteal / hackAmount) / hackChance);\\n    }\\n    function deployHack(ns, hostServer, target) {\\n        const currentMoney = ns.getServerMoneyAvailable(target);\\n        const maxMoney = ns.getServerMaxMoney(target);\\n        const threadsNeeded = calculateHackThreads(ns, target, currentMoney);\\n        const scriptRam = ns.getScriptRam('wormy/simple/scripts/hack.js', hostServer);\\n        let availableRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer) - ramBuffer;\\n        let scriptsToLaunch = Math.min(Math.floor(availableRam / scriptRam), threadsNeeded);\\n        for (let i = 0; i < scriptsToLaunch; i++) {\\n            ns.exec('wormy/simple/scripts/hack.js', hostServer, 1, target);\\n        }\\n    }\\n    function killGrowAndWeaken(ns, hostServer, target) {\\n        // Get all running scripts on the host server\\n        const runningScripts = ns.ps(hostServer);\\n        for (const process of runningScripts) {\\n            if ((process.filename === 'wormy/simple/scripts/grow.js' || process.filename === 'wormy/simple/scripts/weaken.js') && process.args.includes(target)) {\\n                ns.kill(process.pid); // Kill the process if it's grow or weaken targeting the specific server\\n            }\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"wormy/simple/jack.js\",\"server\":\"home\"}}],[\"wormy/advanced/auto-exec.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const wormx = 'wormy/advanced/wormx.js';\\n    const d_jack = 'wormy/advanced/deploy-jack.js';\\n    const trade = '../trade/trade.js';\\n    ns.exec(wormx, 'home', 1);\\n    ns.tprint('AUTOX STARTED');\\n    await ns.sleep(100);\\n    // ns.exec(trade, 'home', 1);\\n    // await ns.sleep(100);\\n    ns.exec(d_jack, 'home', 1);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1leGVjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3dvcm15L2FkdmFuY2VkL2F1dG8tZXhlYy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLEtBQUssR0FBRyx5QkFBeUIsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRywrQkFBK0IsQ0FBQztJQUMvQyxNQUFNLEtBQUssR0FBRyxtQkFBbUIsQ0FBQztJQUVsQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDMUIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUMzQixNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDbkIsNkJBQTZCO0lBQzdCLHVCQUF1QjtJQUN2QixFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFFL0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHdvcm14ID0gJ3dvcm15L2FkdmFuY2VkL3dvcm14LmpzJztcclxuICAgIGNvbnN0IGRfamFjayA9ICd3b3JteS9hZHZhbmNlZC9kZXBsb3ktamFjay5qcyc7XHJcbiAgICBjb25zdCB0cmFkZSA9ICcuLi90cmFkZS90cmFkZS5qcyc7XHJcblxyXG4gICAgbnMuZXhlYyh3b3JteCwgJ2hvbWUnLCAxKTtcclxuICAgIG5zLnRwcmludCgnQVVUT1ggU1RBUlRFRCcpO1xyXG4gICAgYXdhaXQgbnMuc2xlZXAoMTAwKVxyXG4gICAgLy8gbnMuZXhlYyh0cmFkZSwgJ2hvbWUnLCAxKTtcclxuICAgIC8vIGF3YWl0IG5zLnNsZWVwKDEwMCk7XHJcbiAgICBucy5leGVjKGRfamFjaywgJ2hvbWUnLCAxKTtcclxuXHJcbn0iXX0=\",\"filename\":\"wormy/advanced/auto-exec.js\",\"server\":\"home\"}}],[\"wormy/simple/worm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Description: This script should attempt to hack all servers in the game by using the 'worm' strategy.\\n// The worm strategy is to first nuke a server, then deploy a script that will automatically launch grow/weaken/hack scripts as needed.\\n// Copies jack.js and supporting scripts to all servers that are connected to the target server, then executes jack.js on each server.\\n// Usage: run worm.js [target]\\n// ...\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const mainScript = 'wormy/advanced/jackx.js';\\n    const supportingScripts = ['wormy/advanced/scripts/hack.js', 'wormy/advanced/scripts/grow.js', 'wormy/advanced/scripts/weaken.js'];\\n    let targetServers = getAllServers(ns);\\n    // get servers with max money information\\n    let serversWithMoney = targetServers.map(server => ({\\n        server,\\n        money: ns.getServerMaxMoney(server)\\n    })).filter(serverInfo => canHack(ns, serverInfo.server)); // Filter servers that can be hacked\\n    // sort in descending order of max money\\n    serversWithMoney.sort((a, b) => b.money - a.money);\\n    // pick top 5\\n    serversWithMoney = serversWithMoney.slice(0, 5);\\n    const targets = serversWithMoney.map(serverInfo => serverInfo.server); // list of top 5 servers\\n    for (const serverInfo of serversWithMoney) {\\n        let server = serverInfo.server;\\n        if (!ns.hasRootAccess(server) && canNuke(ns, server)) {\\n            tryNuke(ns, server);\\n        }\\n        if (ns.hasRootAccess(server)) {\\n            const success = await deployScripts(ns, server, [mainScript, ...supportingScripts], mainScript, targets); // pass targets to deployScripts\\n            if (!success) {\\n                ns.tprint(`Failed to deploy on server: ${server}`);\\n            }\\n            await ns.sleep(100); // Adding a slight delay to reduce load\\n        }\\n    }\\n}\\nfunction getAllServers(ns, server = 'home', seenServers = new Set()) {\\n    if (seenServers.has(server))\\n        return [];\\n    seenServers.add(server);\\n    const connectedServers = ns.scan(server);\\n    let servers = [server];\\n    for (const connectedServer of connectedServers) {\\n        servers = servers.concat(getAllServers(ns, connectedServer, seenServers));\\n    }\\n    return servers;\\n}\\nfunction canHack(ns, server) {\\n    return ns.getHackingLevel() >= ns.getServerRequiredHackingLevel(server);\\n}\\nfunction canNuke(ns, server) {\\n    let portsRequired = ns.getServerNumPortsRequired(server);\\n    let portsOpened = 0;\\n    if (ns.fileExists('BruteSSH.exe', 'home'))\\n        portsOpened++;\\n    if (ns.fileExists('FTPCrack.exe', 'home'))\\n        portsOpened++;\\n    if (ns.fileExists('relaySMTP.exe', 'home'))\\n        portsOpened++;\\n    if (ns.fileExists('HTTPWorm.exe', 'home'))\\n        portsOpened++;\\n    if (ns.fileExists('SQLInject.exe', 'home'))\\n        portsOpened++;\\n    return portsOpened >= portsRequired;\\n}\\nfunction tryNuke(ns, server) {\\n    if (ns.fileExists('BruteSSH.exe', 'home'))\\n        ns.brutessh(server);\\n    if (ns.fileExists('FTPCrack.exe', 'home'))\\n        ns.ftpcrack(server);\\n    if (ns.fileExists('relaySMTP.exe', 'home'))\\n        ns.relaysmtp(server);\\n    if (ns.fileExists('HTTPWorm.exe', 'home'))\\n        ns.httpworm(server);\\n    if (ns.fileExists('SQLInject.exe', 'home'))\\n        ns.sqlinject(server);\\n    if (canNuke(ns, server)) {\\n        ns.nuke(server);\\n    }\\n}\\nasync function deployScripts(ns, server, scripts, mainScript, targets) {\\n    for (const script of scripts) {\\n        const success = await ns.scp(script, server);\\n        if (!success) {\\n            return false; // If copying fails, return false\\n        }\\n    }\\n    // Ensure targets is an array and pass it to exec\\n    targets = Array.isArray(targets) ? targets : [targets];\\n    const pid = ns.exec(mainScript, server, 1, ...targets); // Spread the targets array\\n    return pid !== 0; // Return true if exec was successful, false otherwise\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy93b3JteS9zaW1wbGUvd29ybS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3R0FBd0c7QUFDeEcsdUlBQXVJO0FBQ3ZJLHNJQUFzSTtBQUN0SSw4QkFBOEI7QUFFOUIsTUFBTTtBQUVOLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBRXpCLE1BQU0sVUFBVSxHQUFHLHlCQUF5QixDQUFDO0lBQzdDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxnQ0FBZ0MsRUFBRSxnQ0FBZ0MsRUFBRSxrQ0FBa0MsQ0FBQyxDQUFDO0lBRW5JLElBQUksYUFBYSxHQUFHLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUUxQyx5Q0FBeUM7SUFDckMsSUFBSSxnQkFBZ0IsR0FBRyxhQUFhLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNoRCxNQUFNO1FBQ04sS0FBSyxFQUFFLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUM7S0FDdEMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLG9DQUFvQztJQUVsRyx3Q0FBd0M7SUFDcEMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFdkQsYUFBYTtJQUNULGdCQUFnQixHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFaEQsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsd0JBQXdCO0lBRS9GLEtBQUssTUFBTSxVQUFVLElBQUksZ0JBQWdCLEVBQUU7UUFDdkMsSUFBSSxNQUFNLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQUMvQixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1lBQ2xELE9BQU8sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDdkI7UUFDRCxJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDMUIsTUFBTSxPQUFPLEdBQUcsTUFBTSxhQUFhLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLFVBQVUsRUFBRSxHQUFHLGlCQUFpQixDQUFDLEVBQUUsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsZ0NBQWdDO1lBQzFJLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ1YsRUFBRSxDQUFDLE1BQU0sQ0FBQywrQkFBK0IsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUN0RDtZQUNELE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUMvRDtLQUNKO0FBQ0wsQ0FBQztBQUVELFNBQVMsYUFBYSxDQUFDLEVBQUUsRUFBRSxNQUFNLEdBQUcsTUFBTSxFQUFFLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBRTtJQUMvRCxJQUFJLFdBQVcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQUUsT0FBTyxFQUFFLENBQUM7SUFDdkMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV4QixNQUFNLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDekMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV2QixLQUFLLE1BQU0sZUFBZSxJQUFJLGdCQUFnQixFQUFFO1FBQzVDLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFFLEVBQUUsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUM7S0FDN0U7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNuQixDQUFDO0FBRUQsU0FBUyxPQUFPLENBQUMsRUFBRSxFQUFFLE1BQU07SUFDdkIsT0FBTyxFQUFFLENBQUMsZUFBZSxFQUFFLElBQUksRUFBRSxDQUFDLDZCQUE2QixDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzVFLENBQUM7QUFFRCxTQUFTLE9BQU8sQ0FBQyxFQUFFLEVBQUUsTUFBTTtJQUN2QixJQUFJLGFBQWEsR0FBRyxFQUFFLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDekQsSUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBRXBCLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDO1FBQUUsV0FBVyxFQUFFLENBQUM7SUFDekQsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLGNBQWMsRUFBRSxNQUFNLENBQUM7UUFBRSxXQUFXLEVBQUUsQ0FBQztJQUN6RCxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLE1BQU0sQ0FBQztRQUFFLFdBQVcsRUFBRSxDQUFDO0lBQzFELElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDO1FBQUUsV0FBVyxFQUFFLENBQUM7SUFDekQsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxNQUFNLENBQUM7UUFBRSxXQUFXLEVBQUUsQ0FBQztJQUUxRCxPQUFPLFdBQVcsSUFBSSxhQUFhLENBQUM7QUFDeEMsQ0FBQztBQUVELFNBQVMsT0FBTyxDQUFDLEVBQUUsRUFBRSxNQUFNO0lBQ3ZCLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDO1FBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvRCxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsY0FBYyxFQUFFLE1BQU0sQ0FBQztRQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDL0QsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxNQUFNLENBQUM7UUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDO1FBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvRCxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLE1BQU0sQ0FBQztRQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFakUsSUFBSSxPQUFPLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1FBQ3JCLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDbkI7QUFDTCxDQUFDO0FBRUQsS0FBSyxVQUFVLGFBQWEsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTztJQUVqRSxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtRQUMxQixNQUFNLE9BQU8sR0FBRyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDVixPQUFPLEtBQUssQ0FBQyxDQUFDLGlDQUFpQztTQUNsRDtLQUNKO0lBQ0QsaURBQWlEO0lBQ2pELE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdkQsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsMkJBQTJCO0lBQ25GLE9BQU8sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLHNEQUFzRDtBQUM1RSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRGVzY3JpcHRpb246IFRoaXMgc2NyaXB0IHNob3VsZCBhdHRlbXB0IHRvIGhhY2sgYWxsIHNlcnZlcnMgaW4gdGhlIGdhbWUgYnkgdXNpbmcgdGhlICd3b3JtJyBzdHJhdGVneS5cclxuLy8gVGhlIHdvcm0gc3RyYXRlZ3kgaXMgdG8gZmlyc3QgbnVrZSBhIHNlcnZlciwgdGhlbiBkZXBsb3kgYSBzY3JpcHQgdGhhdCB3aWxsIGF1dG9tYXRpY2FsbHkgbGF1bmNoIGdyb3cvd2Vha2VuL2hhY2sgc2NyaXB0cyBhcyBuZWVkZWQuXHJcbi8vIENvcGllcyBqYWNrLmpzIGFuZCBzdXBwb3J0aW5nIHNjcmlwdHMgdG8gYWxsIHNlcnZlcnMgdGhhdCBhcmUgY29ubmVjdGVkIHRvIHRoZSB0YXJnZXQgc2VydmVyLCB0aGVuIGV4ZWN1dGVzIGphY2suanMgb24gZWFjaCBzZXJ2ZXIuXHJcbi8vIFVzYWdlOiBydW4gd29ybS5qcyBbdGFyZ2V0XVxyXG5cclxuLy8gLi4uXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcblxyXG4gICAgY29uc3QgbWFpblNjcmlwdCA9ICd3b3JteS9hZHZhbmNlZC9qYWNreC5qcyc7XHJcbiAgICBjb25zdCBzdXBwb3J0aW5nU2NyaXB0cyA9IFsnd29ybXkvYWR2YW5jZWQvc2NyaXB0cy9oYWNrLmpzJywgJ3dvcm15L2FkdmFuY2VkL3NjcmlwdHMvZ3Jvdy5qcycsICd3b3JteS9hZHZhbmNlZC9zY3JpcHRzL3dlYWtlbi5qcyddO1xyXG5cclxuICAgIGxldCB0YXJnZXRTZXJ2ZXJzID0gZ2V0QWxsU2VydmVycyhucyk7XHJcblxyXG4vLyBnZXQgc2VydmVycyB3aXRoIG1heCBtb25leSBpbmZvcm1hdGlvblxyXG4gICAgbGV0IHNlcnZlcnNXaXRoTW9uZXkgPSB0YXJnZXRTZXJ2ZXJzLm1hcChzZXJ2ZXIgPT4gKHtcclxuICAgICAgICBzZXJ2ZXIsXHJcbiAgICAgICAgbW9uZXk6IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcilcclxuICAgIH0pKS5maWx0ZXIoc2VydmVySW5mbyA9PiBjYW5IYWNrKG5zLCBzZXJ2ZXJJbmZvLnNlcnZlcikpOyAvLyBGaWx0ZXIgc2VydmVycyB0aGF0IGNhbiBiZSBoYWNrZWRcclxuXHJcbi8vIHNvcnQgaW4gZGVzY2VuZGluZyBvcmRlciBvZiBtYXggbW9uZXlcclxuICAgIHNlcnZlcnNXaXRoTW9uZXkuc29ydCgoYSwgYikgPT4gYi5tb25leSAtIGEubW9uZXkpO1xyXG5cclxuLy8gcGljayB0b3AgNVxyXG4gICAgc2VydmVyc1dpdGhNb25leSA9IHNlcnZlcnNXaXRoTW9uZXkuc2xpY2UoMCwgNSk7XHJcblxyXG4gICAgY29uc3QgdGFyZ2V0cyA9IHNlcnZlcnNXaXRoTW9uZXkubWFwKHNlcnZlckluZm8gPT4gc2VydmVySW5mby5zZXJ2ZXIpOyAvLyBsaXN0IG9mIHRvcCA1IHNlcnZlcnNcclxuXHJcbiAgICBmb3IgKGNvbnN0IHNlcnZlckluZm8gb2Ygc2VydmVyc1dpdGhNb25leSkge1xyXG4gICAgICAgIGxldCBzZXJ2ZXIgPSBzZXJ2ZXJJbmZvLnNlcnZlcjtcclxuICAgICAgICBpZiAoIW5zLmhhc1Jvb3RBY2Nlc3Moc2VydmVyKSAmJiBjYW5OdWtlKG5zLCBzZXJ2ZXIpKSB7XHJcbiAgICAgICAgICAgIHRyeU51a2UobnMsIHNlcnZlcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChucy5oYXNSb290QWNjZXNzKHNlcnZlcikpIHtcclxuICAgICAgICAgICAgY29uc3Qgc3VjY2VzcyA9IGF3YWl0IGRlcGxveVNjcmlwdHMobnMsIHNlcnZlciwgW21haW5TY3JpcHQsIC4uLnN1cHBvcnRpbmdTY3JpcHRzXSwgbWFpblNjcmlwdCwgdGFyZ2V0cyk7IC8vIHBhc3MgdGFyZ2V0cyB0byBkZXBsb3lTY3JpcHRzXHJcbiAgICAgICAgICAgIGlmICghc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgbnMudHByaW50KGBGYWlsZWQgdG8gZGVwbG95IG9uIHNlcnZlcjogJHtzZXJ2ZXJ9YCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoMTAwKTsgLy8gQWRkaW5nIGEgc2xpZ2h0IGRlbGF5IHRvIHJlZHVjZSBsb2FkXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRBbGxTZXJ2ZXJzKG5zLCBzZXJ2ZXIgPSAnaG9tZScsIHNlZW5TZXJ2ZXJzID0gbmV3IFNldCgpKSB7XHJcbiAgICBpZiAoc2VlblNlcnZlcnMuaGFzKHNlcnZlcikpIHJldHVybiBbXTtcclxuICAgIHNlZW5TZXJ2ZXJzLmFkZChzZXJ2ZXIpO1xyXG5cclxuICAgIGNvbnN0IGNvbm5lY3RlZFNlcnZlcnMgPSBucy5zY2FuKHNlcnZlcik7XHJcbiAgICBsZXQgc2VydmVycyA9IFtzZXJ2ZXJdO1xyXG5cclxuICAgIGZvciAoY29uc3QgY29ubmVjdGVkU2VydmVyIG9mIGNvbm5lY3RlZFNlcnZlcnMpIHtcclxuICAgICAgICBzZXJ2ZXJzID0gc2VydmVycy5jb25jYXQoZ2V0QWxsU2VydmVycyhucywgY29ubmVjdGVkU2VydmVyLCBzZWVuU2VydmVycykpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBzZXJ2ZXJzO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjYW5IYWNrKG5zLCBzZXJ2ZXIpIHtcclxuICAgIHJldHVybiBucy5nZXRIYWNraW5nTGV2ZWwoKSA+PSBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzZXJ2ZXIpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjYW5OdWtlKG5zLCBzZXJ2ZXIpIHtcclxuICAgIGxldCBwb3J0c1JlcXVpcmVkID0gbnMuZ2V0U2VydmVyTnVtUG9ydHNSZXF1aXJlZChzZXJ2ZXIpO1xyXG4gICAgbGV0IHBvcnRzT3BlbmVkID0gMDtcclxuXHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cygnQnJ1dGVTU0guZXhlJywgJ2hvbWUnKSkgcG9ydHNPcGVuZWQrKztcclxuICAgIGlmIChucy5maWxlRXhpc3RzKCdGVFBDcmFjay5leGUnLCAnaG9tZScpKSBwb3J0c09wZW5lZCsrO1xyXG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoJ3JlbGF5U01UUC5leGUnLCAnaG9tZScpKSBwb3J0c09wZW5lZCsrO1xyXG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoJ0hUVFBXb3JtLmV4ZScsICdob21lJykpIHBvcnRzT3BlbmVkKys7XHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cygnU1FMSW5qZWN0LmV4ZScsICdob21lJykpIHBvcnRzT3BlbmVkKys7XHJcblxyXG4gICAgcmV0dXJuIHBvcnRzT3BlbmVkID49IHBvcnRzUmVxdWlyZWQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHRyeU51a2UobnMsIHNlcnZlcikge1xyXG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoJ0JydXRlU1NILmV4ZScsICdob21lJykpIG5zLmJydXRlc3NoKHNlcnZlcik7XHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cygnRlRQQ3JhY2suZXhlJywgJ2hvbWUnKSkgbnMuZnRwY3JhY2soc2VydmVyKTtcclxuICAgIGlmIChucy5maWxlRXhpc3RzKCdyZWxheVNNVFAuZXhlJywgJ2hvbWUnKSkgbnMucmVsYXlzbXRwKHNlcnZlcik7XHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cygnSFRUUFdvcm0uZXhlJywgJ2hvbWUnKSkgbnMuaHR0cHdvcm0oc2VydmVyKTtcclxuICAgIGlmIChucy5maWxlRXhpc3RzKCdTUUxJbmplY3QuZXhlJywgJ2hvbWUnKSkgbnMuc3FsaW5qZWN0KHNlcnZlcik7XHJcblxyXG4gICAgaWYgKGNhbk51a2UobnMsIHNlcnZlcikpIHtcclxuICAgICAgICBucy5udWtlKHNlcnZlcik7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGRlcGxveVNjcmlwdHMobnMsIHNlcnZlciwgc2NyaXB0cywgbWFpblNjcmlwdCwgdGFyZ2V0cykge1xyXG5cclxuICAgIGZvciAoY29uc3Qgc2NyaXB0IG9mIHNjcmlwdHMpIHtcclxuICAgICAgICBjb25zdCBzdWNjZXNzID0gYXdhaXQgbnMuc2NwKHNjcmlwdCwgc2VydmVyKTtcclxuICAgICAgICBpZiAoIXN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBJZiBjb3B5aW5nIGZhaWxzLCByZXR1cm4gZmFsc2VcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBFbnN1cmUgdGFyZ2V0cyBpcyBhbiBhcnJheSBhbmQgcGFzcyBpdCB0byBleGVjXHJcbiAgICB0YXJnZXRzID0gQXJyYXkuaXNBcnJheSh0YXJnZXRzKSA/IHRhcmdldHMgOiBbdGFyZ2V0c107XHJcbiAgICBjb25zdCBwaWQgPSBucy5leGVjKG1haW5TY3JpcHQsIHNlcnZlciwgMSwgLi4udGFyZ2V0cyk7IC8vIFNwcmVhZCB0aGUgdGFyZ2V0cyBhcnJheVxyXG4gICAgcmV0dXJuIHBpZCAhPT0gMDsgLy8gUmV0dXJuIHRydWUgaWYgZXhlYyB3YXMgc3VjY2Vzc2Z1bCwgZmFsc2Ugb3RoZXJ3aXNlXHJcbn0iXX0=\",\"filename\":\"wormy/simple/worm.js\",\"server\":\"home\"}}],[\"wormy/simple/tail.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const targetServer = ns.args[0];\\n    while (true) {\\n        let serverStatus = {\\n            securityLevel: ns.getServerSecurityLevel(targetServer),\\n            availableMoney: ns.getServerMoneyAvailable(targetServer),\\n            totalMoney: ns.getServerMaxMoney(targetServer),\\n            numPortsRequired: ns.getServerNumPortsRequired(targetServer),\\n            ramUsage: ns.getServerUsedRam(targetServer),\\n            hasRootAccess: ns.hasRootAccess(targetServer)\\n        };\\n        ns.clearLog(); // clear the log before printing the status\\n        ns.tprint(JSON.stringify(serverStatus, null, 4)); // print the status with indentation\\n        await ns.sleep(10000); // sleep for 10 seconds before checking again\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy93b3JteS9zaW1wbGUvdGFpbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0I7QUFFdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBRS9CLE9BQU0sSUFBSSxFQUFFO1FBQ1IsSUFBSSxZQUFZLEdBQUc7WUFDZixhQUFhLEVBQUUsRUFBRSxDQUFDLHNCQUFzQixDQUFDLFlBQVksQ0FBQztZQUN0RCxjQUFjLEVBQUUsRUFBRSxDQUFDLHVCQUF1QixDQUFDLFlBQVksQ0FBQztZQUN4RCxVQUFVLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixDQUFDLFlBQVksQ0FBQztZQUM5QyxnQkFBZ0IsRUFBRSxFQUFFLENBQUMseUJBQXlCLENBQUMsWUFBWSxDQUFDO1lBQzVELFFBQVEsRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDO1lBQzNDLGFBQWEsRUFBRSxFQUFFLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQztTQUNoRCxDQUFDO1FBRUYsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsMkNBQTJDO1FBQzFELEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxvQ0FBb0M7UUFDdEYsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsNkNBQTZDO0tBQ3ZFO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXRTZXJ2ZXIgPSBucy5hcmdzWzBdXHJcblxyXG4gICAgd2hpbGUodHJ1ZSkge1xyXG4gICAgICAgIGxldCBzZXJ2ZXJTdGF0dXMgPSB7XHJcbiAgICAgICAgICAgIHNlY3VyaXR5TGV2ZWw6IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0U2VydmVyKSxcclxuICAgICAgICAgICAgYXZhaWxhYmxlTW9uZXk6IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldFNlcnZlciksXHJcbiAgICAgICAgICAgIHRvdGFsTW9uZXk6IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldFNlcnZlciksXHJcbiAgICAgICAgICAgIG51bVBvcnRzUmVxdWlyZWQ6IG5zLmdldFNlcnZlck51bVBvcnRzUmVxdWlyZWQodGFyZ2V0U2VydmVyKSxcclxuICAgICAgICAgICAgcmFtVXNhZ2U6IG5zLmdldFNlcnZlclVzZWRSYW0odGFyZ2V0U2VydmVyKSxcclxuICAgICAgICAgICAgaGFzUm9vdEFjY2VzczogbnMuaGFzUm9vdEFjY2Vzcyh0YXJnZXRTZXJ2ZXIpXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgbnMuY2xlYXJMb2coKTsgLy8gY2xlYXIgdGhlIGxvZyBiZWZvcmUgcHJpbnRpbmcgdGhlIHN0YXR1c1xyXG4gICAgICAgIG5zLnRwcmludChKU09OLnN0cmluZ2lmeShzZXJ2ZXJTdGF0dXMsIG51bGwsIDQpKTsgLy8gcHJpbnQgdGhlIHN0YXR1cyB3aXRoIGluZGVudGF0aW9uXHJcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMTAwMDApOyAvLyBzbGVlcCBmb3IgMTAgc2Vjb25kcyBiZWZvcmUgY2hlY2tpbmcgYWdhaW5cclxuICAgIH1cclxufSJdfQ==\",\"filename\":\"wormy/simple/tail.js\",\"server\":\"home\"}}],[\"wormy/advanced/jackx.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const homeServer = 'home';\\n    const ramBuffer = 0; // Reserve 512GB of RAM\\n    const supportingScripts = ['wormy/advanced/scripts/hack.js', 'wormy/advanced/scripts/grow.js', 'wormy/advanced/scripts/weaken.js'];\\n    let targetServer = ns.args[0];\\n    if (!targetServer) {\\n        ns.tprint('ERROR: No target server provided');\\n        return;\\n    }\\n    ns.tprint(`SUCCESS: Starting advanced attack script on target server: ${targetServer}`);\\n    // eslint-disable-next-line no-constant-condition\\n    while (true) {\\n        const rootServers = getRootServers(ns);\\n        rootServers.unshift(homeServer); // Move homeServer to the beginning of the array for prioritized processing\\n        await ns.sleep(25);\\n        for (let source of rootServers) {\\n            let availableRam = ns.getServerMaxRam(source) - ns.getServerUsedRam(source);\\n            if (availableRam <= 0 && source === homeServer) {\\n                ns.print(`INFO: Not enough RAM available on ${source}. Skipping for now.`);\\n                continue;\\n            }\\n            // Initialize scriptRam with some arbitrary large value.\\n            let scriptRam = 1.75;\\n            while (availableRam - scriptRam >= ramBuffer) { // Just checking if we have enough RAM to run the script.\\n                await ns.sleep(25);\\n                let action;\\n                const currentSecurity = ns.getServerSecurityLevel(targetServer);\\n                const currentMoney = ns.getServerMoneyAvailable(targetServer);\\n                const maxMoney = ns.getServerMaxMoney(targetServer);\\n                const securityThreshold = ns.getServerMinSecurityLevel(targetServer) + 10;\\n                const moneyThreshold = 0.75;\\n                ns.print('<<<<<<<<<<<<<<<<<<<<<<<<   ~~   >>>>>>>>>>>>>>>>>>>>>>>>');\\n                ns.print(`INFO: ${targetServer} Current Security: `, currentSecurity);\\n                ns.print(`INFO: ${targetServer} Security Threshold: `, securityThreshold);\\n                ns.print(`INFO: ${targetServer} Max Money: `, maxMoney);\\n                ns.print(`INFO: ${targetServer} Current Money: `, currentMoney);\\n                ns.print('<<<<<<<<<<<<<<<<<<<<<<<<   ~~   >>>>>>>>>>>>>>>>>>>>>>>>');\\n                // Manage the supporting scripts\\n                for (let script of supportingScripts) {\\n                    let supportingScriptRam = ns.getScriptRam(script, homeServer);\\n                    if (availableRam - supportingScriptRam < ramBuffer) {\\n                        continue;\\n                    }\\n                    else {\\n                        availableRam -= supportingScriptRam;\\n                        ns.scp(script, source);\\n                    }\\n                    await ns.sleep(25);\\n                }\\n                if (currentSecurity > securityThreshold) {\\n                    action = 'weaken';\\n                }\\n                else if (currentMoney < maxMoney * moneyThreshold) {\\n                    action = 'grow';\\n                }\\n                else {\\n                    action = 'hack';\\n                }\\n                // Before exec check for sufficient RAM\\n                scriptRam = ns.getScriptRam(`wormy/advanced/scripts/${action}.js`, source);\\n                if (availableRam - scriptRam < 0 && source === homeServer) {\\n                    ns.print(`ERROR: Unable to start script ${action}.js on home server due to low RAM`);\\n                    break;\\n                }\\n                const pid = ns.exec(`wormy/advanced/scripts/${action}.js`, source, 1, targetServer);\\n                if (pid === 0) {\\n                    ns.print(`ERROR: Unable to start script ${action}.js on server ${source}`);\\n                    continue;\\n                }\\n                else {\\n                    availableRam -= (scriptRam + ramBuffer);\\n                    ns.print(`SUCCESS: Deploying ${action}.js`);\\n                }\\n            }\\n            await ns.sleep(25);\\n        }\\n    }\\n}\\n// Function checks for all servers that you have root access to\\nfunction getRootServers(ns, startServer = 'home') {\\n    let visitedServers = [];\\n    let serversToVisit = [startServer];\\n    while (serversToVisit.length > 0) {\\n        let currentServer = serversToVisit.pop();\\n        if (!visitedServers.includes(currentServer)) {\\n            visitedServers.push(currentServer);\\n            let connectedServers = ns.scan(currentServer);\\n            for (let server of connectedServers) {\\n                if (ns.hasRootAccess(server)) {\\n                    serversToVisit.push(server);\\n                }\\n            }\\n        }\\n    }\\n    return visitedServers;\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"wormy/advanced/jackx.js\",\"server\":\"home\"}}],[\"wormy/advanced/wormx.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const supportingScripts = ['wormy/advanced/scripts/hack.js', 'wormy/advanced/scripts/grow.js',\\n        'wormy/advanced/scripts/weaken.js', 'wormy/advanced/jackx.js'];\\n    // Outermost loop to keep the script running indefinitely\\n    while (true) {\\n        // create a queue, and add the initially scanned servers from 'home'\\n        let serversToProcess = ns.scan('home');\\n        while (serversToProcess.length > 0) {\\n            let currentServer = serversToProcess.shift();\\n            if (currentServer !== 'home') {\\n                await processServer(ns, currentServer, supportingScripts);\\n                ns.print(`WARN: Scanning for new servers from ${currentServer}`);\\n                let foundServers = ns.scan(currentServer);\\n                for (let server of foundServers) {\\n                    if (!serversToProcess.includes(server)) {\\n                        serversToProcess.push(server);\\n                    }\\n                }\\n                await ns.sleep(100);\\n            }\\n        }\\n        // Sleep before starting another round of scanning and processing\\n        ns.tprint(`INFO: Completed a round of server processing. Starting again in 1 second.`);\\n        await ns.sleep(1000);\\n    }\\n}\\nasync function processServer(ns, server, supportingScripts) {\\n    let portsRequired = ns.getServerNumPortsRequired(server);\\n    let portsOpened = 0;\\n    if (ns.hasRootAccess(server)) {\\n        // ns.tprint(`Already have root access on ${server}`);\\n        return;\\n    }\\n    if (ns.fileExists('BruteSSH.exe', 'home')) {\\n        ns.brutessh(server);\\n        portsOpened++;\\n    }\\n    if (ns.fileExists('FTPCrack.exe', 'home')) {\\n        ns.ftpcrack(server);\\n        portsOpened++;\\n    }\\n    if (ns.fileExists('relaySMTP.exe', 'home')) {\\n        ns.relaysmtp(server);\\n        portsOpened++;\\n    }\\n    if (ns.fileExists('HTTPWorm.exe', 'home')) {\\n        ns.httpworm(server);\\n        portsOpened++;\\n    }\\n    if (ns.fileExists('SQLInject.exe', 'home')) {\\n        ns.sqlinject(server);\\n        portsOpened++;\\n    }\\n    if (portsRequired <= portsOpened) {\\n        ns.nuke(server);\\n        for (let script of supportingScripts) {\\n            ns.scp(script, server);\\n            ns.print(`Copied ${script} to ${server}`);\\n            await ns.sleep(500);\\n        }\\n        ns.tprint(`SUCCESS: Root Access gained on ${server}`);\\n    }\\n    await ns.sleep(1500);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ybXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvd29ybXkvYWR2YW5jZWQvd29ybXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLGdDQUFnQyxFQUFFLGdDQUFnQztRQUN6RixrQ0FBa0MsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO0lBRW5FLHlEQUF5RDtJQUN6RCxPQUFPLElBQUksRUFBRTtRQUNULG9FQUFvRTtRQUNwRSxJQUFJLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFdkMsT0FBTyxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ2hDLElBQUksYUFBYSxHQUFHLGdCQUFnQixDQUFDLEtBQUssRUFBRSxDQUFDO1lBQzdDLElBQUksYUFBYSxLQUFLLE1BQU0sRUFBRTtnQkFDMUIsTUFBTSxhQUFhLENBQUMsRUFBRSxFQUFFLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO2dCQUMxRCxFQUFFLENBQUMsS0FBSyxDQUFDLHVDQUF1QyxhQUFhLEVBQUUsQ0FBQyxDQUFDO2dCQUNqRSxJQUFJLFlBQVksR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO2dCQUMxQyxLQUFLLElBQUksTUFBTSxJQUFJLFlBQVksRUFBRTtvQkFDN0IsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRTt3QkFDcEMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO3FCQUNqQztpQkFDSjtnQkFDRCxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDdkI7U0FDSjtRQUVELGlFQUFpRTtRQUNqRSxFQUFFLENBQUMsTUFBTSxDQUFDLDJFQUEyRSxDQUFDLENBQUM7UUFDdkYsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3hCO0FBQ0wsQ0FBQztBQUVELEtBQUssVUFBVSxhQUFhLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxpQkFBaUI7SUFDdEQsSUFBSSxhQUFhLEdBQUcsRUFBRSxDQUFDLHlCQUF5QixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3pELElBQUksV0FBVyxHQUFHLENBQUMsQ0FBQztJQUNwQixJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDMUIsc0RBQXNEO1FBQ3RELE9BQU87S0FDVjtJQUNELElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDdkMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQixXQUFXLEVBQUUsQ0FBQztLQUNqQjtJQUNELElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDdkMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQixXQUFXLEVBQUUsQ0FBQztLQUNqQjtJQUNELElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxlQUFlLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDeEMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQixXQUFXLEVBQUUsQ0FBQztLQUNqQjtJQUNELElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDdkMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQixXQUFXLEVBQUUsQ0FBQztLQUNqQjtJQUNELElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxlQUFlLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDeEMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQixXQUFXLEVBQUUsQ0FBQztLQUNqQjtJQUVELElBQUksYUFBYSxJQUFJLFdBQVcsRUFBRTtRQUM5QixFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hCLEtBQUssSUFBSSxNQUFNLElBQUksaUJBQWlCLEVBQUU7WUFDbEMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDdkIsRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLE1BQU0sT0FBTyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1lBQzFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN2QjtRQUNELEVBQUUsQ0FBQyxNQUFNLENBQUMsa0NBQWtDLE1BQU0sRUFBRSxDQUFDLENBQUM7S0FDekQ7SUFDRCxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHN1cHBvcnRpbmdTY3JpcHRzID0gWyd3b3JteS9hZHZhbmNlZC9zY3JpcHRzL2hhY2suanMnLCAnd29ybXkvYWR2YW5jZWQvc2NyaXB0cy9ncm93LmpzJyxcclxuICAgICAgICAnd29ybXkvYWR2YW5jZWQvc2NyaXB0cy93ZWFrZW4uanMnLCAnd29ybXkvYWR2YW5jZWQvamFja3guanMnXTtcclxuXHJcbiAgICAvLyBPdXRlcm1vc3QgbG9vcCB0byBrZWVwIHRoZSBzY3JpcHQgcnVubmluZyBpbmRlZmluaXRlbHlcclxuICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgLy8gY3JlYXRlIGEgcXVldWUsIGFuZCBhZGQgdGhlIGluaXRpYWxseSBzY2FubmVkIHNlcnZlcnMgZnJvbSAnaG9tZSdcclxuICAgICAgICBsZXQgc2VydmVyc1RvUHJvY2VzcyA9IG5zLnNjYW4oJ2hvbWUnKTtcclxuXHJcbiAgICAgICAgd2hpbGUgKHNlcnZlcnNUb1Byb2Nlc3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBsZXQgY3VycmVudFNlcnZlciA9IHNlcnZlcnNUb1Byb2Nlc3Muc2hpZnQoKTtcclxuICAgICAgICAgICAgaWYgKGN1cnJlbnRTZXJ2ZXIgIT09ICdob21lJykge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgcHJvY2Vzc1NlcnZlcihucywgY3VycmVudFNlcnZlciwgc3VwcG9ydGluZ1NjcmlwdHMpO1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoYFdBUk46IFNjYW5uaW5nIGZvciBuZXcgc2VydmVycyBmcm9tICR7Y3VycmVudFNlcnZlcn1gKTtcclxuICAgICAgICAgICAgICAgIGxldCBmb3VuZFNlcnZlcnMgPSBucy5zY2FuKGN1cnJlbnRTZXJ2ZXIpO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgc2VydmVyIG9mIGZvdW5kU2VydmVycykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghc2VydmVyc1RvUHJvY2Vzcy5pbmNsdWRlcyhzZXJ2ZXIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlcnNUb1Byb2Nlc3MucHVzaChzZXJ2ZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKDEwMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFNsZWVwIGJlZm9yZSBzdGFydGluZyBhbm90aGVyIHJvdW5kIG9mIHNjYW5uaW5nIGFuZCBwcm9jZXNzaW5nXHJcbiAgICAgICAgbnMudHByaW50KGBJTkZPOiBDb21wbGV0ZWQgYSByb3VuZCBvZiBzZXJ2ZXIgcHJvY2Vzc2luZy4gU3RhcnRpbmcgYWdhaW4gaW4gMSBzZWNvbmQuYCk7XHJcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMTAwMCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIHByb2Nlc3NTZXJ2ZXIobnMsIHNlcnZlciwgc3VwcG9ydGluZ1NjcmlwdHMpIHtcclxuICAgIGxldCBwb3J0c1JlcXVpcmVkID0gbnMuZ2V0U2VydmVyTnVtUG9ydHNSZXF1aXJlZChzZXJ2ZXIpO1xyXG4gICAgbGV0IHBvcnRzT3BlbmVkID0gMDtcclxuICAgIGlmIChucy5oYXNSb290QWNjZXNzKHNlcnZlcikpIHtcclxuICAgICAgICAvLyBucy50cHJpbnQoYEFscmVhZHkgaGF2ZSByb290IGFjY2VzcyBvbiAke3NlcnZlcn1gKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cygnQnJ1dGVTU0guZXhlJywgJ2hvbWUnKSkge1xyXG4gICAgICAgIG5zLmJydXRlc3NoKHNlcnZlcik7XHJcbiAgICAgICAgcG9ydHNPcGVuZWQrKztcclxuICAgIH1cclxuICAgIGlmIChucy5maWxlRXhpc3RzKCdGVFBDcmFjay5leGUnLCAnaG9tZScpKSB7XHJcbiAgICAgICAgbnMuZnRwY3JhY2soc2VydmVyKTtcclxuICAgICAgICBwb3J0c09wZW5lZCsrO1xyXG4gICAgfVxyXG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoJ3JlbGF5U01UUC5leGUnLCAnaG9tZScpKSB7XHJcbiAgICAgICAgbnMucmVsYXlzbXRwKHNlcnZlcik7XHJcbiAgICAgICAgcG9ydHNPcGVuZWQrKztcclxuICAgIH1cclxuICAgIGlmIChucy5maWxlRXhpc3RzKCdIVFRQV29ybS5leGUnLCAnaG9tZScpKSB7XHJcbiAgICAgICAgbnMuaHR0cHdvcm0oc2VydmVyKTtcclxuICAgICAgICBwb3J0c09wZW5lZCsrO1xyXG4gICAgfVxyXG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoJ1NRTEluamVjdC5leGUnLCAnaG9tZScpKSB7XHJcbiAgICAgICAgbnMuc3FsaW5qZWN0KHNlcnZlcik7XHJcbiAgICAgICAgcG9ydHNPcGVuZWQrKztcclxuICAgIH1cclxuXHJcbiAgICBpZiAocG9ydHNSZXF1aXJlZCA8PSBwb3J0c09wZW5lZCkge1xyXG4gICAgICAgIG5zLm51a2Uoc2VydmVyKTtcclxuICAgICAgICBmb3IgKGxldCBzY3JpcHQgb2Ygc3VwcG9ydGluZ1NjcmlwdHMpIHtcclxuICAgICAgICAgICAgbnMuc2NwKHNjcmlwdCwgc2VydmVyKTtcclxuICAgICAgICAgICAgbnMucHJpbnQoYENvcGllZCAke3NjcmlwdH0gdG8gJHtzZXJ2ZXJ9YCk7XHJcbiAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKDUwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG5zLnRwcmludChgU1VDQ0VTUzogUm9vdCBBY2Nlc3MgZ2FpbmVkIG9uICR7c2VydmVyfWApO1xyXG4gICAgfVxyXG4gICAgYXdhaXQgbnMuc2xlZXAoMTUwMCk7XHJcbn0iXX0=\",\"filename\":\"wormy/advanced/wormx.js\",\"server\":\"home\"}}],[\"wormy/advanced/deploy-jack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const scriptToRun = 'wormy/advanced/jackx.js';\\n    // Outermost loop to keep the script running indefinitely\\n    while (true) {\\n        let servers = ns.scan('home');\\n        await runScriptOnServers(ns, servers, scriptToRun);\\n        // Sleep before starting another round of deploying\\n        ns.print(`Completed a round of server script deployments. Starting again in 1 minute.`);\\n        await ns.sleep(60000);\\n    }\\n}\\nasync function runScriptOnServers(ns, servers, scriptToRun) {\\n    for (let i = 0; i < servers.length; i++) {\\n        if (!ns.isRunning(scriptToRun, 'home', servers[i])) {\\n            if (servers[i] === 'home') {\\n                continue;\\n            }\\n            if (ns.getServerRequiredHackingLevel(servers[i]) <= ns.getHackingLevel() && ns.hasRootAccess(servers[i])) {\\n                if (ns.getServerMaxMoney(servers[i]) === 0) {\\n                    ns.print(`Skipping ${servers[i]} because it has no money`);\\n                    continue;\\n                }\\n                ns.exec(scriptToRun, 'home', 1, servers[i]);\\n                // ns.tprint(`SUCCESS: Deployed JACKX on ${servers[i]}`);\\n                await ns.sleep(50);\\n                // If a server is not running the script, then we scan for its connected servers and run the script on them as well\\n                let connectedServers = ns.scan(servers[i]);\\n                await runScriptOnServers(ns, connectedServers, scriptToRun);\\n            }\\n        }\\n        else {\\n            ns.print(`JACKX already running on ${servers[i]}`);\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwbG95LWphY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvd29ybXkvYWR2YW5jZWQvZGVwbG95LWphY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxXQUFXLEdBQUcseUJBQXlCLENBQUM7SUFFOUMseURBQXlEO0lBQ3pELE9BQU8sSUFBSSxFQUFFO1FBQ1QsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM5QixNQUFNLGtCQUFrQixDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFFbkQsbURBQW1EO1FBQ25ELEVBQUUsQ0FBQyxLQUFLLENBQUMsNkVBQTZFLENBQUMsQ0FBQztRQUN4RixNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDekI7QUFDTCxDQUFDO0FBRUQsS0FBSyxVQUFVLGtCQUFrQixDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsV0FBVztJQUN0RCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNyQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2hELElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLE1BQU0sRUFBRTtnQkFDdkIsU0FBUzthQUNaO1lBQ0QsSUFBSSxFQUFFLENBQUMsNkJBQTZCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLGVBQWUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQ3RHLElBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBQztvQkFDdEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxZQUFZLE9BQU8sQ0FBQyxDQUFDLENBQUMsMEJBQTBCLENBQUMsQ0FBQztvQkFDM0QsU0FBUztpQkFDWjtnQkFFRCxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO2dCQUMzQyx5REFBeUQ7Z0JBQ3pELE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQTtnQkFFbEIsbUhBQW1IO2dCQUNuSCxJQUFJLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzNDLE1BQU0sa0JBQWtCLENBQUMsRUFBRSxFQUFFLGdCQUFnQixFQUFFLFdBQVcsQ0FBQyxDQUFDO2FBQy9EO1NBQ0o7YUFBTTtZQUNILEVBQUUsQ0FBQyxLQUFLLENBQUMsNEJBQTRCLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDdEQ7S0FDSjtBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCBzY3JpcHRUb1J1biA9ICd3b3JteS9hZHZhbmNlZC9qYWNreC5qcyc7XHJcblxyXG4gICAgLy8gT3V0ZXJtb3N0IGxvb3AgdG8ga2VlcCB0aGUgc2NyaXB0IHJ1bm5pbmcgaW5kZWZpbml0ZWx5XHJcbiAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgIGxldCBzZXJ2ZXJzID0gbnMuc2NhbignaG9tZScpO1xyXG4gICAgICAgIGF3YWl0IHJ1blNjcmlwdE9uU2VydmVycyhucywgc2VydmVycywgc2NyaXB0VG9SdW4pO1xyXG5cclxuICAgICAgICAvLyBTbGVlcCBiZWZvcmUgc3RhcnRpbmcgYW5vdGhlciByb3VuZCBvZiBkZXBsb3lpbmdcclxuICAgICAgICBucy5wcmludChgQ29tcGxldGVkIGEgcm91bmQgb2Ygc2VydmVyIHNjcmlwdCBkZXBsb3ltZW50cy4gU3RhcnRpbmcgYWdhaW4gaW4gMSBtaW51dGUuYCk7XHJcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoNjAwMDApO1xyXG4gICAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBydW5TY3JpcHRPblNlcnZlcnMobnMsIHNlcnZlcnMsIHNjcmlwdFRvUnVuKSB7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlcnZlcnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAoIW5zLmlzUnVubmluZyhzY3JpcHRUb1J1biwgJ2hvbWUnLCBzZXJ2ZXJzW2ldKSkge1xyXG4gICAgICAgICAgICBpZiAoc2VydmVyc1tpXSA9PT0gJ2hvbWUnKSB7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc2VydmVyc1tpXSkgPD0gbnMuZ2V0SGFja2luZ0xldmVsKCkgJiYgbnMuaGFzUm9vdEFjY2VzcyhzZXJ2ZXJzW2ldKSkge1xyXG4gICAgICAgICAgICAgICAgaWYobnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyc1tpXSkgPT09IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIG5zLnByaW50KGBTa2lwcGluZyAke3NlcnZlcnNbaV19IGJlY2F1c2UgaXQgaGFzIG5vIG1vbmV5YCk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgbnMuZXhlYyhzY3JpcHRUb1J1biwgJ2hvbWUnLCAxLCBzZXJ2ZXJzW2ldKVxyXG4gICAgICAgICAgICAgICAgLy8gbnMudHByaW50KGBTVUNDRVNTOiBEZXBsb3llZCBKQUNLWCBvbiAke3NlcnZlcnNbaV19YCk7XHJcbiAgICAgICAgICAgICAgICBhd2FpdCBucy5zbGVlcCg1MClcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBJZiBhIHNlcnZlciBpcyBub3QgcnVubmluZyB0aGUgc2NyaXB0LCB0aGVuIHdlIHNjYW4gZm9yIGl0cyBjb25uZWN0ZWQgc2VydmVycyBhbmQgcnVuIHRoZSBzY3JpcHQgb24gdGhlbSBhcyB3ZWxsXHJcbiAgICAgICAgICAgICAgICBsZXQgY29ubmVjdGVkU2VydmVycyA9IG5zLnNjYW4oc2VydmVyc1tpXSk7XHJcbiAgICAgICAgICAgICAgICBhd2FpdCBydW5TY3JpcHRPblNlcnZlcnMobnMsIGNvbm5lY3RlZFNlcnZlcnMsIHNjcmlwdFRvUnVuKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KGBKQUNLWCBhbHJlYWR5IHJ1bm5pbmcgb24gJHtzZXJ2ZXJzW2ldfWApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==\",\"filename\":\"wormy/advanced/deploy-jack.js\",\"server\":\"home\"}}],[\"wormy/simple/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by jack.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"Error: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy93b3JteS9zaW1wbGUvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9EQUFvRDtBQUVwRCxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IGphY2suanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVycm9yOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciBncm93LlwiKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQsIHt0aHJlYWRzOiB0aHJlYWRzfSk7XHJcblxyXG59XHJcbiJdfQ==\",\"filename\":\"wormy/simple/scripts/grow.js\",\"server\":\"home\"}}],[\"wormy/simple/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by jack.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"Error: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3dvcm15L3NpbXBsZS9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvREFBb0Q7QUFFcEQsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBqYWNrLmpzIHRvIGEgdGFyZ2V0IHNlcnZlclxyXG5cclxuLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcclxuICAgIGNvbnN0IHRocmVhZHMgPSBucy5hcmdzWzFdIHx8IDE7XHJcblxyXG4gICAgaWYgKCF0YXJnZXQpIHtcclxuICAgICAgICBucy50cHJpbnQoXCJFcnJvcjogTm8gdGFyZ2V0IHNwZWNpZmllZCBmb3Igd2Vha2VuLlwiKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgYXdhaXQgbnMud2Vha2VuKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"wormy/simple/scripts/weaken.js\",\"server\":\"home\"}}],[\"wormy/simple/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by jack.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"Error: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy93b3JteS9zaW1wbGUvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9EQUFvRDtBQUVwRCxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IGphY2suanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVycm9yOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciBoYWNrLlwiKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgYXdhaXQgbnMuaGFjayh0YXJnZXQsIHt0aHJlYWRzOiB0aHJlYWRzfSk7XHJcblxyXG59XHJcbiJdfQ==\",\"filename\":\"wormy/simple/scripts/hack.js\",\"server\":\"home\"}}],[\"wormy/advanced/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy93b3JteS9hZHZhbmNlZC9zY3JpcHRzL2dyb3cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0VBQXdFO0FBRXhFLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIE1hZGUgdG8gYmUgZGVwbG95ZWQgYnkgc3JjL3dvcm15L2FkdmFuY2VkL2phY2t4LmpzIHRvIGEgdGFyZ2V0IHNlcnZlclxyXG5cclxuLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcclxuICAgIGNvbnN0IHRocmVhZHMgPSBucy5hcmdzWzFdIHx8IDE7XHJcblxyXG4gICAgaWYgKCF0YXJnZXQpIHtcclxuICAgICAgICBucy50cHJpbnQoXCJFUlJPUjogTm8gdGFyZ2V0IHNwZWNpZmllZCBmb3IgZ3Jvdy5cIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGF3YWl0IG5zLmdyb3codGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"wormy/advanced/scripts/grow.js\",\"server\":\"home\"}}],[\"wormy/advanced/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3dvcm15L2FkdmFuY2VkL3NjcmlwdHMvd2Vha2VuLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHdDQUF3QyxDQUFDLENBQUM7UUFDcEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRWhELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIHdlYWtlbi5cIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQsIHt0aHJlYWRzOiB0aHJlYWRzfSk7XHJcblxyXG59XHJcbiJdfQ==\",\"filename\":\"wormy/advanced/scripts/weaken.js\",\"server\":\"home\"}}],[\"wormy/advanced/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy93b3JteS9hZHZhbmNlZC9zY3JpcHRzL2hhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0VBQXdFO0FBRXhFLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIE1hZGUgdG8gYmUgZGVwbG95ZWQgYnkgc3JjL3dvcm15L2FkdmFuY2VkL2phY2t4LmpzIHRvIGEgdGFyZ2V0IHNlcnZlclxyXG5cclxuLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcclxuICAgIGNvbnN0IHRocmVhZHMgPSBucy5hcmdzWzFdIHx8IDE7XHJcblxyXG4gICAgaWYgKCF0YXJnZXQpIHtcclxuICAgICAgICBucy50cHJpbnQoXCJFUlJPUjogTm8gdGFyZ2V0IHNwZWNpZmllZCBmb3IgaGFjay5cIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGF3YWl0IG5zLmhhY2sodGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"wormy/advanced/scripts/hack.js\",\"server\":\"home\"}}],[\"aug/start.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    ns.print(\\\"Start\\\");\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXVnL3N0YXJ0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3JCLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUE7QUFDckIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgICAgICBucy5wcmludChcIlN0YXJ0XCIpXHJcbiAgICB9Il19\",\"filename\":\"aug/start.js\",\"server\":\"home\"}}],[\"old/backdoor.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    // w0r1d_d43m0n\\n    if (ns.args.length === 1) {\\n        const target = ns.args[0];\\n        ns.print(\\\"Searching network path to \\\" + target);\\n        var networkPath = [];\\n        networkPath = scanAll(ns, \\\"home\\\", target, networkPath);\\n        for (var server of networkPath) {\\n            ns.singularity.connect(server);\\n            if (server === target) {\\n                var backdoorSuccess = await ns.singularity.installBackdoor();\\n                ns.tprint(\\\"Installed backdoor on \\\" + server + \\\" - \\\" + backdoorSuccess);\\n                ns.singularity.connect(\\\"home\\\");\\n                return backdoorSuccess;\\n            }\\n        }\\n    }\\n    else {\\n        ns.tprint(\\\"Usage: specify target server like: backdoor CSEC\\\");\\n    }\\n    return false;\\n}\\nfunction scanAll(ns, start, target, path) {\\n    var connectedHosts = ns.scan(start);\\n    var finalPath = null;\\n    for (var host of connectedHosts) {\\n        if (!path.includes(host)) {\\n            path.push(host);\\n            if (host === target) {\\n                ns.print(\\\"Found path: \\\" + path);\\n                return path;\\n            }\\n            finalPath = scanAll(ns, host, target, path);\\n            if (finalPath != null) {\\n                return finalPath;\\n            }\\n            else {\\n                // we did not find the target followint the network map of this server.\\n                path.pop();\\n            }\\n        }\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2Rvb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvb2xkL2JhY2tkb29yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLGVBQWU7SUFDZixJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtRQUN0QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzFCLEVBQUUsQ0FBQyxLQUFLLENBQUMsNEJBQTRCLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFFaEQsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3JCLFdBQVcsR0FBRyxPQUFPLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFFdkQsS0FBSyxJQUFJLE1BQU0sSUFBSSxXQUFXLEVBQUU7WUFDNUIsRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUE7WUFDOUIsSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUNuQixJQUFJLGVBQWUsR0FBRyxNQUFNLEVBQUUsQ0FBQyxXQUFXLENBQUMsZUFBZSxFQUFFLENBQUM7Z0JBQzdELEVBQUUsQ0FBQyxNQUFNLENBQUMsd0JBQXdCLEdBQUcsTUFBTSxHQUFHLEtBQUssR0FBRyxlQUFlLENBQUMsQ0FBQztnQkFDdkUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQy9CLE9BQU8sZUFBZSxDQUFDO2FBQzFCO1NBQ0o7S0FDSjtTQUFNO1FBQ0gsRUFBRSxDQUFDLE1BQU0sQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO0tBQ2pFO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQUVELFNBQVMsT0FBTyxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLElBQUk7SUFDcEMsSUFBSSxjQUFjLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQyxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUM7SUFDckIsS0FBSyxJQUFJLElBQUksSUFBSSxjQUFjLEVBQUU7UUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNoQixJQUFJLElBQUksS0FBSyxNQUFNLEVBQUU7Z0JBQ2pCLEVBQUUsQ0FBQyxLQUFLLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxDQUFBO2dCQUMvQixPQUFPLElBQUksQ0FBQzthQUNmO1lBQ0QsU0FBUyxHQUFHLE9BQU8sQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztZQUM1QyxJQUFJLFNBQVMsSUFBSSxJQUFJLEVBQUU7Z0JBQ25CLE9BQU8sU0FBUyxDQUFDO2FBQ3BCO2lCQUFNO2dCQUNILHVFQUF1RTtnQkFDdkUsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO2FBQ2Q7U0FDSjtLQUNKO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIC8vIHcwcjFkX2Q0M20wblxyXG4gICAgaWYgKG5zLmFyZ3MubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcclxuICAgICAgICBucy5wcmludChcIlNlYXJjaGluZyBuZXR3b3JrIHBhdGggdG8gXCIgKyB0YXJnZXQpO1xyXG5cclxuICAgICAgICB2YXIgbmV0d29ya1BhdGggPSBbXTtcclxuICAgICAgICBuZXR3b3JrUGF0aCA9IHNjYW5BbGwobnMsIFwiaG9tZVwiLCB0YXJnZXQsIG5ldHdvcmtQYXRoKTtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgc2VydmVyIG9mIG5ldHdvcmtQYXRoKSB7XHJcbiAgICAgICAgICAgIG5zLnNpbmd1bGFyaXR5LmNvbm5lY3Qoc2VydmVyKVxyXG4gICAgICAgICAgICBpZiAoc2VydmVyID09PSB0YXJnZXQpIHtcclxuICAgICAgICAgICAgICAgIHZhciBiYWNrZG9vclN1Y2Nlc3MgPSBhd2FpdCBucy5zaW5ndWxhcml0eS5pbnN0YWxsQmFja2Rvb3IoKTtcclxuICAgICAgICAgICAgICAgIG5zLnRwcmludChcIkluc3RhbGxlZCBiYWNrZG9vciBvbiBcIiArIHNlcnZlciArIFwiIC0gXCIgKyBiYWNrZG9vclN1Y2Nlc3MpO1xyXG4gICAgICAgICAgICAgICAgbnMuc2luZ3VsYXJpdHkuY29ubmVjdChcImhvbWVcIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYmFja2Rvb3JTdWNjZXNzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBucy50cHJpbnQoXCJVc2FnZTogc3BlY2lmeSB0YXJnZXQgc2VydmVyIGxpa2U6IGJhY2tkb29yIENTRUNcIik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNjYW5BbGwobnMsIHN0YXJ0LCB0YXJnZXQsIHBhdGgpIHtcclxuICAgIHZhciBjb25uZWN0ZWRIb3N0cyA9IG5zLnNjYW4oc3RhcnQpO1xyXG4gICAgdmFyIGZpbmFsUGF0aCA9IG51bGw7XHJcbiAgICBmb3IgKHZhciBob3N0IG9mIGNvbm5lY3RlZEhvc3RzKSB7XHJcbiAgICAgICAgaWYgKCFwYXRoLmluY2x1ZGVzKGhvc3QpKSB7XHJcbiAgICAgICAgICAgIHBhdGgucHVzaChob3N0KTtcclxuICAgICAgICAgICAgaWYgKGhvc3QgPT09IHRhcmdldCkge1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoXCJGb3VuZCBwYXRoOiBcIiArIHBhdGgpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcGF0aDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmaW5hbFBhdGggPSBzY2FuQWxsKG5zLCBob3N0LCB0YXJnZXQsIHBhdGgpO1xyXG4gICAgICAgICAgICBpZiAoZmluYWxQYXRoICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmaW5hbFBhdGg7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyB3ZSBkaWQgbm90IGZpbmQgdGhlIHRhcmdldCBmb2xsb3dpbnQgdGhlIG5ldHdvcmsgbWFwIG9mIHRoaXMgc2VydmVyLlxyXG4gICAgICAgICAgICAgICAgcGF0aC5wb3AoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=\",\"filename\":\"old/backdoor.js\",\"server\":\"home\"}}],[\"old/crime.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    ns.disableLog(\\\"disableLog\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    ns.tail(\\\"crime.js\\\");\\n    while (true) {\\n        ns.print(\\\"\\\");\\n        var crimeTime = commitCrime(ns);\\n        await ns.sleep(crimeTime);\\n    }\\n}\\nfunction commitCrime(ns, combatStatsGoal = 75) {\\n    // Calculate the risk value of all crimes\\n    var player = ns.getPlayer();\\n    ns.print(\\\"Karma: \\\" + ns.heart.break().toFixed(2));\\n    ns.print(\\\"Kills: \\\" + player.numPeopleKilled);\\n    var bestCrime = \\\"\\\";\\n    var bestCrimeValue = 0;\\n    var bestCrimeStats = {};\\n    for (let crime of crimes) {\\n        let crimeChance = ns.getCrimeChance(crime);\\n        var crimeStats = ns.getCrimeStats(crime);\\n        if (crimeChance < 0.6 && bestCrimeValue > 0) {\\n            continue;\\n        }\\n        if (crime == \\\"Assassination\\\" && player.numPeopleKilled < 30 && crimeChance > 0.98) {\\n            bestCrime = \\\"Assassination\\\";\\n            bestCrimeStats = crimeStats;\\n            break;\\n        }\\n        else if (crime == \\\"Homicide\\\" && player.numPeopleKilled < 30 && crimeChance > 0.98) {\\n            bestCrime = \\\"Homicide\\\";\\n            bestCrimeStats = crimeStats;\\n            break;\\n        }\\n        var crimeValue = 0;\\n        crimeValue = crimeStats.karma * 60000;\\n        crimeValue = crimeValue * crimeChance / ((crimeStats.time + 10));\\n        if (crimeValue > bestCrimeValue) {\\n            bestCrime = crime;\\n            bestCrimeValue = crimeValue;\\n            bestCrimeStats = crimeStats;\\n        }\\n    }\\n    ns.commitCrime(bestCrime);\\n    ns.print(\\\"Crime value \\\" + ns.nFormat(bestCrimeValue, \\\"0.0a\\\") + \\\" for \\\" + bestCrime);\\n    return bestCrimeStats.time + 10;\\n}\\nvar crimes = [\\\"Shoplift\\\", \\\"RobStore\\\", \\\"Mug\\\", \\\"Larceny\\\", \\\"Deal Drugs\\\", \\\"Bond Forgery\\\", \\\"Traffick Arms\\\", \\\"Homicide\\\",\\n    \\\"Grand Theft Auto\\\", \\\"Kidnap\\\", \\\"Assassination\\\", \\\"Heist\\\"];\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JpbWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvb2xkL2NyaW1lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLEVBQUUsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDNUIsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN2QixFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BCLE9BQU8sSUFBSSxFQUFFO1FBQ1QsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNiLElBQUksU0FBUyxHQUFHLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNoQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7S0FDN0I7QUFDTCxDQUFDO0FBRUQsU0FBUyxXQUFXLENBQUMsRUFBRSxFQUFFLGVBQWUsR0FBRyxFQUFFO0lBQ3pDLHlDQUF5QztJQUN6QyxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDNUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsRCxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUM7SUFFN0MsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ25CLElBQUksY0FBYyxHQUFHLENBQUMsQ0FBQztJQUN2QixJQUFJLGNBQWMsR0FBRyxFQUFFLENBQUM7SUFDeEIsS0FBSyxJQUFJLEtBQUssSUFBSSxNQUFNLEVBQUU7UUFDdEIsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQyxJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLElBQUksV0FBVyxHQUFHLEdBQUcsSUFBSSxjQUFjLEdBQUcsQ0FBQyxFQUFFO1lBQ3pDLFNBQVM7U0FDWjtRQUNELElBQUksS0FBSyxJQUFJLGVBQWUsSUFBSSxNQUFNLENBQUMsZUFBZSxHQUFHLEVBQUUsSUFBSSxXQUFXLEdBQUcsSUFBSSxFQUFFO1lBQy9FLFNBQVMsR0FBRyxlQUFlLENBQUM7WUFDNUIsY0FBYyxHQUFHLFVBQVUsQ0FBQztZQUM1QixNQUFNO1NBQ1Q7YUFBTSxJQUFJLEtBQUssSUFBSSxVQUFVLElBQUksTUFBTSxDQUFDLGVBQWUsR0FBRyxFQUFFLElBQUksV0FBVyxHQUFHLElBQUksRUFBRTtZQUNqRixTQUFTLEdBQUcsVUFBVSxDQUFDO1lBQ3ZCLGNBQWMsR0FBRyxVQUFVLENBQUM7WUFDNUIsTUFBTTtTQUNUO1FBQ0QsSUFBSSxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBRW5CLFVBQVUsR0FBRyxVQUFVLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUN0QyxVQUFVLEdBQUcsVUFBVSxHQUFHLFdBQVcsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2pFLElBQUksVUFBVSxHQUFHLGNBQWMsRUFBRTtZQUM3QixTQUFTLEdBQUcsS0FBSyxDQUFDO1lBQ2xCLGNBQWMsR0FBRyxVQUFVLENBQUM7WUFDNUIsY0FBYyxHQUFHLFVBQVUsQ0FBQztTQUMvQjtLQUNKO0lBRUQsRUFBRSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUUxQixFQUFFLENBQUMsS0FBSyxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxNQUFNLENBQUMsR0FBRyxPQUFPLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDcEYsT0FBTyxjQUFjLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUNwQyxDQUFDO0FBRUQsSUFBSSxNQUFNLEdBQUcsQ0FBQyxVQUFVLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxlQUFlLEVBQUUsVUFBVTtJQUM3RyxrQkFBa0IsRUFBRSxRQUFRLEVBQUUsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgbnMuZGlzYWJsZUxvZyhcImRpc2FibGVMb2dcIik7XHJcbiAgICBucy5kaXNhYmxlTG9nKFwic2xlZXBcIik7XHJcbiAgICBucy50YWlsKFwiY3JpbWUuanNcIik7XHJcbiAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgIG5zLnByaW50KFwiXCIpO1xyXG4gICAgICAgIHZhciBjcmltZVRpbWUgPSBjb21taXRDcmltZShucyk7XHJcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoY3JpbWVUaW1lKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gY29tbWl0Q3JpbWUobnMsIGNvbWJhdFN0YXRzR29hbCA9IDc1KSB7XHJcbiAgICAvLyBDYWxjdWxhdGUgdGhlIHJpc2sgdmFsdWUgb2YgYWxsIGNyaW1lc1xyXG4gICAgdmFyIHBsYXllciA9IG5zLmdldFBsYXllcigpO1xyXG4gICAgbnMucHJpbnQoXCJLYXJtYTogXCIgKyBucy5oZWFydC5icmVhaygpLnRvRml4ZWQoMikpO1xyXG4gICAgbnMucHJpbnQoXCJLaWxsczogXCIgKyBwbGF5ZXIubnVtUGVvcGxlS2lsbGVkKTtcclxuXHJcbiAgICB2YXIgYmVzdENyaW1lID0gXCJcIjtcclxuICAgIHZhciBiZXN0Q3JpbWVWYWx1ZSA9IDA7XHJcbiAgICB2YXIgYmVzdENyaW1lU3RhdHMgPSB7fTtcclxuICAgIGZvciAobGV0IGNyaW1lIG9mIGNyaW1lcykge1xyXG4gICAgICAgIGxldCBjcmltZUNoYW5jZSA9IG5zLmdldENyaW1lQ2hhbmNlKGNyaW1lKTtcclxuICAgICAgICB2YXIgY3JpbWVTdGF0cyA9IG5zLmdldENyaW1lU3RhdHMoY3JpbWUpO1xyXG4gICAgICAgIGlmIChjcmltZUNoYW5jZSA8IDAuNiAmJiBiZXN0Q3JpbWVWYWx1ZSA+IDApIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjcmltZSA9PSBcIkFzc2Fzc2luYXRpb25cIiAmJiBwbGF5ZXIubnVtUGVvcGxlS2lsbGVkIDwgMzAgJiYgY3JpbWVDaGFuY2UgPiAwLjk4KSB7XHJcbiAgICAgICAgICAgIGJlc3RDcmltZSA9IFwiQXNzYXNzaW5hdGlvblwiO1xyXG4gICAgICAgICAgICBiZXN0Q3JpbWVTdGF0cyA9IGNyaW1lU3RhdHM7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoY3JpbWUgPT0gXCJIb21pY2lkZVwiICYmIHBsYXllci5udW1QZW9wbGVLaWxsZWQgPCAzMCAmJiBjcmltZUNoYW5jZSA+IDAuOTgpIHtcclxuICAgICAgICAgICAgYmVzdENyaW1lID0gXCJIb21pY2lkZVwiO1xyXG4gICAgICAgICAgICBiZXN0Q3JpbWVTdGF0cyA9IGNyaW1lU3RhdHM7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgY3JpbWVWYWx1ZSA9IDA7XHJcblxyXG4gICAgICAgIGNyaW1lVmFsdWUgPSBjcmltZVN0YXRzLmthcm1hICogNjAwMDA7XHJcbiAgICAgICAgY3JpbWVWYWx1ZSA9IGNyaW1lVmFsdWUgKiBjcmltZUNoYW5jZSAvICgoY3JpbWVTdGF0cy50aW1lICsgMTApKTtcclxuICAgICAgICBpZiAoY3JpbWVWYWx1ZSA+IGJlc3RDcmltZVZhbHVlKSB7XHJcbiAgICAgICAgICAgIGJlc3RDcmltZSA9IGNyaW1lO1xyXG4gICAgICAgICAgICBiZXN0Q3JpbWVWYWx1ZSA9IGNyaW1lVmFsdWU7XHJcbiAgICAgICAgICAgIGJlc3RDcmltZVN0YXRzID0gY3JpbWVTdGF0cztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbnMuY29tbWl0Q3JpbWUoYmVzdENyaW1lKTtcclxuXHJcbiAgICBucy5wcmludChcIkNyaW1lIHZhbHVlIFwiICsgbnMubkZvcm1hdChiZXN0Q3JpbWVWYWx1ZSwgXCIwLjBhXCIpICsgXCIgZm9yIFwiICsgYmVzdENyaW1lKTtcclxuICAgIHJldHVybiBiZXN0Q3JpbWVTdGF0cy50aW1lICsgMTA7XHJcbn1cclxuXHJcbnZhciBjcmltZXMgPSBbXCJTaG9wbGlmdFwiLCBcIlJvYlN0b3JlXCIsIFwiTXVnXCIsIFwiTGFyY2VueVwiLCBcIkRlYWwgRHJ1Z3NcIiwgXCJCb25kIEZvcmdlcnlcIiwgXCJUcmFmZmljayBBcm1zXCIsIFwiSG9taWNpZGVcIixcclxuICAgIFwiR3JhbmQgVGhlZnQgQXV0b1wiLCBcIktpZG5hcFwiLCBcIkFzc2Fzc2luYXRpb25cIiwgXCJIZWlzdFwiXTsiXX0=\",\"filename\":\"old/crime.js\",\"server\":\"home\"}}],[\"old/deploy-jackxx.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    ns.disableLog(\\\"ALL\\\");\\n    // This script will recursively copy a weaken script to all servers, and run it. against itself with the maximum amount of threads possible.\\n    // This is designed to run a manager script on the home server, which deploys this script to all servers, and then runs it.\\n    // The manager script should also run a script on the home server to monitor the number of running instances of this script, and restart it if it goes down.\\n    // This will allow you to run the maximum amount of threads possible, without having to manually manage them.\\n    // This is useful for farming the BitNode-4 servers, and is designed to be run on them.\\n    // To use this script, run the manager script on the home server, and then run this script.\\n    // The manager script will automatically deploy this script to all servers, and then run them.\\n    // This script will then run on all servers, and will run a weaken script on itself.\\n    // You can also run this script manually on a server, and it will recursively copy the weaken script to all servers, and then run it.\\n    // If you do this, you will have to manually manage the number of threads you are running.\\n    var threads = ns.args[0];\\n    if (!threads) {\\n        threads = 1;\\n    }\\n    var target = ns.args[1];\\n    if (!target) {\\n        target = ns.getHostname();\\n    }\\n    ns.print(\\\"Running \\\" + threads + \\\" threads on \\\" + target);\\n    var servers = getAllServers(ns);\\n    if (servers.indexOf(target) === -1) {\\n        ns.print(\\\"ERROR: Target server \\\" + target + \\\" not found\\\");\\n        return;\\n    }\\n    var scriptRam = ns.getScriptRam(\\\"weaken.js\\\");\\n    var serverRam = ns.getServerMaxRam(target);\\n    var availableRam = serverRam - ns.getServerUsedRam(target);\\n    var maxThreads = Math.floor(availableRam / scriptRam);\\n    ns.print(\\\"Max threads: \\\" + maxThreads);\\n    if (maxThreads < threads) {\\n        ns.print(\\\"ERROR: Not enough RAM to run \\\" + threads + \\\" threads on \\\" + target);\\n        return;\\n    }\\n    for (let server of servers) {\\n        ns.scp(\\\"weaken.js\\\", server);\\n    }\\n    for (let i = 0; i < threads; i++) {\\n        var t = ns.exec(\\\"weaken.js\\\", target, 1);\\n        ns.print(\\\"Started thread \\\" + t + \\\" on \\\" + target);\\n    }\\n    ns.print(\\\"Done\\\");\\n}\\nfunction getAllServers(ns) {\\n    var q = [];\\n    var serverDiscovered = [];\\n    q.push(\\\"home\\\");\\n    serverDiscovered[\\\"home\\\"] = true;\\n    while (q.length) {\\n        let v = q.shift();\\n        let edges = ns.scan(v);\\n        for (let i = 0; i < edges.length; i++) {\\n            if (!serverDiscovered[edges[i]]) {\\n                serverDiscovered[edges[i]] = true;\\n                q.push(edges[i]);\\n            }\\n        }\\n    }\\n    //delete serverDiscovered[\\\"home\\\"];\\n    return Object.keys(serverDiscovered);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwbG95LWphY2t4eC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9vbGQvZGVwbG95LWphY2t4eC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixFQUFFLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JCLDRJQUE0STtJQUM1SSwySEFBMkg7SUFDM0gsNEpBQTRKO0lBQzVKLDZHQUE2RztJQUM3Ryx1RkFBdUY7SUFDdkYsMkZBQTJGO0lBQzNGLDhGQUE4RjtJQUM5RixvRkFBb0Y7SUFDcEYscUlBQXFJO0lBQ3JJLDBGQUEwRjtJQUMxRixJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pCLElBQUksQ0FBQyxPQUFPLEVBQUU7UUFDVixPQUFPLEdBQUcsQ0FBQyxDQUFDO0tBQ2Y7SUFDRCxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hCLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxNQUFNLEdBQUcsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO0tBQzdCO0lBQ0QsRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsT0FBTyxHQUFHLGNBQWMsR0FBRyxNQUFNLENBQUMsQ0FBQztJQUN6RCxJQUFJLE9BQU8sR0FBRyxhQUFhLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDaEMsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1FBQ2hDLEVBQUUsQ0FBQyxLQUFLLENBQUMsdUJBQXVCLEdBQUcsTUFBTSxHQUFHLFlBQVksQ0FBQyxDQUFDO1FBQzFELE9BQU87S0FDVjtJQUNELElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDN0MsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzQyxJQUFJLFlBQVksR0FBRyxTQUFTLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQzFELElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUFHLFNBQVMsQ0FBQyxDQUFDO0lBQ3RELEVBQUUsQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZDLElBQUksVUFBVSxHQUFHLE9BQU8sRUFBRTtRQUN0QixFQUFFLENBQUMsS0FBSyxDQUFDLCtCQUErQixHQUFHLE9BQU8sR0FBRyxjQUFjLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFDOUUsT0FBTztLQUNWO0lBQ0QsS0FBSyxJQUFJLE1BQU0sSUFBSSxPQUFPLEVBQUU7UUFDeEIsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDL0I7SUFDRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzlCLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN4QyxFQUFFLENBQUMsS0FBSyxDQUFDLGlCQUFpQixHQUFHLENBQUMsR0FBRyxNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUM7S0FDckQ7SUFDRCxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3JCLENBQUM7QUFFRCxTQUFTLGFBQWEsQ0FBQyxFQUFFO0lBQ3JCLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNYLElBQUksZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0lBRTFCLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDZixnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7SUFFaEMsT0FBTyxDQUFDLENBQUMsTUFBTSxFQUFFO1FBQ2IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBRWxCLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFdkIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDbkMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUM3QixnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7Z0JBQ2xDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDcEI7U0FDSjtLQUNKO0lBQ0Qsa0NBQWtDO0lBQ2xDLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBucy5kaXNhYmxlTG9nKFwiQUxMXCIpO1xyXG4gICAgLy8gVGhpcyBzY3JpcHQgd2lsbCByZWN1cnNpdmVseSBjb3B5IGEgd2Vha2VuIHNjcmlwdCB0byBhbGwgc2VydmVycywgYW5kIHJ1biBpdC4gYWdhaW5zdCBpdHNlbGYgd2l0aCB0aGUgbWF4aW11bSBhbW91bnQgb2YgdGhyZWFkcyBwb3NzaWJsZS5cclxuICAgIC8vIFRoaXMgaXMgZGVzaWduZWQgdG8gcnVuIGEgbWFuYWdlciBzY3JpcHQgb24gdGhlIGhvbWUgc2VydmVyLCB3aGljaCBkZXBsb3lzIHRoaXMgc2NyaXB0IHRvIGFsbCBzZXJ2ZXJzLCBhbmQgdGhlbiBydW5zIGl0LlxyXG4gICAgLy8gVGhlIG1hbmFnZXIgc2NyaXB0IHNob3VsZCBhbHNvIHJ1biBhIHNjcmlwdCBvbiB0aGUgaG9tZSBzZXJ2ZXIgdG8gbW9uaXRvciB0aGUgbnVtYmVyIG9mIHJ1bm5pbmcgaW5zdGFuY2VzIG9mIHRoaXMgc2NyaXB0LCBhbmQgcmVzdGFydCBpdCBpZiBpdCBnb2VzIGRvd24uXHJcbiAgICAvLyBUaGlzIHdpbGwgYWxsb3cgeW91IHRvIHJ1biB0aGUgbWF4aW11bSBhbW91bnQgb2YgdGhyZWFkcyBwb3NzaWJsZSwgd2l0aG91dCBoYXZpbmcgdG8gbWFudWFsbHkgbWFuYWdlIHRoZW0uXHJcbiAgICAvLyBUaGlzIGlzIHVzZWZ1bCBmb3IgZmFybWluZyB0aGUgQml0Tm9kZS00IHNlcnZlcnMsIGFuZCBpcyBkZXNpZ25lZCB0byBiZSBydW4gb24gdGhlbS5cclxuICAgIC8vIFRvIHVzZSB0aGlzIHNjcmlwdCwgcnVuIHRoZSBtYW5hZ2VyIHNjcmlwdCBvbiB0aGUgaG9tZSBzZXJ2ZXIsIGFuZCB0aGVuIHJ1biB0aGlzIHNjcmlwdC5cclxuICAgIC8vIFRoZSBtYW5hZ2VyIHNjcmlwdCB3aWxsIGF1dG9tYXRpY2FsbHkgZGVwbG95IHRoaXMgc2NyaXB0IHRvIGFsbCBzZXJ2ZXJzLCBhbmQgdGhlbiBydW4gdGhlbS5cclxuICAgIC8vIFRoaXMgc2NyaXB0IHdpbGwgdGhlbiBydW4gb24gYWxsIHNlcnZlcnMsIGFuZCB3aWxsIHJ1biBhIHdlYWtlbiBzY3JpcHQgb24gaXRzZWxmLlxyXG4gICAgLy8gWW91IGNhbiBhbHNvIHJ1biB0aGlzIHNjcmlwdCBtYW51YWxseSBvbiBhIHNlcnZlciwgYW5kIGl0IHdpbGwgcmVjdXJzaXZlbHkgY29weSB0aGUgd2Vha2VuIHNjcmlwdCB0byBhbGwgc2VydmVycywgYW5kIHRoZW4gcnVuIGl0LlxyXG4gICAgLy8gSWYgeW91IGRvIHRoaXMsIHlvdSB3aWxsIGhhdmUgdG8gbWFudWFsbHkgbWFuYWdlIHRoZSBudW1iZXIgb2YgdGhyZWFkcyB5b3UgYXJlIHJ1bm5pbmcuXHJcbiAgICB2YXIgdGhyZWFkcyA9IG5zLmFyZ3NbMF07XHJcbiAgICBpZiAoIXRocmVhZHMpIHtcclxuICAgICAgICB0aHJlYWRzID0gMTtcclxuICAgIH1cclxuICAgIHZhciB0YXJnZXQgPSBucy5hcmdzWzFdO1xyXG4gICAgaWYgKCF0YXJnZXQpIHtcclxuICAgICAgICB0YXJnZXQgPSBucy5nZXRIb3N0bmFtZSgpO1xyXG4gICAgfVxyXG4gICAgbnMucHJpbnQoXCJSdW5uaW5nIFwiICsgdGhyZWFkcyArIFwiIHRocmVhZHMgb24gXCIgKyB0YXJnZXQpO1xyXG4gICAgdmFyIHNlcnZlcnMgPSBnZXRBbGxTZXJ2ZXJzKG5zKTtcclxuICAgIGlmIChzZXJ2ZXJzLmluZGV4T2YodGFyZ2V0KSA9PT0gLTEpIHtcclxuICAgICAgICBucy5wcmludChcIkVSUk9SOiBUYXJnZXQgc2VydmVyIFwiICsgdGFyZ2V0ICsgXCIgbm90IGZvdW5kXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHZhciBzY3JpcHRSYW0gPSBucy5nZXRTY3JpcHRSYW0oXCJ3ZWFrZW4uanNcIik7XHJcbiAgICB2YXIgc2VydmVyUmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHRhcmdldCk7XHJcbiAgICB2YXIgYXZhaWxhYmxlUmFtID0gc2VydmVyUmFtIC0gbnMuZ2V0U2VydmVyVXNlZFJhbSh0YXJnZXQpXHJcbiAgICB2YXIgbWF4VGhyZWFkcyA9IE1hdGguZmxvb3IoYXZhaWxhYmxlUmFtIC8gc2NyaXB0UmFtKTtcclxuICAgIG5zLnByaW50KFwiTWF4IHRocmVhZHM6IFwiICsgbWF4VGhyZWFkcyk7XHJcbiAgICBpZiAobWF4VGhyZWFkcyA8IHRocmVhZHMpIHtcclxuICAgICAgICBucy5wcmludChcIkVSUk9SOiBOb3QgZW5vdWdoIFJBTSB0byBydW4gXCIgKyB0aHJlYWRzICsgXCIgdGhyZWFkcyBvbiBcIiArIHRhcmdldCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgZm9yIChsZXQgc2VydmVyIG9mIHNlcnZlcnMpIHtcclxuICAgICAgICBucy5zY3AoXCJ3ZWFrZW4uanNcIiwgc2VydmVyKTtcclxuICAgIH1cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhyZWFkczsgaSsrKSB7XHJcbiAgICAgICAgdmFyIHQgPSBucy5leGVjKFwid2Vha2VuLmpzXCIsIHRhcmdldCwgMSk7XHJcbiAgICAgICAgbnMucHJpbnQoXCJTdGFydGVkIHRocmVhZCBcIiArIHQgKyBcIiBvbiBcIiArIHRhcmdldCk7XHJcbiAgICB9XHJcbiAgICBucy5wcmludChcIkRvbmVcIik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldEFsbFNlcnZlcnMobnMpIHtcclxuICAgIHZhciBxID0gW107XHJcbiAgICB2YXIgc2VydmVyRGlzY292ZXJlZCA9IFtdO1xyXG5cclxuICAgIHEucHVzaChcImhvbWVcIik7XHJcbiAgICBzZXJ2ZXJEaXNjb3ZlcmVkW1wiaG9tZVwiXSA9IHRydWU7XHJcblxyXG4gICAgd2hpbGUgKHEubGVuZ3RoKSB7XHJcbiAgICAgICAgbGV0IHYgPSBxLnNoaWZ0KCk7XHJcblxyXG4gICAgICAgIGxldCBlZGdlcyA9IG5zLnNjYW4odik7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWRnZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKCFzZXJ2ZXJEaXNjb3ZlcmVkW2VkZ2VzW2ldXSkge1xyXG4gICAgICAgICAgICAgICAgc2VydmVyRGlzY292ZXJlZFtlZGdlc1tpXV0gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgcS5wdXNoKGVkZ2VzW2ldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vZGVsZXRlIHNlcnZlckRpc2NvdmVyZWRbXCJob21lXCJdO1xyXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHNlcnZlckRpc2NvdmVyZWQpO1xyXG59Il19\",\"filename\":\"old/deploy-jackxx.js\",\"server\":\"home\"}}],[\"old/gang.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    ns.disableLog(\\\"ALL\\\");\\n    if (!ns.gang.inGang()) {\\n        joinGang(ns);\\n    }\\n    var territoryWinChance = 1;\\n    while (true) {\\n        recruit(ns);\\n        equipMembers(ns);\\n        ascend(ns);\\n        territoryWinChance = territoryWar(ns);\\n        assignMembers(ns, territoryWinChance);\\n        await ns.sleep(2000);\\n    }\\n}\\nfunction territoryWar(ns) {\\n    const minWinChanceToStartWar = 0.8;\\n    let gangInfo = ns.gang.getGangInformation();\\n    // ns.print(\\\"Territory: \\\" + gangInfo.territory);\\n    // sometimes territory is stuck at something like 99.99999999999983%\\n    // since clash chance takes time to decrease anyways, should not be an issue to stop a bit before 100,000000%\\n    if (gangInfo.territory < 0.9999) {\\n        let otherGangInfos = ns.gang.getOtherGangInformation();\\n        let myGangPower = gangInfo.power;\\n        //ns.print(\\\"My gang power: \\\" + myGangPower);\\n        let lowestWinChance = 1;\\n        for (const otherGang of combatGangs.concat(hackingGangs)) {\\n            if (otherGang == gangInfo.faction) {\\n                continue;\\n            }\\n            else if (otherGangInfos[otherGang].territory <= 0) {\\n                continue;\\n            }\\n            else {\\n                let otherGangPower = otherGangInfos[otherGang].power;\\n                let winChance = myGangPower / (myGangPower + otherGangPower);\\n                lowestWinChance = Math.min(lowestWinChance, winChance);\\n            }\\n        }\\n        if (lowestWinChance > minWinChanceToStartWar) {\\n            if (!gangInfo.territoryWarfareEngaged) {\\n                ns.print(\\\"WARN start territory warfate\\\");\\n                ns.toast(\\\"Start territory warfare\\\");\\n                ns.gang.setTerritoryWarfare(true);\\n            }\\n            ns.print(\\\"Territory win chance: \\\" + lowestWinChance);\\n        }\\n        return lowestWinChance;\\n    }\\n    if (gangInfo.territoryWarfareEngaged) {\\n        ns.print(\\\"WARN stop territory warfate\\\");\\n        ns.toast(\\\"Stop territory warfare\\\");\\n        ns.gang.setTerritoryWarfare(false);\\n    }\\n    return 1;\\n}\\nfunction ascend(ns) {\\n    let members = ns.gang.getMemberNames();\\n    for (let member of members) {\\n        let memberInfo = ns.gang.getMemberInformation(member);\\n        let memberCombatStats = (memberInfo.str + memberInfo.def + memberInfo.dex + memberInfo.agi) / 4;\\n        //ns.print(\\\"Member combat stats: \\\" + memberCombatStats);\\n        let memberAscensionMultiplier = (memberInfo.agi_asc_mult + memberInfo.def_asc_mult + memberInfo.dex_asc_mult + memberInfo.str_asc_mult) / 4;\\n        //ns.print(\\\"Member ascension multiplier: \\\" + memberAscensionMultiplier);\\n        let memberAscensionResult = ns.gang.getAscensionResult(member);\\n        if (memberAscensionResult != undefined) {\\n            let memberAscensionResultMultiplier = (memberAscensionResult.agi + memberAscensionResult.def + memberAscensionResult.dex + memberAscensionResult.str) / 4;\\n            //ns.print(\\\"Member ascension result: \\\" + memberNewAscensionMultiplier);\\n            if ((memberAscensionResultMultiplier > 1.3)) {\\n                ns.print(\\\"Ascent gang member \\\" + member);\\n                ns.gang.ascendMember(member);\\n            }\\n        }\\n    }\\n}\\nfunction equipMembers(ns) {\\n    let members = ns.gang.getMemberNames();\\n    for (let member of members) {\\n        let memberInfo = ns.gang.getMemberInformation(member);\\n        if (memberInfo.augmentations.length < augmentationNames.length) {\\n            for (let augmentation of augmentationNames) {\\n                if (ns.gang.getEquipmentCost(augmentation) < (0.01 * ns.getServerMoneyAvailable(\\\"home\\\"))) {\\n                    ns.print(\\\"Purchase augmentation for \\\" + member + \\\": \\\" + augmentation);\\n                    ns.gang.purchaseEquipment(member, augmentation);\\n                }\\n            }\\n        }\\n    }\\n}\\nfunction assignMembers(ns, territoryWinChance) {\\n    let members = ns.gang.getMemberNames();\\n    members.sort((a, b) => memberCombatStats(ns, b) - memberCombatStats(ns, a));\\n    let gangInfo = ns.gang.getGangInformation();\\n    let workJobs = Math.floor((members.length) / 2);\\n    let wantedLevelIncrease = 0;\\n    for (let member of members) {\\n        let highestTaskValue = 0;\\n        let highestValueTask = \\\"Train Combat\\\";\\n        let memberInfo = ns.gang.getMemberInformation(member);\\n        if (workJobs > 0 && gangInfo.territory < 1 && members.length >= 12 && territoryWinChance < 0.95) {\\n            // support territory warfare if max team size, not at max territory yet and win chance not high enough yet\\n            workJobs--;\\n            highestValueTask = \\\"Territory Warfare\\\";\\n        }\\n        else if (memberCombatStats(ns, member) < 50) {\\n            highestValueTask = \\\"Train Combat\\\";\\n        }\\n        else if (workJobs >= 0 && wantedLevelIncrease > 0) {\\n            workJobs--;\\n            highestValueTask = \\\"Vigilante Justice\\\";\\n            //ns.print(\\\"Wanted Level for Vigilante: \\\" + ns.formulas.gang.wantedLevelGain(gangInfo, ns.gang.getMemberInformation(member), ns.gang.getTaskStats(highestValueTask)))\\n            wantedLevelIncrease += ns.formulas.gang.wantedLevelGain(gangInfo, ns.gang.getMemberInformation(member), ns.gang.getTaskStats(highestValueTask));\\n        }\\n        else if (workJobs > 0 && memberCombatStats(ns, member) > 50) {\\n            workJobs--;\\n            for (const task of tasks) {\\n                if (taskValue(ns, gangInfo, member, task) > highestTaskValue) {\\n                    highestTaskValue = taskValue(ns, gangInfo, member, task);\\n                    highestValueTask = task;\\n                }\\n            }\\n            wantedLevelIncrease += ns.formulas.gang.wantedLevelGain(gangInfo, ns.gang.getMemberInformation(member), ns.gang.getTaskStats(highestValueTask));\\n            //ns.print(\\\"Wanted Level for Increase: \\\" + ns.formulas.gang.wantedLevelGain(gangInfo, ns.gang.getMemberInformation(member), ns.gang.getTaskStats(highestValueTask)))\\n        }\\n        if (memberInfo.task != highestValueTask) {\\n            ns.print(\\\"Assign \\\" + member + \\\" to \\\" + highestValueTask);\\n            ns.gang.setMemberTask(member, highestValueTask);\\n        }\\n    }\\n}\\nfunction taskValue(ns, gangInfo, member, task) {\\n    // determine money and reputation gain for a task\\n    let respectGain = ns.formulas.gang.respectGain(gangInfo, ns.gang.getMemberInformation(member), ns.gang.getTaskStats(task));\\n    let moneyGain = ns.formulas.gang.moneyGain(gangInfo, ns.gang.getMemberInformation(member), ns.gang.getTaskStats(task));\\n    let wantedLevelIncrease = ns.formulas.gang.wantedLevelGain(gangInfo, ns.gang.getMemberInformation(member), ns.gang.getTaskStats(task));\\n    let vigilanteWantedDecrease = ns.formulas.gang.wantedLevelGain(gangInfo, ns.gang.getMemberInformation(member), ns.gang.getTaskStats(\\\"Vigilante Justice\\\"));\\n    if (wantedLevelIncrease + vigilanteWantedDecrease > 0) {\\n        // avoid tasks where more than one vigilante justice is needed to compensate\\n        return 0;\\n    }\\n    else if ((2 * wantedLevelIncrease) + vigilanteWantedDecrease > 0) {\\n        // Simple compensation for wanted level since we need more vigilante then\\n        // ToDo: Could be a more sophisticated formula here\\n        moneyGain *= 0.75;\\n    }\\n    if (ns.getServerMoneyAvailable(\\\"home\\\") > 10e12) {\\n        // if we got all augmentations, money from gangs is probably not relevant anymore; so focus on respect\\n        // set money gain at least to respect gain in case of low money gain tasks like terrorism\\n        moneyGain /= 100; // compare money to respect gain value; give respect more priority\\n        moneyGain = Math.max(moneyGain, respectGain);\\n    }\\n    // return a value based on money gain and respect gain\\n    return respectGain * moneyGain;\\n}\\nfunction memberCombatStats(ns, member) {\\n    let memberInfo = ns.gang.getMemberInformation(member);\\n    return (memberInfo.str + memberInfo.def + memberInfo.dex + memberInfo.agi) / 4;\\n}\\nfunction recruit(ns) {\\n    if (ns.gang.canRecruitMember()) {\\n        let members = ns.gang.getMemberNames();\\n        let memberName = \\\"Thug-\\\" + members.length;\\n        ns.print(\\\"Recruit new gang member \\\" + memberName);\\n        ns.gang.recruitMember(memberName);\\n    }\\n}\\nfunction joinGang(ns) {\\n    for (const myGang of combatGangs) {\\n        if (ns.gang.createGang(myGang)) {\\n            return;\\n        }\\n    }\\n}\\nconst tasks = [\\\"Mug People\\\", \\\"Deal Drugs\\\", \\\"Strongarm Civilians\\\", \\\"Run a Con\\\", \\\"Armed Robbery\\\", \\\"Traffick Illegal Arms\\\", \\\"Threaten & Blackmail\\\", \\\"Human Trafficking\\\", \\\"Terrorism\\\"];\\nconst augmentationNames = [\\\"Bionic Arms\\\", \\\"Bionic Legs\\\", \\\"Bionic Spine\\\", \\\"BrachiBlades\\\", \\\"Nanofiber Weave\\\", \\\"Synthetic Heart\\\", \\\"Synfibril Muscle\\\", \\\"Graphene Bone Lacings\\\", \\\"BitWire\\\", \\\"Neuralstimulator\\\", \\\"DataJack\\\"];\\nconst combatGangs = [\\\"Speakers for the Dead\\\", \\\"The Dark Army\\\", \\\"The Syndicate\\\", \\\"Tetrads\\\", \\\"Slum Snakes\\\"];\\nconst hackingGangs = [\\\"NiteSec\\\", \\\"The Black Hand\\\"];\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"old/gang.js\",\"server\":\"home\"}}],[\"old/getServers.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copies files in file list to all servers and returns an array of all servers\\n */\\nexport function getAllServers(ns) {\\n    var q = [];\\n    var serverDiscovered = [];\\n    q.push(\\\"home\\\");\\n    serverDiscovered[\\\"home\\\"] = true;\\n    while (q.length) {\\n        let v = q.shift();\\n        let edges = ns.scan(v);\\n        for (let i = 0; i < edges.length; i++) {\\n            if (!serverDiscovered[edges[i]]) {\\n                serverDiscovered[edges[i]] = true;\\n                q.push(edges[i]);\\n            }\\n        }\\n    }\\n    //delete serverDiscovered[\\\"home\\\"];\\n    return Object.keys(serverDiscovered);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U2VydmVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9vbGQvZ2V0U2VydmVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQUMsRUFBRTtJQUM1QixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDWCxJQUFJLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztJQUUxQixDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2YsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBRWhDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRTtRQUNiLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUVsQixJQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXZCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ25DLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDN0IsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO2dCQUNsQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BCO1NBQ0o7S0FDSjtJQUNELGtDQUFrQztJQUNsQyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUN6QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcGllcyBmaWxlcyBpbiBmaWxlIGxpc3QgdG8gYWxsIHNlcnZlcnMgYW5kIHJldHVybnMgYW4gYXJyYXkgb2YgYWxsIHNlcnZlcnNcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRBbGxTZXJ2ZXJzKG5zKSB7XHJcbiAgICB2YXIgcSA9IFtdO1xyXG4gICAgdmFyIHNlcnZlckRpc2NvdmVyZWQgPSBbXTtcclxuXHJcbiAgICBxLnB1c2goXCJob21lXCIpO1xyXG4gICAgc2VydmVyRGlzY292ZXJlZFtcImhvbWVcIl0gPSB0cnVlO1xyXG5cclxuICAgIHdoaWxlIChxLmxlbmd0aCkge1xyXG4gICAgICAgIGxldCB2ID0gcS5zaGlmdCgpO1xyXG5cclxuICAgICAgICBsZXQgZWRnZXMgPSBucy5zY2FuKHYpO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVkZ2VzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmICghc2VydmVyRGlzY292ZXJlZFtlZGdlc1tpXV0pIHtcclxuICAgICAgICAgICAgICAgIHNlcnZlckRpc2NvdmVyZWRbZWRnZXNbaV1dID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHEucHVzaChlZGdlc1tpXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvL2RlbGV0ZSBzZXJ2ZXJEaXNjb3ZlcmVkW1wiaG9tZVwiXTtcclxuICAgIHJldHVybiBPYmplY3Qua2V5cyhzZXJ2ZXJEaXNjb3ZlcmVkKTtcclxufSJdfQ==\",\"filename\":\"old/getServers.js\",\"server\":\"home\"}}],[\"old/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    await ns.sleep(ns.args[1]);\\n    const server = ns.args[0];\\n    if (ns.args.length >= 3) {\\n        await ns.grow(server, { stock: ns.args[2] });\\n    }\\n    else {\\n        await ns.grow(server);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9vbGQvZ3Jvdy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBRTVCLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFM0IsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUUxQixJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtRQUN4QixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQzdDO1NBQ0k7UUFDSixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDdEI7QUFDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuXHJcblx0YXdhaXQgbnMuc2xlZXAobnMuYXJnc1sxXSk7XHJcblxyXG5cdGNvbnN0IHNlcnZlciA9IG5zLmFyZ3NbMF07XHJcblxyXG5cdGlmIChucy5hcmdzLmxlbmd0aCA+PSAzKSB7XHJcblx0XHRhd2FpdCBucy5ncm93KHNlcnZlciwgeyBzdG9jazogbnMuYXJnc1syXSB9KTtcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRhd2FpdCBucy5ncm93KHNlcnZlcik7XHJcblx0fVxyXG59Il19\",\"filename\":\"old/grow.js\",\"server\":\"home\"}}],[\"old/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    await ns.sleep(ns.args[1]);\\n    const server = ns.args[0];\\n    if (ns.args.length >= 3) {\\n        await ns.hack(server, { stock: ns.args[2] });\\n    }\\n    else {\\n        await ns.hack(server);\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9vbGQvaGFjay5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBRTVCLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFM0IsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUUxQixJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtRQUN4QixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQzdDO1NBQ0k7UUFDSixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDdEI7QUFFRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuXHJcblx0YXdhaXQgbnMuc2xlZXAobnMuYXJnc1sxXSk7XHJcblxyXG5cdGNvbnN0IHNlcnZlciA9IG5zLmFyZ3NbMF07XHJcblxyXG5cdGlmIChucy5hcmdzLmxlbmd0aCA+PSAzKSB7XHJcblx0XHRhd2FpdCBucy5oYWNrKHNlcnZlciwgeyBzdG9jazogbnMuYXJnc1syXSB9KTtcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRhd2FpdCBucy5oYWNrKHNlcnZlcik7XHJcblx0fVxyXG5cclxufSJdfQ==\",\"filename\":\"old/hack.js\",\"server\":\"home\"}}],[\"old/jackxx.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// file: distributed-hack.js\\n// Detailed explanation at the end of the file.\\n// hack severs for this much of their money\\n// the money ratio is increased and decreased automatically, starting with this value initially\\nvar hackMoneyRatio = 0.1;\\n// the maximum numberof parallel burst attacks against one server\\n// the value of this variable should not make a big difference however\\nvar maxParallelAttacks = 50;\\n// time to wait between checking and calculating new attacks (in ms)\\nconst waitTimeBetweenManagementCycles = 1000;\\n// time difference between finishing [ hack - grow - weaken ] in burst attacks (in ms)\\nconst timeDiff = 200;\\n// time between burst attacks. Needs to be bigger than 2 * time diff (in ms)\\nconst timeBetweenAttacks = 500;\\n// Potential issue with burst attack timing:\\n// Hacking skill might increase after launching them while hack / grow wait before they start.\\n// Execution time is calculated when launching the attack but can decrease with higher hacking skill.\\n// Thus fast growing hacking skill can get burst attacks out of sync. In such situations it's steamrolling mode anyways, so who cares...\\n// Higher time diff / between attacks reduce this issue plus reduce the load on the real CPU running the game\\n// RAM requirement of the slave scripts for weak, grow & hack\\n// actually it's 1.7 for hack and 1.75 for weak & grow. Let's always use 1.75 for simpicity\\n// hard-coded to save RAM by not having to get ram via ns function\\nconst slaveScriptRam = 1.75;\\n// names of the slave scripts\\nconst weakenScriptName = \\\"weaken.js\\\";\\nconst growScriptName = \\\"grow.js\\\";\\nconst hackScriptName = \\\"hack.js\\\";\\nconst shareScriptName = \\\"share.js\\\";\\nconst shareScriptRam = 4;\\n// list of slave script files\\nconst files = [weakenScriptName, growScriptName, hackScriptName];\\n// Backdoor script hooked in (requires singluarity functions SF4.1)\\nconst singularityFunctionsAvailable = true;\\nconst backdoorScript = \\\"backdoor.js\\\";\\nconst backdoorScriptRam = 5.8;\\n// Solve Contract Script hooked in\\nconst solveContractsScript = \\\"solve-contracts.js\\\";\\nconst solveContractsScriptRam = 22;\\n// global variable to track ongoing partial weak or grow attacks\\nvar partialWeakGrow = null; // do not change this\\n// global variable to track amount of recent partial attacks\\nvar partialAttacks = 1;\\n// hard-coded values to save RAM by not using ns functions ...AnalyzeSecurity()\\nconst growThreadSecurityIncrease = 0.004;\\nconst hackThreadSecurityIncrease = 0.002;\\nvar profitsm = new Map();\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    // Disable default Logging\\n    ns.disableLog(\\\"ALL\\\");\\n    // automatically backdoor these servers. Requires singularity functions.\\n    var backdoorServers = new Set([\\\"CSEC\\\", \\\"I.I.I.I\\\", \\\"avmnite-02h\\\", \\\"run4theh111z\\\", \\\"clarkinc\\\", \\\"nwo\\\", \\\"omnitek\\\", \\\"fulcrumtech\\\", \\\"fulcrumassets\\\", \\\"w0r1d_d43m0n\\\"]);\\n    var servers;\\n    var targets;\\n    var freeRams;\\n    var ramUsage;\\n    // initially set hackMoneyRatio based on progress measured by home server RAM\\n    var homeRam = ns.getServerMaxRam(\\\"home\\\");\\n    if (homeRam >= 65536) {\\n        hackMoneyRatio = 0.99;\\n        ns.tprint(\\\"Increase hackMoneyRatio to \\\" + hackMoneyRatio);\\n    }\\n    else if (homeRam >= 16384) {\\n        hackMoneyRatio = 0.9;\\n        ns.tprint(\\\"Increase hackMoneyRatio to \\\" + hackMoneyRatio);\\n    }\\n    else if (homeRam > 8192) {\\n        hackMoneyRatio = 0.5;\\n        ns.tprint(\\\"Increase hackMoneyRatio to \\\" + hackMoneyRatio);\\n    }\\n    else if (homeRam > 2048) {\\n        hackMoneyRatio = 0.2;\\n        ns.tprint(\\\"Increase hackMoneyRatio to \\\" + hackMoneyRatio);\\n    }\\n    ns.print(\\\"INFO initial hack money ratio: \\\" + hackMoneyRatio);\\n    var growStocks = new Set();\\n    var hackStocks = new Set();\\n    var moneyXpShare = false;\\n    var shareThreadIndex = 0;\\n    while (true) {\\n        // scan and nuke all accesible servers\\n        servers = await scanAndNuke(ns);\\n        // ns.print(`servers:${[...servers.values()]}`)\\n        for (var server of servers) {\\n            // transfer files to the servers\\n            await ns.scp(files, \\\"home\\\", server);\\n            // ToDo: Not efficient to loop through all servers always. Could be optimized to track which server was optimized and scp only once.\\n            // backdoor faction servers automatically requires singularity module\\n            // modify singularityFunctionsAvailable at the top to de- / activate\\n            if (singularityFunctionsAvailable == true) {\\n                for (var backdoorServer of backdoorServers.values()) {\\n                    if (server == backdoorServer) {\\n                        if (ns.getServerRequiredHackingLevel(server) <= ns.getHackingLevel()) {\\n                            const homeMaxRam = ns.getServerMaxRam(\\\"home\\\");\\n                            const homeUsedRam = ns.getServerUsedRam(\\\"home\\\");\\n                            const homeFreeRam = homeMaxRam - homeUsedRam;\\n                            if (homeFreeRam >= backdoorScriptRam) {\\n                                const backdoorSuccess = ns.exec(backdoorScript, \\\"home\\\", 1, server);\\n                                ns.print(\\\"INFO backdoor on \\\" + server + \\\" - \\\" + backdoorSuccess);\\n                                backdoorServers.delete(backdoorServer);\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        // find servers with free RAM and calculate free RAM for each plus overall available RAM\\n        freeRams = getFreeRam(ns, servers);\\n        //ns.tprint(`freeRams:${freeRams.map(value => JSON.stringify(value))}`)\\n        // filter servers for those which we can hack and sort them\\n        targets = getHackable(ns, servers);\\n        // ns.print(`targets:${[...targets.values()]}`)\\n        // update servers for stock market manipulation\\n        growStocks = getStockPortContent(ns, 1, growStocks); // port 1 is grow\\n        hackStocks = getStockPortContent(ns, 2, hackStocks); // port 2 is hack\\n        var portHandle = ns.getPortHandle(3); // port 3 is player control currenty for money + xpWeaken, money + share or share only\\n        //var firstPortElement = portHandle.peek();\\n        if (!portHandle.empty()) {\\n            // hack for money and experience: money-xp\\n            // hack for money and faction reputation: money-share\\n            // hack for faction reputation only: share-only\\n            moneyXpShare = portHandle.read();\\n        }\\n        // Main logic sits here, determine whether or not and how many threads we should call weaken, grow and hack\\n        var attacksLaunched = manageAndHack(ns, freeRams, servers, targets, growStocks, hackStocks);\\n        if (attacksLaunched > 0) {\\n            // Adjust hackMoneyRatio\\n            ramUsage = (freeRams.overallMaxRam - freeRams.overallFreeRam) / freeRams.overallMaxRam;\\n            //ns.print(\\\"Partial attacks: \\\" + partialAttacks);\\n            //ns.print(\\\"RAM usage: \\\" + ramUsage);\\n            if (partialAttacks == 0 && ramUsage < 0.95 && hackMoneyRatio < 0.99) {\\n                hackMoneyRatio += (1 - hackMoneyRatio) * (1 - ramUsage) * attacksLaunched;\\n                if (hackMoneyRatio > 0.99) {\\n                    hackMoneyRatio = 0.99;\\n                }\\n                ns.print(\\\"INFO increase hack money ratio to: \\\" + hackMoneyRatio.toFixed(2));\\n            }\\n            else if (partialAttacks > 4 && ramUsage > 0.9 && hackMoneyRatio > 0.01) {\\n                hackMoneyRatio -= hackMoneyRatio / 10;\\n                if (hackMoneyRatio < 0.01) {\\n                    hackMoneyRatio = 0.01;\\n                }\\n                partialAttacks = 3;\\n                ns.print(\\\"INFO decrease hack money ratio to: \\\" + hackMoneyRatio.toFixed(2));\\n            }\\n        }\\n        // Hook for solve contracts script here if enough RAM is free.\\n        const homeMaxRam = ns.getServerMaxRam(\\\"home\\\");\\n        const homeUsedRam = ns.getServerUsedRam(\\\"home\\\");\\n        const homeFreeRam = homeMaxRam - homeUsedRam;\\n        if (homeFreeRam > solveContractsScriptRam) {\\n            //ns.print(\\\"INFO checking for contracts to solve\\\");\\n            ns.exec(solveContractsScript, \\\"home\\\");\\n        }\\n        if (moneyXpShare && hackMoneyRatio >= 0.99) {\\n            const maxRam = ns.getServerMaxRam(\\\"home\\\");\\n            const usedRam = ns.getServerUsedRam(\\\"home\\\");\\n            var freeRam = maxRam - usedRam;\\n            var shareThreads = Math.floor(freeRam / shareScriptRam);\\n            if (shareThreads > 0) {\\n                ns.print(\\\"INFO share threads \\\" + shareThreads);\\n                ns.exec(shareScriptName, \\\"home\\\", shareThreads, shareThreadIndex);\\n                if (shareThreadIndex > 9) {\\n                    shareThreadIndex = 0;\\n                }\\n                else {\\n                    shareThreadIndex++;\\n                }\\n                freeRams.overallFreeRam -= shareThreads * shareScriptRam;\\n            }\\n        }\\n        // if lots of RAM to spare and money is not an issue, spam weak attacks for hacking XP gain\\n        if (ramUsage < 0.8 && hackMoneyRatio >= 0.99) {\\n            xpWeaken(ns, freeRams, servers, targets);\\n            ramUsage = (freeRams.overallMaxRam - freeRams.overallFreeRam) / freeRams.overallMaxRam;\\n        }\\n        //ns.print(\\\"INFO RAM utilization: \\\" + Math.round(ramUsage * 100) + \\\" % \\\");\\n        await ns.sleep(waitTimeBetweenManagementCycles);\\n    }\\n}\\nfunction manageAndHack(ns, freeRams, servers, targets, growStocks, hackStocks) {\\n    var attacksLaunched = 0;\\n    for (let target of targets) {\\n        // check if there is already an attack against this target ongoing\\n        if (attackOngoing(ns, servers, target) == true) {\\n            // skip the target if there is already an attack ongoing because\\n            // we cannot determine a perfect attack strategy without interfering with the ongoing attack\\n            continue;\\n        }\\n        const minSec = ns.getServerMinSecurityLevel(target);\\n        const sec = ns.getServerSecurityLevel(target);\\n        var addedGrowSecurity = 0;\\n        var addedHackSecurity = 0;\\n        var money = ns.getServerMoneyAvailable(target);\\n        const maxMoney = ns.getServerMaxMoney(target);\\n        var weakThreads = 0;\\n        var growThreads = 0;\\n        var hackThreads = 0;\\n        var secDiff = sec - minSec;\\n        if (secDiff < 0.5) {\\n            // server is near min security. Go ahead with grow or hack.\\n            if (money < 1) {\\n                // ensure money > 0 to prevent division by zero or hackAnalyze zero\\n                // just in case a server was 100% hacked with no money left\\n                money = 1;\\n            }\\n            var initialGrowRatio = maxMoney / money;\\n            var hackReGrowRatio = 1;\\n            var overallGrowRatio = 1;\\n            // hack if near max money (no substantial growth needed)\\n            if (initialGrowRatio < 1.1) {\\n                hackThreads = Math.floor(ns.hackAnalyzeThreads(target, hackMoneyRatio * money));\\n                //ns.print(\\\"Hack threads: \\\" + hackThreads);\\n                // the grow ratio needed after the hack. Example: 50% of max money requires to grow by a factor of 2\\n                // also consinder initial missing money difference\\n                // expected grow ratio needed to re-grow the hacked money after hack\\n                hackReGrowRatio = 1 / (1 - hackMoneyRatio);\\n                addedHackSecurity = hackThreads * hackThreadSecurityIncrease;\\n            }\\n            else {\\n                //ns.print(\\\"WARN initial grow ratio: \\\" + initialGrowRatio + \\\" on target \\\" + target);\\n            }\\n            // grow what was missing before and what we expect to hack\\n            // multiply the initial grow ratio by the expected new grow ratio needed after hack\\n            overallGrowRatio = initialGrowRatio * hackReGrowRatio;\\n            // compensate reduced grow effect in WGH after H due to security increase\\n            overallGrowRatio *= (sec + addedHackSecurity) / sec;\\n            // Considering 0 cores on all serers.\\n            // The last parameter 0 can be removed if optimizing for running slave threads on home server with > 0 cores only\\n            // else, grow threads onother servers than home will not grow sufficiently and break perfect attack chains\\n            growThreads = Math.ceil((ns.growthAnalyze(target, overallGrowRatio, 1)));\\n            addedGrowSecurity = growThreads * growThreadSecurityIncrease;\\n        }\\n        else {\\n            //ns.print(\\\"INFO Initial security difference: \\\" + secDiff);\\n        }\\n        weakThreads = Math.ceil((secDiff + addedGrowSecurity + addedHackSecurity) * 20);\\n        var overallRamNeed = ((weakThreads + growThreads + hackThreads) * slaveScriptRam);\\n        //ns.tprint(\\\"partialWeakGrow: \\\" + partialWeakGrow + \\\" target: \\\" + target);\\n        var weakTime = ns.getWeakenTime(target);\\n        var growTime = ns.getGrowTime(target);\\n        var hackTime = ns.getHackTime(target);\\n        var maxPercentage = 1;\\n        var parallelAttacks = 1;\\n        if (overallRamNeed > freeRams.overallFreeRam) {\\n            // only attack if there is no other partial attack ongoing or if we want to hack.\\n            // this is to spend RAM on hacking, while not initially weakening and growing servers we would not hack yet anyways\\n            // early money is useful for server purchases to speed up RAM gain\\n            // prevent partially weakening / growing multiple servers in parallel. Focus on few servers initially.\\n            if (partialAttacks < 9) {\\n                //ns.print(\\\"incerase partial attacks \\\" + partialAttacks)\\n                partialAttacks++;\\n            }\\n            maxPercentage = freeRams.overallFreeRam / overallRamNeed;\\n            if (partialWeakGrow == null || partialWeakGrow == target || hackThreads > 0) {\\n                if (hackThreads > 0) {\\n                    if (maxPercentage < 0.05) {\\n                        //ns.print(\\\"INFO skip small attack on \\\" + target);\\n                        // too small attacks are not efficient, let's wait until we can at least perform 5 % of a full attack\\n                        //ns.print(\\\"INFO skip because low RAM for attack on \\\" + target);\\n                        continue;\\n                    }\\n                    // we only have enough RAM for maxPercentage of our hack Threads.\\n                    var reducedHackMoneyRatio = hackMoneyRatio * maxPercentage;\\n                    // in case we were not at max servermoney, also consider RAM neeed for initial growth on the target\\n                    // reduce hack money ratio to not run out of RAM\\n                    reducedHackMoneyRatio /= initialGrowRatio;\\n                    // TODO: Let's ignore initial security weaken RAM need for the calculation for now.\\n                    // If RAM calculation throws warnings, wecould check for that or live with it.\\n                    // TODO: This calculation is not optimal since growth is not linear.\\n                    // Example: With 50% of the hack threads, we need less than 50% of the grow threads,\\n                    //      so we could hack for more than * maxPercentage\\n                    // => we leave a negligible small percentage of the RAM unused.\\n                    hackThreads = Math.floor(ns.hackAnalyzeThreads(target, reducedHackMoneyRatio * money));\\n                    if (hackThreads < 1) {\\n                        hackThreads = 1;\\n                    }\\n                    //ns.print(\\\"Reduced hack threads: \\\" + hackThreads)\\n                    addedHackSecurity = hackThreads * hackThreadSecurityIncrease;\\n                    hackReGrowRatio = 1 / (1 - reducedHackMoneyRatio);\\n                    overallGrowRatio = initialGrowRatio * hackReGrowRatio;\\n                    growThreads = Math.floor((ns.growthAnalyze(target, overallGrowRatio, 1)));\\n                    addedGrowSecurity = growThreads * growThreadSecurityIncrease;\\n                    weakThreads = Math.floor((secDiff + addedGrowSecurity + addedHackSecurity) * 20);\\n                    //if (hackThreads < 1 || weakThreads < 1) {\\n                    // we planned to hack but we have so small free RAM that it got divided and rounded down to zero\\n                    // abort to not waste resources\\n                    //return;\\n                    //}\\n                    if (partialWeakGrow == target) {\\n                        // if we ran a partial weak/grow before and could do a full one now, reset partial attack\\n                        partialWeakGrow = null;\\n                    }\\n                    //ns.print(\\\"INFO \\\" + maxPercentage.toFixed(1) + \\\" WGH \\\" + target + \\\" \\\" + weakThreads + \\\" | \\\" + growThreads + \\\" | \\\" + hackThreads);\\n                }\\n                else { //hackthreads == 0\\n                    growThreads = Math.floor(growThreads * maxPercentage);\\n                    addedGrowSecurity = growThreads * growThreadSecurityIncrease;\\n                    weakThreads = Math.floor((secDiff + addedGrowSecurity) * 20);\\n                    if ((growThreads < 1 || weakThreads < 1) && secDiff < 0.5) {\\n                        // not an attack to initially weaken and got divided and rounded down to zero due to low RAM\\n                        break;\\n                    }\\n                    // we have only enough RAM to partially grow this target\\n                    partialWeakGrow = target;\\n                    //ns.print(\\\"INFO \\\" + maxPercentage.toFixed(1) + \\\"  GW \\\" + target + \\\" \\\" + weakThreads + \\\" | \\\" + growThreads + \\\" | \\\" + hackThreads);\\n                }\\n            }\\n            else {\\n                // no good partial attack strategy found for this target.\\n                //ns.print(\\\"INFO low RAM - no partial attack on \\\" + target + \\\" hack \\\" + hackThreads);\\n                //ns.print(\\\"INFO partialWeakGrow: \\\" + partialWeakGrow);\\n                continue;\\n            }\\n        }\\n        else if (hackThreads == 0) {\\n            // regular attack\\n            //ns.print(\\\"INFO 1    GW \\\" + target + \\\" \\\" + weakThreads + \\\" | \\\" + growThreads + \\\" | \\\" + hackThreads);\\n            if (partialWeakGrow == target) {\\n                // if we ran a partial weak/grow before and could do a full one now, reset partial attack\\n                partialWeakGrow = null;\\n            }\\n        }\\n        else { // enough RAM for at least full attack with hack\\n            if (partialWeakGrow == target) {\\n                // if we ran a partial weak/grow before and could do a full one now, reset partial attack\\n                partialWeakGrow = null;\\n            }\\n            if (partialAttacks > 0) {\\n                //ns.print(\\\"Decrease partial attacks \\\" + partialAttacks);\\n                partialAttacks--;\\n            }\\n            // try to run multiple attacks in parallel against the target if enough RAM available\\n            var maxAttacksDuringHack = Math.floor((weakTime - timeBetweenAttacks) / timeBetweenAttacks);\\n            var moreRamNeed = 0;\\n            for (parallelAttacks = 1; parallelAttacks < maxAttacksDuringHack; parallelAttacks++) {\\n                // do not run parallel attacks if running partial or low percentage attacks\\n                if (hackMoneyRatio < 0.5) {\\n                    break;\\n                }\\n                // check if we have enough RAM for one more attack\\n                moreRamNeed = ((weakThreads * (parallelAttacks + 1) + growThreads * (parallelAttacks + 1) +\\n                    hackThreads * (parallelAttacks + 1)) * slaveScriptRam);\\n                if (moreRamNeed >= freeRams.overallFreeRam) {\\n                    // we do not have enough RAM for more attacks\\n                    break;\\n                }\\n                else if (parallelAttacks >= maxParallelAttacks) {\\n                    // check if max parallel attacks have been limited by global variable\\n                    break;\\n                }\\n                else if (parallelAttacks >= maxAttacksDuringHack) {\\n                    // check if max parallel attacks have been limited\\n                    break;\\n                }\\n                else if ((freeRams.overallFreeRam / freeRams.overallMaxRam < 0.1 || partialAttacks > 2) && (partialWeakGrow != null || freeRams.overallMaxRam < 512)) {\\n                    // if we are low on RAM, go for single attacks for better efficiency\\n                    break;\\n                }\\n                // increment parallel attacks via for loop\\n            }\\n            //ns.print(\\\"INFO \\\" + parallelAttacks + \\\"   WGH \\\" + target + \\\" \\\" + weakThreads + \\\" | \\\" + growThreads + \\\" | \\\" + hackThreads);\\n        }\\n        // re-calculate overall RAM need after scaling full attacs down or up\\n        overallRamNeed = ((weakThreads + growThreads + hackThreads) * slaveScriptRam) * parallelAttacks;\\n        if (overallRamNeed > freeRams.overallFreeRam) {\\n            // Typically, there should be enough RAM for the planned attack. Warn if not.\\n            ns.print(\\\"WARN RAM calculation issue for target: \\\" + target + \\\" need / free: \\\" + overallRamNeed + \\\" / \\\" + freeRams.overallFreeRam);\\n        }\\n        freeRams.overallFreeRam -= overallRamNeed;\\n        // by default, no sleep time for threads\\n        var weakSleep = 0;\\n        var growSleep = 0;\\n        var hackSleep = 0;\\n        // calculate sleep times for threads in one attack in case of multiple parallel attacks against one target\\n        // weaken is always longest and hack always shortest\\n        // we need to finish hack, then grow, then weaken with gaps of timeDiff ms\\n        // weak is always has 0 sleep difference within one attack\\n        if (parallelAttacks > 1) {\\n            // grow should finish timediff ms before weaken finishes\\n            growSleep = (weakTime - growTime) - timeDiff;\\n            if (growSleep < 0) {\\n                // make sure that we do not get negative sleep value in case of crazy low execution times\\n                // in this case, tweak time between attacks and time diff\\n                ns.print(\\\"WARN: time synchronisation issue for parallel attacks\\\");\\n                growSleep = 0;\\n                parallelAttacks = 1;\\n            }\\n            hackSleep = (weakTime - hackTime) - 2 * timeDiff;\\n            if (hackSleep < 0) {\\n                // make sure that we do not get negative sleep value in case of crazy low execution times\\n                // in this case, tweak time between attacks and time diff\\n                hackSleep = 0;\\n                growSleep = 0;\\n                parallelAttacks = 1;\\n                ns.print(\\\"WARN time synchronisation issue for parallel attacks\\\");\\n            }\\n            if (hackThreads == 0) {\\n                ns.print(\\\"WARN \\\" + parallelAttacks + \\\" parallel attacks with hack threads = \\\" + hackThreads);\\n            }\\n        }\\n        // var profit = money * maxPercentage * ns.hackAnalyzeChance(target) / (hackThreads + growThreads + weakThreads);\\n        // Could use hackAnalyzeChance for better value rating - costs ram however\\n        var profit = money * maxPercentage / (hackThreads + growThreads + weakThreads);\\n        var profitM = profit * 60 / weakTime;\\n        profitsm.set(target, profitM);\\n        if (parallelAttacks <= 1) {\\n            ns.print(\\\"INFO \\\" + maxPercentage.toFixed(1) + \\\" WGH \\\" + target + \\\" \\\" + weakThreads + \\\" | \\\" + growThreads + \\\" | \\\" + hackThreads + \\\" | $/t/s \\\" + profitM.toFixed(2));\\n        }\\n        else {\\n            ns.print(\\\"INFO \\\" + parallelAttacks + \\\"   WGH \\\" + target + \\\" \\\" + weakThreads + \\\" | \\\" + growThreads + \\\" | \\\" + hackThreads + \\\" | $/t/s \\\" + profitM.toFixed(2));\\n        }\\n        var growStock = growStocks.has(target);\\n        var hackStock = hackStocks.has(target);\\n        if (growStock) {\\n            ns.print(\\\"INFO GRW stock \\\" + target);\\n        }\\n        if (hackStock) {\\n            ns.print(\\\"INFO HCK stock \\\" + target);\\n        }\\n        for (var i = 0; i < parallelAttacks; i++) {\\n            if (hackThreads > 0) {\\n                if (!findPlaceToRun(ns, hackScriptName, hackThreads, freeRams.serverRams, target, hackSleep, hackStock)) {\\n                    ns.print(\\\"WARN Did not find a place to run hack \\\" + target + \\\" needs \\\" + overallRamNeed);\\n                }\\n            }\\n            if (weakThreads > 0) {\\n                if (!findPlaceToRun(ns, weakenScriptName, weakThreads, freeRams.serverRams, target, weakSleep)) {\\n                    ns.print(\\\"WARN Did not find a place to run weaken \\\" + target + \\\" needs \\\" + overallRamNeed);\\n                }\\n            }\\n            if (growThreads > 0) {\\n                if (!findPlaceToRun(ns, growScriptName, growThreads, freeRams.serverRams, target, growSleep, growStock)) {\\n                    ns.print(\\\"WARN Did not find a place to run grow \\\" + target + \\\" needs \\\" + overallRamNeed);\\n                }\\n            }\\n            weakSleep += timeBetweenAttacks;\\n            growSleep += timeBetweenAttacks;\\n            hackSleep += timeBetweenAttacks;\\n            attacksLaunched++;\\n        }\\n    }\\n    return attacksLaunched;\\n}\\nfunction xpWeaken(ns, freeRams, servers, targets) {\\n    // let weken threads for XP farming sleep for this amount of ms\\n    // Needed to discriminate from regular weaken threads (with sleep 0)\\n    // other weaken threads should never sleep for 1 ms\\n    const xpWeakSleep = 1;\\n    const playerHackingLevel = ns.getHackingLevel();\\n    targets.sort((a, b) => weakenXPgainCompare(ns, playerHackingLevel, a) - weakenXPgainCompare(ns, playerHackingLevel, b));\\n    for (let target of targets) {\\n        if (xpAttackOngoing(ns, servers, target, xpWeakSleep) == false) {\\n            // we have free RAM for this many weak threads\\n            var weakThreads = freeRams.overallFreeRam / slaveScriptRam;\\n            // however, do not use all of it, only use a part of it to leave some buffer for the hack threads\\n            weakThreads = Math.floor(weakThreads * 0.6);\\n            if (weakThreads > 0) {\\n                ns.print(\\\"WARN XP weaken attack on \\\" + target + \\\" with \\\" + weakThreads);\\n                if (!findPlaceToRun(ns, weakenScriptName, weakThreads, freeRams.serverRams, target, xpWeakSleep)) {\\n                    ns.print(\\\"WARN Did not find a place to run XP weaken \\\" + target);\\n                }\\n                return;\\n            }\\n        }\\n    }\\n}\\nfunction weakenXPgainCompare(ns, playerHackingLevel, target) {\\n    // not actual XP, but the factor to calculate it\\n    const xpPerWeaken = ((playerHackingLevel - ns.getServerRequiredHackingLevel(target)) / playerHackingLevel);\\n    const xpPerTime = xpPerWeaken / ns.getWeakenTime(target);\\n    return xpPerTime;\\n}\\n// find some place to run the script with given amount of threads\\n// returns true means script was executed, false means it didnt\\nfunction findPlaceToRun(ns, script, threads, freeRams, target, sleepTime, manipulateStock = false) {\\n    while (freeRams.length > 0) {\\n        // try with first availiable host\\n        var host = freeRams[0].host;\\n        var ram = freeRams[0].freeRam;\\n        // if not enough ram on host to even run 1 thread, remove the host from list\\n        if (ram < slaveScriptRam) {\\n            freeRams.shift();\\n            // else if the ram on the host is not enough to run all threads, just run as much as it can\\n        }\\n        else if (ram < slaveScriptRam * threads) {\\n            const threadForThisHost = Math.floor(ram / slaveScriptRam);\\n            if (manipulateStock) {\\n                ns.exec(script, host, threadForThisHost, target, sleepTime, manipulateStock);\\n            }\\n            else {\\n                ns.exec(script, host, threadForThisHost, target, sleepTime);\\n            }\\n            threads -= threadForThisHost;\\n            freeRams.shift();\\n        }\\n        else { // enough RAM on this host to run all threads\\n            if (manipulateStock) {\\n                ns.exec(script, host, threads, target, sleepTime, manipulateStock);\\n            }\\n            else {\\n                ns.exec(script, host, threads, target, sleepTime);\\n            }\\n            freeRams[0].freeRam -= slaveScriptRam * threads;\\n            return true;\\n        }\\n    }\\n    // we did not find enough RAM to run all remaining threads. Something went from in the RAM calculation\\n    ns.print(\\\"WARN missing \\\" + slaveScriptRam * threads + \\\" for \\\" + script + \\\" RAM for target \\\" + target);\\n    return false;\\n}\\n// check whether there is already an attack against a target ongoing\\nfunction attackOngoing(ns, servers, target) {\\n    var weakSleep = 0;\\n    for (let server of servers.values()) {\\n        for (let parallelAttack = 0; parallelAttack < maxParallelAttacks; parallelAttack++) {\\n            // we know the sleep time for weaken threads (not easy to obtain for grow and hack)\\n            // checking for weak threads is sufficient to determine if attack is ongoing sonce they take longest\\n            // since weaken takes longest always and we always have weaken in our attacks, no weaken -> no attack ongoing\\n            weakSleep = parallelAttack * timeBetweenAttacks;\\n            let weakenRunning = ns.isRunning(weakenScriptName, server, target, weakSleep);\\n            //let growScript = ns.getRunningScript(growScriptName, server, hackable);\\n            //let hackScript = ns.getRunningScript(hackScriptName, server, hackable);\\n            if (weakenRunning == true) {\\n                // there are running weaken threads against the target\\n                if (weakSleep == 1) {\\n                    ns.tprint(\\\"Weaksleep 1 found!\\\");\\n                }\\n                return true;\\n            }\\n        }\\n    }\\n    // we did not find running weaken threads against the target on the servers\\n    return false;\\n}\\n// check whether there is already an attack against a target ongoing\\nfunction xpAttackOngoing(ns, servers, target, weakSleep) {\\n    for (let server of servers.values()) {\\n        let weakenRunning = ns.isRunning(weakenScriptName, server, target, weakSleep);\\n        if (weakenRunning == true) {\\n            // there are running weaken threads against the target\\n            return true;\\n        }\\n    }\\n    // we did not find running weaken threads against the target on the servers\\n    return false;\\n}\\n// filter and sort the list for hackable servers\\nfunction getHackable(ns, servers) {\\n    var sortedServers = [...servers.values()].filter(server => ns.getServerMaxMoney(server) > 100000\\n        && ns.getServerRequiredHackingLevel(server) <= ns.getHackingLevel()\\n        && ns.getServerGrowth(server) > 1 && server != \\\"n00dles\\\").sort((a, b) => profitsm[\\\"get\\\"](b) - profitsm[\\\"get\\\"](a));\\n    // unnatural usage of \\\"get\\\" to avoid stanek.get RAM calculation bug\\n    if (partialWeakGrow != null) {\\n        // prioritize a server which we have not initialized yet\\n        sortedServers.unshift(partialWeakGrow);\\n    }\\n    return sortedServers;\\n    //.sort((a, b) => 5 * ns.getServerMinSecurityLevel(a) - 5 * ns.getServerMinSecurityLevel(b)\\n    //    + ns.getServerGrowth(b) - ns.getServerGrowth(a))\\n    // TODO:\\n    // the sort here ranks the hackable servers by \\\"best server to hack\\\"\\n    // Up to now this is just an educated guess and this can be optimized\\n    // minSec determines the execution times and growth the needed grow threads.\\n    // not sure how to value these in comparison plus whether and how to consider max available money on a hackable server\\n}\\n// filter the list for servers where we can run script on\\nfunction getFreeRam(ns, servers) {\\n    var serverRams = [];\\n    var overallFreeRam = 0;\\n    var overallMaxRam = 0;\\n    for (let server of servers) {\\n        const maxRam = ns.getServerMaxRam(server);\\n        const usedRam = ns.getServerUsedRam(server);\\n        var freeRam = maxRam - usedRam;\\n        // round down to full hack slots\\n        freeRam = Math.floor(freeRam / slaveScriptRam) * slaveScriptRam;\\n        overallMaxRam += maxRam;\\n        if (freeRam >= slaveScriptRam) {\\n            serverRams.push({ host: server, freeRam: freeRam });\\n            overallFreeRam += freeRam;\\n        }\\n    }\\n    // deploy threads on servers with lots of free RAM first\\n    serverRams.sort((a, b) => b.freeRam - a.freeRam);\\n    // move home server to last position to keep RAM free for player stuff there\\n    serverRams.sort((a, b) => (a.host == \\\"home\\\") - (b.host == \\\"home\\\"));\\n    return { serverRams, overallFreeRam, overallMaxRam };\\n}\\n// scan all servers from home and nuke them if we can\\nasync function scanAndNuke(ns) {\\n    let servers = new Set([\\\"home\\\"]);\\n    scanAll(ns, \\\"home\\\", servers);\\n    var accessibleServers = new Set();\\n    for (let server of servers) {\\n        if (server.startsWith(\\\"hacknet-node\\\")) {\\n            continue;\\n        } // for BitNode 9 to permit hacking on the Hacknet Servers\\n        if (await ns.hasRootAccess(server)) {\\n            accessibleServers.add(server);\\n        }\\n        else {\\n            var portOpened = 0;\\n            if (await ns.fileExists(\\\"BruteSSH.exe\\\")) {\\n                await ns.brutessh(server);\\n                portOpened++;\\n            }\\n            if (await ns.fileExists(\\\"FTPCrack.exe\\\")) {\\n                await ns.ftpcrack(server);\\n                portOpened++;\\n            }\\n            if (await ns.fileExists(\\\"HTTPWorm.exe\\\")) {\\n                await ns.httpworm(server);\\n                portOpened++;\\n            }\\n            if (await ns.fileExists(\\\"relaySMTP.exe\\\")) {\\n                await ns.relaysmtp(server);\\n                portOpened++;\\n            }\\n            if (await ns.fileExists(\\\"SQLInject.exe\\\")) {\\n                await ns.sqlinject(server);\\n                portOpened++;\\n            }\\n            if (await ns.getServerNumPortsRequired(server) <= portOpened) {\\n                await ns.nuke(server);\\n                accessibleServers.add(server);\\n            }\\n        }\\n    }\\n    return accessibleServers;\\n}\\nfunction scanAll(ns, host, servers) {\\n    var hosts = ns.scan(host);\\n    for (let i = 0; i < hosts.length; i++) {\\n        if (!servers.has(hosts[i])) {\\n            servers.add(hosts[i]);\\n            scanAll(ns, hosts[i], servers);\\n        }\\n    }\\n}\\nexport function getStockPortContent(ns, portNumber, content) {\\n    var portHandle = ns.getPortHandle(portNumber);\\n    var firstPortElement = portHandle.peek();\\n    if (firstPortElement == \\\"NULL PORT DATA\\\") {\\n        // no new data available\\n        return content;\\n    }\\n    else if (firstPortElement == \\\"EMPTY\\\") {\\n        // \\\"EMPTY\\\" means that the list shall be set to empty\\n        portHandle.clear();\\n        return new Set();\\n    }\\n    else { // list shall be updated\\n        content = new Set();\\n        while (!portHandle.empty()) {\\n            content.add(portHandle.read());\\n        }\\n    }\\n    return content;\\n}\\n/*\\nDesign goals\\n\\n    Utilize as much of the available RAM as possible at all times\\n\\n    Utilize the RAM as efficiently as possible, which means only perfect attack patterns using different strategies and\\n\\n    Adapt to any situation automatically (early - late game)\\n\\nWGH attack patterns\\n\\nBaseline is one WGH pattern: (H)ack, Re-(G)row the money hacked and (W)eaken the security added. For a detailed description see Bitburner Hacking Algorithms. Anticipate the amount of grow and weaken needed for your hack beforehand. Deploy all three in parallel in specialized scripts on servers. Attack a server with min security and max money (weaken + grow initially).\\n\\nThe WGH pattern has one variable for tuning: The percentage of money hacked. Re-growth need does not scale linearly with hack: Twice the amount of hack threads requires more than twice the amount of grow threads. Thus it is more RAM efficient to hack for small percentages of money only; bigger attacks are less RAM efficient.\\n\\nThe basic WGH attack pattern can be scaled in two ways based on the amount of free RAM available:\\n\\n    Adjust the percentage of money to hack per WGH\\n\\n    Attack multiple servers in parallel\\n\\nSo early game, the optimal strategy is to continuously attack all possible servers in parallel with almost all available RAM using the WGH pattern with a low percentage of money hacked. If not enough RAM available for the intended percentage of money to hack, go for the biggest percentage possible.\\n\\nAlso note that hack threads finish way earlier than grow or weak threads. That means RAM which becomes available after hack finishes, while grow and weak are still running from one WGH pattern: That RAM can be used immediately for something else. Example:\\n\\n    Start \\\"WGH\\\" attack on server n00dles.\\n\\n    \\\"H\\\" finishes. Use that free RAM from \\\"H\\\" for WGH attack on server foodnstuff.\\n\\n    \\\"GW\\\" from noodles finish.\\n\\nWGH batch attack patterns\\n\\nAt some point in time there is enough RAM available to fully hack all servers perfectly for 99.9% of their money continuously. More RAM cannot be put to use. Now comes the next mechanic and variable for tuning into play: Batch WGH attacks. WGH batch attacks are timed so that H, G + W all finish within a short amount of time by delaying the start of H and G (W always takes longest). Using normal WGH attacks, you can attack once during the time W runs (often: minutes). With batch attacks which are timed to 1 second or less, you can attack one server once every second! (over-simplified [technical details], see later).\\n\\nBatch attacks are extremely powerful, why not use them always? Remember that regular WGH attacks free up RAM from finished H attacks that can be used already while the \\\"GW\\\" attack continues. Especially early-game, the majority of threads in an WGH pattern are hack threads (late game: grow). So while batch attacks can use up to 100% RAM, many threads will just wait for some time before they start - while blocking the RAM. So the RAM is not efficiently used (for just waiting).\\n\\nThus regular WGH attacks are optimal early-game until they cannot use more RAM anymore. Then batch attacks become the optimal strategy for utilizing more RAM.\\n\\nThe limit for batch attacks comes with the [technical details] mentioned in the over-simplification above: The targeted server needs to be at min sec when threads are started. So we cannot start any new attacks while running attacks are hitting the target. Example: An WGH execution time takes 10 seconds. We chain 9 attacks in parallel each with 1 second delay from the previous one. Then the 9 attacks are hitting for 10 seconds and during that time we cannot guarantee that the server has min security or max money. We need to wait until the running attack batch is finished before starting the next batch.\\n\\nSo batch attacks can scale up to a certain extent when run against all servers at maximum potential. Then, more RAM cannot be used anymore. At this point in time money income  will most likely be absurdly too much to spend. However the game might not be finished just with money. Another benefit of hacking is experience gain. So at later stages, experience gain can be increased by just spamming useless W attacks.\\n\\nOn top of that, the script features ports to receive hack or grow orders for certain servers in order to manipulate the stock market.\\nPotential weaknesses\\n\\n    Where is the rocket science about \\\"which is the best server to hack\\\"? It does matter, but not much with this strategy since we attack many servers simultaneously. Up to now a rather simple ranking function is used.\\n\\n    Depending on how big the impact of \\\"best\\\" vs \\\"worst\\\" servers to hack is, it might actually be more \\\"effective\\\" to \\\"inefficiently\\\" hack the \\\"best\\\" server than to \\\"efficiently\\\" hack all servers. Or in other words, batch attacking a high value server might be the better approach than single-attacking multiple servers.\\n\\n    This approach utilizes resources to initially weaken and grow all servers. So the money income starts slow early game while initializing servers without hacking them. To limit resources spent on initializing many servers in parallel and prioritize resources on hacking few servers (WGH), RAM utilization is sometimes not optimized early game on purpose. Approaches with faster money income ramp-up time can enable buying more servers faster for more RAM.\\n\\n    The dynamic situation analysis for continuously choosing and tuning the strategy is not too highly sophisticated. Tailoring an attack strategy for a certain situation and time interval can certainly beat the situation analysis here\\n\\n    This approach does not contribute anything while offline\\n\\nSummary\\n\\nThe optimal strategy depends on and changes with the situation.\\n\\n    Early game: Regular WGH attacks, scale with money hacked & multiple targets\\n\\n    Mid game: Switch from WGH to Batch attacks, scale with batch size & multiple targets\\n\\n    Late game: Use free RAM for spamming W to gain exp\\n*/ \\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"old/jackxx.js\",\"server\":\"home\"}}],[\"old/playerAction.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"const studyUntilHackLevel = 50;\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    ns.disableLog(\\\"ALL\\\");\\n    while (true) {\\n        ns.print(\\\"\\\");\\n        var sleepTime = 5000;\\n        var player = ns.getPlayer();\\n        getPrograms(ns, player);\\n        joinFactions(ns);\\n        buyAugments(ns, player);\\n        upgradeHomeServer(ns, player);\\n        var factionsForReputation = getFactionsForReputation(ns, player);\\n        ns.print(\\\"Factions for Reputation: \\\" + [...factionsForReputation.keys()]);\\n        var actionUseful = currentActionUseful(ns, player, factionsForReputation);\\n        ns.print(\\\"Current action useful: \\\" + actionUseful);\\n        if (!actionUseful) {\\n            sleepTime = chooseAction(ns, sleepTime, player, factionsForReputation);\\n        }\\n        ns.print(\\\"WorkFactionName: \\\" + player.currentWorkFactionName);\\n        ns.print(\\\"WorkFactionDescription: \\\" + player.currentWorkFactionDescription);\\n        ns.print(\\\"workType: \\\" + player.workType);\\n        ns.print(\\\"companyName: \\\" + player.companyName);\\n        ns.print(\\\"jobs: \\\" + JSON.stringify(player.jobs));\\n        //ns.print(\\\"Corps to work for: \\\" + getCorpsForReputation(factionsForReputation))\\n        //ns.print(\\\"sleep for \\\" + sleepTime + \\\" ms\\\")\\n        await ns.sleep(sleepTime);\\n    }\\n}\\nfunction upgradeHomeServer(ns, player) {\\n    //if (!player.has4SDataTixApi && player.money > 30e9) {\\n    // TODO: Consider moving this to the trading script, fits better there (and saves ram here)\\n    // ns.purchase4SMarketDataTixApi();\\n    //}\\n    if (player.money > ns.singularity.getUpgradeHomeRamCost()) {\\n        if (!player.factions.includes(\\\"CyberSec\\\") || ns.singularity.getUpgradeHomeRamCost() < 2e9\\n            || (player.has4SDataTixApi && ns.singularity.getUpgradeHomeRamCost() < 0.2 * player.money)) {\\n            // Upgrade slowly in the first run while we save money for 4S or the first batch of augmentations\\n            // Assumption: We wont't join Cybersec after the first run anymore\\n            // ToDo: Beautification: At Max Home Server Ram, it still tries to upgrade RAM -> prevent that\\n            ns.print(\\\"Upgraded Home Server RAM\\\");\\n            //ns.toast(\\\"Upgraded Home Server RAM\\\");\\n            ns.upgradeHomeRam();\\n        }\\n    }\\n}\\nfunction getPrograms(ns, player) {\\n    if (!player.tor) {\\n        if (player.money > 1700000) {\\n            ns.singularity.purchaseTor();\\n            ns.print(\\\"Purchased TOR\\\");\\n            ns.toast(\\\"Purchased TOR\\\");\\n        }\\n        else {\\n            return;\\n        }\\n    }\\n    ns.singularity.purchaseProgram(\\\"BruteSSH.exe\\\");\\n    ns.singularity.purchaseProgram(\\\"FTPCrack.exe\\\");\\n    ns.singularity.purchaseProgram(\\\"relaySMTP.exe\\\");\\n    if (player.has4SDataTixApi) {\\n        // do not buy more before 4s data access bought\\n        ns.singularity.purchaseProgram(\\\"HTTPWorm.exe\\\");\\n        ns.singularity.purchaseProgram(\\\"SQLInject.exe\\\");\\n    }\\n}\\nfunction chooseAction(ns, sleepTime, player, factions) {\\n    var focus = ns.isFocused();\\n    //ns.print(\\\"Focus: \\\" + focus);\\n    if (ns.getHackingLevel() < studyUntilHackLevel) {\\n        ns.singularity.universityCourse(\\\"rothman university\\\", \\\"Study Computer Science\\\", focus);\\n    }\\n    else if (factions.size > 0) {\\n        var faction = factions.keys().next().value;\\n        const factionsFieldWork = [\\\"Slum Snakes\\\", \\\"Tetrads\\\"];\\n        var wType = \\\"Hacking Contracts\\\";\\n        if (factionsFieldWork.includes(faction)) {\\n            wType = \\\"Field Work\\\";\\n        }\\n        const success = ns.singularity.workForFaction(faction, wType, focus);\\n        if (success) {\\n            ns.print(\\\"Start working for faction \\\" + faction);\\n            ns.toast(\\\"Start working for faction \\\" + faction, \\\"success\\\", 5000);\\n        }\\n        else {\\n            ns.print(\\\"Could not perform intended action: \\\" + faction + \\\" -> \\\" + wType);\\n        }\\n    }\\n    else if (player.hacking >= 250) {\\n        var corpsToWorkFor = getCorpsForReputation(ns, factions);\\n        //ns.print(\\\"Corps to work for: \\\" + corpsToWorkFor);\\n        if (corpsToWorkFor.length > 0) {\\n            applyForPromotion(ns, player, corpsToWorkFor[0]);\\n            ns.print(\\\"Start working for \\\" + corpsToWorkFor[0]);\\n            ns.toast(\\\"Start working for \\\" + corpsToWorkFor[0]);\\n        }\\n    }\\n    else if (focus) {\\n        var crimeTime = commitCrime(ns, player);\\n        return crimeTime;\\n    }\\n    else {\\n        ns.toast(\\\"Crime Time! Please focus on something to start crimes.\\\", \\\"warning\\\");\\n    }\\n    return sleepTime;\\n}\\nfunction applyForPromotion(ns, player, corp) {\\n    var career = \\\"it\\\";\\n    var success = ns.applyToCompany(corp, career);\\n    if (success) {\\n        ns.toast(\\\"Got a company promotion!\\\");\\n    }\\n    ns.workForCompany(corp, ns.isFocused());\\n}\\nfunction currentActionUseful(ns, player, factions) {\\n    var playerControlPort = ns.getPortHandle(3); // port 2 is hack\\n    if (player.workType == \\\"Working for Faction\\\") {\\n        if (factions.has(player.currentWorkFactionName)) {\\n            var repRemaining = factions.get(player.currentWorkFactionName) - player.workRepGained;\\n            if (repRemaining > 0) {\\n                // working for a faction needing more reputation for augmentations\\n                if (playerControlPort.empty() && player.currentWorkFactionDescription == \\\"carrying out hacking contracts\\\") {\\n                    // only write to ports if empty\\n                    ns.print(\\\"ns.share() to increase faction reputation\\\");\\n                    playerControlPort.write(1);\\n                }\\n                else if (playerControlPort.empty()) {\\n                    // only write to ports if empty\\n                    playerControlPort.write(0);\\n                }\\n                // seems a cycle is .2 ms, so RepGainRate * 5 is gain per second\\n                var reputationTimeRemaining = repRemaining / (player.workRepGainRate * 5);\\n                ns.print(\\\"Reputation remaining: \\\" + ns.nFormat(repRemaining, \\\"0a\\\") + \\\" in \\\" + ns.nFormat(reputationTimeRemaining / 60, \\\"0a\\\") + \\\" min\\\");\\n                return true;\\n            }\\n            else {\\n                ns.print(\\\"Max Reputation @ \\\" + player.currentWorkFactionName);\\n                ns.toast(\\\"Max Reputation @ \\\" + player.currentWorkFactionName, \\\"success\\\", 5000);\\n                return false;\\n            }\\n        }\\n        else {\\n            if (playerControlPort.empty()) {\\n                // only write to ports if empty\\n                playerControlPort.write(0);\\n            }\\n        }\\n    }\\n    else { // not hacking for a faction\\n        if (playerControlPort.empty()) {\\n            // only write to ports if empty\\n            playerControlPort.write(false);\\n        }\\n    }\\n    if (player.workType == \\\"Working for Company\\\" && player.companyName != \\\"\\\") {\\n        // for unknown reasons it might happen to have the work type \\\"working for company\\\" without actually working for one\\n        // just to make sure, also check that we have a company.\\n        var reputationGoal = 200000; // 200 but some is lost when stop working ; 266667\\n        // ToDo: except fulcrum + 66.666 k and bachman not hacked\\n        var reputation = ns.getCompanyRep(player.companyName) + (player.workRepGained * 3 / 4);\\n        ns.print(\\\"Company reputation: \\\" + ns.nFormat(reputation, \\\"0a\\\"));\\n        if (factions.has(player.companyName)) {\\n            return false;\\n        }\\n        applyForPromotion(ns, player, player.companyName);\\n        return true;\\n    }\\n    if (player.workType == \\\"Studying or Taking a class at university\\\") {\\n        if (ns.getHackingLevel() < studyUntilHackLevel) {\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\nfunction getFactionsForReputation(ns, player) {\\n    var factionsWithAugmentations = new Map();\\n    for (const faction of player.factions) {\\n        var maxReputationRequired = maxAugmentRep(ns, faction);\\n        if (ns.singularity.getFactionRep(faction) < maxReputationRequired) {\\n            factionsWithAugmentations.set(faction, maxReputationRequired - ns.singularity.getFactionRep(faction));\\n        }\\n    }\\n    return factionsWithAugmentations;\\n}\\nfunction getCorpsForReputation(ns, factions) {\\n    var corpsWithoutFaction = [];\\n    for (const corp of megaCorps) {\\n        if (!factions.has(corp) && maxAugmentRep(ns, corp) > 0) {\\n            corpsWithoutFaction.push(corp);\\n        }\\n    }\\n    return corpsWithoutFaction;\\n}\\nfunction buyAugments(ns, player) {\\n    var sortedAugmentations = [];\\n    for (const faction of player.factions) {\\n        var purchasedAugmentations = ns.singularity.getOwnedAugmentations(true);\\n        var augmentations = ns.singularity.getAugmentationsFromFaction(faction);\\n        var newAugmentations = augmentations.filter(val => !purchasedAugmentations.includes(val));\\n        for (const augmentation of newAugmentations) {\\n            if (ns.singularity.getAugmentationRepReq(augmentation) <= ns.singularity.getFactionRep(faction)) {\\n                sortedAugmentations.push([augmentation, ns.singularity.getAugmentationPrice(augmentation)]);\\n            }\\n        }\\n    }\\n    // costs are the second element in the 2d arrays\\n    sortedAugmentations.sort((a, b) => b[1] - a[1]);\\n    var augmentationCostMultiplier = 1;\\n    var preReqAugments = [];\\n    var skipAugments = [];\\n    var overallAugmentationCost = 0;\\n    for (var i = 0; i < sortedAugmentations.length; i++) {\\n        for (var preReqAug of ns.singularity.getAugmentationPrereq(sortedAugmentations[i][0])) {\\n            if (!preReqAugments.includes(preReqAug) && !purchasedAugmentations.includes(preReqAug)) {\\n                preReqAugments.push(preReqAug);\\n                //ns.print(\\\"move prereq aug: \\\" + preReqAug + \\\" before \\\" + sortedAugmentations[i][0]);\\n                sortedAugmentations.splice(i, 0, [preReqAug, ns.singularity.getAugmentationPrice(preReqAug)]);\\n                //overallAugmentationCost += sortedAugmentations[i][1] * augmentationCostMultiplier;\\n                if (i >= 0) {\\n                    i--;\\n                }\\n                //augmentationCostMultiplier *= 2;\\n            }\\n        }\\n        if (i >= 0) {\\n            if (i > 0 && sortedAugmentations[i][0] == sortedAugmentations[i - 1][0] || skipAugments.includes(sortedAugmentations[i][0])) {\\n                //ns.print(\\\"remove duplicate aug: \\\" + sortedAugmentations[i][0]);\\n                sortedAugmentations.splice(i, 1);\\n                i--;\\n                continue;\\n            }\\n            else if (preReqAugments.includes(sortedAugmentations[i][0])) {\\n                //ns.print(\\\"skip prereq aug: \\\" + sortedAugmentations[i][0]);\\n                skipAugments.push((sortedAugmentations[i][0]));\\n            }\\n            overallAugmentationCost += sortedAugmentations[i][1] * augmentationCostMultiplier;\\n            augmentationCostMultiplier *= 1.9;\\n        }\\n    }\\n    ns.print(\\\"Augmentation purchase order: \\\" + sortedAugmentations);\\n    ns.print(\\\"Current augmentation purchase cost: \\\" + ns.nFormat(overallAugmentationCost, \\\"0.0a\\\"));\\n    if (player.money > overallAugmentationCost) {\\n        // decide when it's time to install\\n        // buy augmentation list\\n        // buy flux governors\\n        // ns.installAugmentations(cbScript)\\n    }\\n}\\nfunction maxAugmentRep(ns, faction) {\\n    var purchasedAugmentations = ns.singularity.getOwnedAugmentations(true);\\n    var augmentations = ns.singularity.getAugmentationsFromFaction(faction);\\n    var newAugmentations = augmentations.filter(val => !purchasedAugmentations.includes(val));\\n    if (newAugmentations.length > 0) {\\n        // go for the last augmentation in the list. Assumption: Higher rep augs from follow-up factions\\n        var maxReputationRequired = 0;\\n        for (const augmentation of newAugmentations) {\\n            if (ignoreFactionAugs.has(faction)) {\\n                if (ignoreFactionAugs.get(faction) == augmentation) {\\n                    // ignore some augmentations which we want to buy from later factions\\n                    //ns.print(\\\"Ignore aug \\\" + augmentation + \\\" for faction \\\" + faction)\\n                    continue;\\n                }\\n            }\\n            maxReputationRequired = Math.max(maxReputationRequired, ns.singularity.getAugmentationRepReq(augmentation));\\n        }\\n        return maxReputationRequired;\\n        // go for the last augmentation in the list. Assumption: Higher rep augs from follow-up factions\\n        // some augs will be completely ignored however\\n        //return ns.getAugmentationRepReq(newAugmentations[newAugmentations.length - 1]);\\n    }\\n    return 0;\\n}\\nfunction joinFactions(ns) {\\n    const newFactions = ns.singularity.checkFactionInvitations();\\n    for (const faction of newFactions) {\\n        if (!cityFactions.includes(faction) && maxAugmentRep(ns, faction)) {\\n            ns.singularity.joinFaction(faction);\\n            ns.print(\\\"Joined \\\" + faction);\\n        }\\n    }\\n}\\nfunction commitCrime(ns, player, combatStatsGoal = 300) {\\n    // Calculate the risk value of all crimes\\n    ns.print(\\\"Karma: \\\" + ns.heart.break());\\n    ns.print(\\\"Kills: \\\" + player.numPeopleKilled);\\n    var bestCrime = \\\"\\\";\\n    var bestCrimeValue = 0;\\n    var bestCrimeStats = {};\\n    for (let crime of crimes) {\\n        let crimeChance = ns.getCrimeChance(crime);\\n        var crimeStats = ns.getCrimeStats(crime);\\n        if (crime == \\\"Assassination\\\" && player.numPeopleKilled < 30 && crimeChance > 0.98) {\\n            bestCrime = \\\"Assassination\\\";\\n            bestCrimeStats = crimeStats;\\n            break;\\n        }\\n        else if (crime == \\\"Homicide\\\" && player.numPeopleKilled < 30 && crimeChance > 0.98) {\\n            bestCrime = \\\"Homicide\\\";\\n            bestCrimeStats = crimeStats;\\n            break;\\n        }\\n        var crimeValue = 0;\\n        if (player.strength < combatStatsGoal) {\\n            crimeValue += 100000 * crimeStats.strength_exp;\\n        }\\n        if (player.defense < combatStatsGoal) {\\n            crimeValue += 100000 * crimeStats.defense_exp;\\n        }\\n        if (player.dexterity < combatStatsGoal) {\\n            crimeValue += 100000 * crimeStats.dexterity_exp;\\n        }\\n        if (player.agility < combatStatsGoal) {\\n            crimeValue += 100000 * crimeStats.agility_exp;\\n        }\\n        crimeValue += crimeStats.money;\\n        //ns.print(ns.nFormat(crimeChance,\\\"0.00a\\\")+\\\"/\\\"+ns.nFormat(crimeStats.time,\\\"000a\\\")+\\\"|\\\"+crimeStats.strength_exp + \\\"|\\\" + crimeStats.defense_exp + \\\"|\\\" + crimeStats.dexterity_exp + \\\"|\\\" + crimeStats.agility_exp + \\\"|\\\" + ns.nFormat(crimeStats.money,\\\"0a\\\")+\\\"|\\\"+crime);\\n        crimeValue = crimeValue * crimeChance / (crimeStats.time + 10);\\n        if (crimeValue > bestCrimeValue) {\\n            bestCrime = crime;\\n            bestCrimeValue = crimeValue;\\n            bestCrimeStats = crimeStats;\\n        }\\n    }\\n    ns.commitCrime(bestCrime);\\n    ns.print(\\\"Crime value \\\" + ns.nFormat(bestCrimeValue, \\\"0a\\\") + \\\" for \\\" + bestCrime);\\n    return bestCrimeStats.time + 10;\\n}\\nvar megaCorps = [\\\"Clarke Incorporated\\\", \\\"Bachman & Associates\\\", \\\"OmniTek Incorporated\\\", \\\"NWO\\\", \\\"Fulcrum Secret Technologies\\\", \\\"Blade Industries\\\",\\n    \\\"ECorp\\\", \\\"MegaCorp\\\", \\\"KuaiGong International\\\", \\\"Four Sigma\\\"];\\nvar cityFactions = [\\\"Sector-12\\\", \\\"Chongqing\\\", \\\"New Tokyo\\\", \\\"Ishima\\\", \\\"Aevum\\\", \\\"Volhaven\\\"];\\nvar crimes = [\\\"Shoplift\\\", \\\"RobStore\\\", \\\"Mug\\\", \\\"Larceny\\\", \\\"Deal Drugs\\\", \\\"Bond Forgery\\\", \\\"Traffick Arms\\\", \\\"Homicide\\\",\\n    \\\"Grand Theft Auto\\\", \\\"Kidnap\\\", \\\"Assassination\\\", \\\"Heist\\\"];\\nconst ignoreFactionAugs = new Map([\\n    [\\\"CyberSec\\\", 'Cranial Signal Processors - Gen II'],\\n    [\\\"NiteSec\\\", 'DataJack'],\\n    [\\\"The Black Hand\\\", 'Embedded Netburner Module Core Implant'],\\n    [\\\"Sector-12\\\", 'Neuralstimulator'],\\n]);\\n/*\\nTODO: Implement creating programs manual in the first run\\ncreateProgram()\\nBruteSSH.exe: 50\\nFTPCrack.exe: 100\\nrelaySMTP.exe: 250\\nHTTPWorm.exe: 500\\nSQLInject.exe: 750\\nDeepscanV1.exe: 75\\nDeepscanV2.exe: 400\\nServerProfiler.exe: 75\\nAutoLink.exe: 25\\n*/ \\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"old/playerAction.js\",\"server\":\"home\"}}],[\"old/share.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.share();\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvb2xkL3NoYXJlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ3JCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBhd2FpdCBucy5zaGFyZSgpO1xyXG59Il19\",\"filename\":\"old/share.js\",\"server\":\"home\"}}],[\"old/solve-contracts.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nimport { getAllServers } from \\\"/old/getServers.js\\\";\\nexport async function main(ns) {\\n    ns.disableLog(\\\"ALL\\\");\\n    // This script could run separately in a loop, howeverit is more RAM-efficient to call the script from a management script\\n    //while (true) {\\n    // get all available servers\\n    const servers = getAllServers(ns);\\n    const contracts = servers.flatMap((server) => {\\n        const onServer = ns.ls(server, \\\".cct\\\").map((contract) => {\\n            const type = ns.codingcontract.getContractType(contract, server);\\n            const data = ns.codingcontract.getData(contract, server);\\n            const didSolve = solve(type, data, server, contract, ns);\\n            return `${server} - ${contract} - ${type} - ${didSolve || \\\"FAILED!\\\"}`;\\n        });\\n        return onServer;\\n    });\\n    //ns.tprint(\\\"Found \\\" + contracts.length + \\\" contracts\\\");\\n    contracts.forEach((contract) => void ns.print(contract));\\n    // sleep in case this script is run manually\\n    //await ns.sleep(60000)\\n    //}\\n    return;\\n}\\nfunction solve(type, data, server, contract, ns) {\\n    let solution = \\\"\\\";\\n    //ns.tprint(type);\\n    switch (type) {\\n        case \\\"Algorithmic Stock Trader I\\\":\\n            solution = maxProfit([1, data]);\\n            break;\\n        case \\\"Algorithmic Stock Trader II\\\":\\n            solution = maxProfit([Math.ceil(data.length / 2), data]);\\n            break;\\n        case \\\"Algorithmic Stock Trader III\\\":\\n            solution = maxProfit([2, data]);\\n            break;\\n        case \\\"Algorithmic Stock Trader IV\\\":\\n            solution = maxProfit(data);\\n            break;\\n        case \\\"Minimum Path Sum in a Triangle\\\":\\n            solution = solveTriangleSum(data, ns);\\n            break;\\n        case \\\"Unique Paths in a Grid I\\\":\\n            solution = uniquePathsI(data);\\n            break;\\n        case \\\"Unique Paths in a Grid II\\\":\\n            solution = uniquePathsII(data);\\n            break;\\n        case \\\"Generate IP Addresses\\\":\\n            solution = generateIps(data);\\n            break;\\n        case \\\"Find Largest Prime Factor\\\":\\n            solution = factor(data);\\n            break;\\n        case \\\"Spiralize Matrix\\\":\\n            solution = spiral(data);\\n            break;\\n        case \\\"Merge Overlapping Intervals\\\":\\n            solution = mergeOverlap(data);\\n            break;\\n        case \\\"Array Jumping Game\\\":\\n            solution = solverArrayJumpingGame(data);\\n            break;\\n        case \\\"Find All Valid Math Expressions\\\":\\n            //solution = await findAllValidMathExpressions(data, ns);\\n            solution = solverWaysToExpress(data);\\n            break;\\n        case \\\"Subarray with Maximum Sum\\\":\\n            solution = solverLargestSubset(data);\\n            break;\\n        case \\\"Total Ways to Sum\\\":\\n            solution = solverWaysToSum(data);\\n            break;\\n        case \\\"Sanitize Parentheses in Expression\\\":\\n            solution = removeInvalidParenthesis(data);\\n            break;\\n        default:\\n            return false;\\n    }\\n    return (solution != \\\"\\\") ? ns.codingcontract.attempt(solution, contract, server, [true]) : \\\"\\\";\\n}\\n// Sanitize Parentheses in Expression\\n// method checks if character is parenthesis(open or closed)\\nfunction isParenthesis(c) {\\n    return ((c == '(') || (c == ')'));\\n}\\n// method returns true if string contains valid parenthesis\\nfunction isValidString(str) {\\n    let cnt = 0;\\n    for (let i = 0; i < str.length; i++) {\\n        if (str[i] == '(')\\n            cnt++;\\n        else if (str[i] == ')')\\n            cnt--;\\n        if (cnt < 0)\\n            return false;\\n    }\\n    return (cnt == 0);\\n}\\n// method to remove invalid parenthesis\\nfunction removeInvalidParenthesis(str) {\\n    if (str.length == 0)\\n        return [];\\n    // visit set to ignore already visited string\\n    let visit = new Set();\\n    // queue to maintain BFS\\n    let q = [];\\n    let temp;\\n    let level = false;\\n    let solutions = [];\\n    // pushing given string as starting node into queue\\n    q.push(str);\\n    visit.add(str);\\n    while (q.length != 0) {\\n        str = q.shift();\\n        if (isValidString(str)) {\\n            solutions.push(str);\\n            // If answer is found, make level true\\n            // so that valid string of only that level\\n            // are processed.\\n            level = true;\\n        }\\n        if (level)\\n            continue;\\n        for (let i = 0; i < str.length; i++) {\\n            if (!isParenthesis(str[i]))\\n                continue;\\n            // Removing parenthesis from str and\\n            // pushing into queue,if not visited already\\n            temp = str.substring(0, i) + str.substring(i + 1);\\n            if (!visit.has(temp)) {\\n                q.push(temp);\\n                visit.add(temp);\\n            }\\n        }\\n    }\\n    if (solutions.length == 0) {\\n        solutions.push(\\\"\\\");\\n    }\\n    return solutions;\\n}\\n// Total Ways to Sum\\nfunction solverWaysToSum(arrayData) {\\n    var ways = [];\\n    ways[0] = 1;\\n    for (var a = 1; a <= arrayData; a++) {\\n        ways[a] = 0;\\n    }\\n    for (var i = 1; i <= arrayData - 1; i++) {\\n        for (var j = i; j <= arrayData; j++) {\\n            ways[j] += ways[j - i];\\n        }\\n    }\\n    return ways[arrayData];\\n}\\n// Subarray with Maximum Sum\\nfunction solverLargestSubset(arrayData) {\\n    let highestSubset = arrayData[0];\\n    for (let i = 0; i < arrayData.length; i++) {\\n        for (let j = i; j < arrayData.length; j++) {\\n            let tempSubset = 0;\\n            for (let k = i; k <= j; k++) {\\n                tempSubset += arrayData[k];\\n            }\\n            if (highestSubset < tempSubset) {\\n                highestSubset = tempSubset;\\n            }\\n        }\\n    }\\n    return highestSubset;\\n}\\n// Find All Valid Math Expressions\\nfunction solverWaysToExpress(arrayData) {\\n    //ns.tprint(\\\"solverWaysToExpress()\\\");\\n    //await ns.sleep(1000);\\n    let i, j, k;\\n    let operatorList = [\\\"\\\", \\\"+\\\", \\\"-\\\", \\\"*\\\"];\\n    let validExpressions = [];\\n    let tempPermutations = Math.pow(4, (arrayData[0].length - 1));\\n    for (i = 0; i < tempPermutations; i++) {\\n        //if (!Boolean(i % 100000)) {\\n        //    ns.tprint(i + \\\"/\\\" + tempPermutations + \\\", \\\" + validExpressions.length + \\\" found.\\\");\\n        //    await ns.sleep(100);\\n        //}\\n        let arraySummands = [];\\n        let candidateExpression = arrayData[0].substr(0, 1);\\n        arraySummands[0] = parseInt(arrayData[0].substr(0, 1));\\n        for (j = 1; j < arrayData[0].length; j++) {\\n            candidateExpression += operatorList[(i >> ((j - 1) * 2)) % 4] + arrayData[0].substr(j, 1);\\n            let rollingOperator = operatorList[(i >> ((j - 1) * 2)) % 4];\\n            let rollingOperand = parseInt(arrayData[0].substr(j, 1));\\n            switch (rollingOperator) {\\n                case \\\"\\\":\\n                    rollingOperand = rollingOperand * (arraySummands[arraySummands.length - 1] / Math.abs(arraySummands[arraySummands.length - 1]));\\n                    arraySummands[arraySummands.length - 1] = arraySummands[arraySummands.length - 1] * 10 + rollingOperand;\\n                    break;\\n                case \\\"+\\\":\\n                    arraySummands[arraySummands.length] = rollingOperand;\\n                    break;\\n                case \\\"-\\\":\\n                    arraySummands[arraySummands.length] = 0 - rollingOperand;\\n                    break;\\n                case \\\"*\\\":\\n                    while (j < arrayData[0].length - 1 && ((i >> (j * 2)) % 4) === 0) {\\n                        j += 1;\\n                        candidateExpression += arrayData[0].substr(j, 1);\\n                        rollingOperand = rollingOperand * 10 + parseInt(arrayData[0].substr(j, 1));\\n                    }\\n                    arraySummands[arraySummands.length - 1] = arraySummands[arraySummands.length - 1] * rollingOperand;\\n                    break;\\n            }\\n        }\\n        let rollingTotal = arraySummands.reduce(function (a, b) { return a + b; });\\n        //if(arrayData[1] == eval(candidateExpression)){\\n        if (arrayData[1] === rollingTotal) {\\n            validExpressions[validExpressions.length] = candidateExpression;\\n        }\\n    }\\n    return JSON.stringify(validExpressions);\\n}\\n// Array Jumping Game\\nfunction solverArrayJumpingGame(arrayData) {\\n    let arrayJump = [0];\\n    for (let n = 0; n < arrayData.length; n++) {\\n        if (arrayJump[n] || !n) {\\n            for (let p = n; p <= Math.min(n + arrayData[n], arrayData.length - 1); p++) {\\n                arrayJump[p] = 1;\\n            }\\n        }\\n    }\\n    //tprint(\\\"Array Jumping Game: \\\" + 0 + Boolean(arrayJump[arrayData.length - 1]));\\n    return 0 + Boolean(arrayJump[arrayData.length - 1]);\\n}\\n//ALGORITHMIC STOCK TRADER\\nfunction maxProfit(arrayData) {\\n    let i, j, k;\\n    let maxTrades = arrayData[0];\\n    let stockPrices = arrayData[1];\\n    // WHY?\\n    let tempStr = \\\"[0\\\";\\n    for (i = 0; i < stockPrices.length; i++) {\\n        tempStr += \\\",0\\\";\\n    }\\n    tempStr += \\\"]\\\";\\n    let tempArr = \\\"[\\\" + tempStr;\\n    for (i = 0; i < maxTrades - 1; i++) {\\n        tempArr += \\\",\\\" + tempStr;\\n    }\\n    tempArr += \\\"]\\\";\\n    let highestProfit = JSON.parse(tempArr);\\n    for (i = 0; i < maxTrades; i++) {\\n        for (j = 0; j < stockPrices.length; j++) { // Buy / Start\\n            for (k = j; k < stockPrices.length; k++) { // Sell / End\\n                if (i > 0 && j > 0 && k > 0) {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i][k - 1], highestProfit[i - 1][j - 1] + stockPrices[k] - stockPrices[j]);\\n                }\\n                else if (i > 0 && j > 0) {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i - 1][j - 1] + stockPrices[k] - stockPrices[j]);\\n                }\\n                else if (i > 0 && k > 0) {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i][k - 1], stockPrices[k] - stockPrices[j]);\\n                }\\n                else if (j > 0 && k > 0) {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i][k - 1], stockPrices[k] - stockPrices[j]);\\n                }\\n                else {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], stockPrices[k] - stockPrices[j]);\\n                }\\n            }\\n        }\\n    }\\n    return highestProfit[maxTrades - 1][stockPrices.length - 1];\\n}\\n//SMALLEST TRIANGLE SUM\\nfunction solveTriangleSum(arrayData, ns) {\\n    let triangle = arrayData;\\n    let nextArray;\\n    let previousArray = triangle[0];\\n    for (let i = 1; i < triangle.length; i++) {\\n        nextArray = [];\\n        for (let j = 0; j < triangle[i].length; j++) {\\n            if (j == 0) {\\n                nextArray.push(previousArray[j] + triangle[i][j]);\\n            }\\n            else if (j == triangle[i].length - 1) {\\n                nextArray.push(previousArray[j - 1] + triangle[i][j]);\\n            }\\n            else {\\n                nextArray.push(Math.min(previousArray[j], previousArray[j - 1]) + triangle[i][j]);\\n            }\\n        }\\n        previousArray = nextArray;\\n    }\\n    return Math.min.apply(null, nextArray);\\n}\\n//UNIQUE PATHS IN A GRID\\nfunction uniquePathsI(grid) {\\n    const rightMoves = grid[0] - 1;\\n    const downMoves = grid[1] - 1;\\n    return Math.round(factorialDivision(rightMoves + downMoves, rightMoves) / (factorial(downMoves)));\\n}\\nfunction factorial(n) {\\n    return factorialDivision(n, 1);\\n}\\nfunction factorialDivision(n, d) {\\n    if (n == 0 || n == 1 || n == d)\\n        return 1;\\n    return factorialDivision(n - 1, d) * n;\\n}\\nfunction uniquePathsII(grid, ignoreFirst = false, ignoreLast = false) {\\n    const rightMoves = grid[0].length - 1;\\n    const downMoves = grid.length - 1;\\n    let totalPossiblePaths = Math.round(factorialDivision(rightMoves + downMoves, rightMoves) / (factorial(downMoves)));\\n    for (let i = 0; i < grid.length; i++) {\\n        for (let j = 0; j < grid[i].length; j++) {\\n            if (grid[i][j] == 1 && (!ignoreFirst || (i != 0 || j != 0)) && (!ignoreLast || (i != grid.length - 1 || j != grid[i].length - 1))) {\\n                const newArray = [];\\n                for (let k = i; k < grid.length; k++) {\\n                    newArray.push(grid[k].slice(j, grid[i].length));\\n                }\\n                let removedPaths = uniquePathsII(newArray, true, ignoreLast);\\n                removedPaths *= uniquePathsI([i + 1, j + 1]);\\n                totalPossiblePaths -= removedPaths;\\n            }\\n        }\\n    }\\n    return totalPossiblePaths;\\n}\\n//GENERATE IP ADDRESSES\\nfunction generateIps(num) {\\n    num = num.toString();\\n    const length = num.length;\\n    const ips = [];\\n    for (let i = 1; i < length - 2; i++) {\\n        for (let j = i + 1; j < length - 1; j++) {\\n            for (let k = j + 1; k < length; k++) {\\n                const ip = [\\n                    num.slice(0, i),\\n                    num.slice(i, j),\\n                    num.slice(j, k),\\n                    num.slice(k, num.length)\\n                ];\\n                let isValid = true;\\n                ip.forEach(seg => {\\n                    isValid = isValid && isValidIpSegment(seg);\\n                });\\n                if (isValid)\\n                    ips.push(ip.join(\\\".\\\"));\\n            }\\n        }\\n    }\\n    return ips;\\n}\\nfunction isValidIpSegment(segment) {\\n    if (segment[0] == \\\"0\\\" && segment != \\\"0\\\")\\n        return false;\\n    segment = Number(segment);\\n    if (segment < 0 || segment > 255)\\n        return false;\\n    return true;\\n}\\n//GREATEST FACTOR\\nfunction factor(num) {\\n    for (let div = 2; div <= Math.sqrt(num); div++) {\\n        if (num % div != 0) {\\n            continue;\\n        }\\n        num = num / div;\\n        div = 2;\\n    }\\n    return num;\\n}\\n//SPIRALIZE Matrix\\nfunction spiral(arr, accum = []) {\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    accum = accum.concat(arr.shift());\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    accum = accum.concat(column(arr, arr[0].length - 1));\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    accum = accum.concat(arr.pop().reverse());\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    accum = accum.concat(column(arr, 0).reverse());\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    return spiral(arr, accum);\\n}\\nfunction column(arr, index) {\\n    const res = [];\\n    for (let i = 0; i < arr.length; i++) {\\n        const elm = arr[i].splice(index, 1)[0];\\n        if (elm) {\\n            res.push(elm);\\n        }\\n    }\\n    return res;\\n}\\n// Merge Overlapping Intervals\\nfunction mergeOverlap(intervals) {\\n    intervals.sort(([minA], [minB]) => minA - minB);\\n    for (let i = 0; i < intervals.length; i++) {\\n        for (let j = i + 1; j < intervals.length; j++) {\\n            const [min, max] = intervals[i];\\n            const [laterMin, laterMax] = intervals[j];\\n            if (laterMin <= max) {\\n                const newMax = laterMax > max ? laterMax : max;\\n                const newInterval = [min, newMax];\\n                intervals[i] = newInterval;\\n                intervals.splice(j, 1);\\n                j = i;\\n            }\\n        }\\n    }\\n    return intervals;\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"old/solve-contracts.js\",\"server\":\"home\"}}],[\"old/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    await ns.sleep(ns.args[1]);\\n    await ns.weaken(ns.args[0]);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL29sZC93ZWFrZW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUU1QixNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTNCLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcblxyXG5cdGF3YWl0IG5zLnNsZWVwKG5zLmFyZ3NbMV0pO1xyXG5cclxuXHRhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XHJcbn0iXX0=\",\"filename\":\"old/weaken.js\",\"server\":\"home\"}}],[\"src/play.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Function to scan for all servers\\n    function scanServers(ns, startServer = \\\"home\\\") {\\n        const serversToScan = [startServer];\\n        const scannedServers = new Set();\\n        while (serversToScan.length > 0) {\\n            const server = serversToScan.pop();\\n            if (!scannedServers.has(server)) {\\n                scannedServers.add(server);\\n                serversToScan.push(...ns.scan(server));\\n            }\\n        }\\n        return [...scannedServers];\\n    }\\n    // Function to deploy and run bm.js on a server\\n    async function deployAndRunScript(ns, server) {\\n        // Check if bm.js is already running with the target server as an argument\\n        const runningScripts = ns.ps('home');\\n        const isAlreadyRunning = runningScripts.some(script => script.filename === 'src/bm.js' && script.args.includes(server));\\n        // Skip deployment if bm.js is already running against this server\\n        if (isAlreadyRunning) {\\n            ns.print(`Skipping ${server} - batch manager already running.`);\\n            return;\\n        }\\n        // Run the bm.js script on the home server with the server as the argument\\n        const pid = ns.run('src/bm.js', 1, server);\\n        if (pid !== 0) {\\n            ns.tprint(`Executed batch manager on home server for target ${server} (PID: ${pid})`);\\n        }\\n        else {\\n            ns.tprint(`Failed to execute batch manager for target ${server}`);\\n        }\\n    }\\n    ns.run('src/worm.js');\\n    await ns.sleep(11000);\\n    ns.run('src/hacknet.js');\\n    while (true) {\\n        const servers = scanServers(ns);\\n        const playerHackingLevel = ns.getHackingLevel();\\n        for (const server of servers) {\\n            const hackingLevelRequired = ns.getServerRequiredHackingLevel(server);\\n            const maxMoney = ns.getServerMaxMoney(server);\\n            // If the player's hacking level is high enough, we have root access, and maxMoney > 0, deploy and run the script\\n            if (playerHackingLevel >= hackingLevelRequired && ns.hasRootAccess(server) && maxMoney > 0 && server !== 'home') {\\n                await deployAndRunScript(ns, server);\\n            }\\n            else if (maxMoney === 0) {\\n                ns.print(`Skipping ${server} - maxMoney is 0.`);\\n            }\\n        }\\n        await ns.sleep(60000); // Sleep for 60 seconds before checking again\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxheS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zcmMvcGxheS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLG1DQUFtQztJQUNuQyxTQUFTLFdBQVcsQ0FBQyxFQUFFLEVBQUUsV0FBVyxHQUFHLE1BQU07UUFDekMsTUFBTSxhQUFhLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNwQyxNQUFNLGNBQWMsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ2pDLE9BQU8sYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDN0IsTUFBTSxNQUFNLEdBQUcsYUFBYSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ25DLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUM3QixjQUFjLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUMzQixhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2FBQzFDO1NBQ0o7UUFDRCxPQUFPLENBQUMsR0FBRyxjQUFjLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsK0NBQStDO0lBQy9DLEtBQUssVUFBVSxrQkFBa0IsQ0FBQyxFQUFFLEVBQUUsTUFBTTtRQUN4QywwRUFBMEU7UUFDMUUsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQyxNQUFNLGdCQUFnQixHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxLQUFLLFdBQVcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRXhILGtFQUFrRTtRQUNsRSxJQUFJLGdCQUFnQixFQUFFO1lBQ2xCLEVBQUUsQ0FBQyxLQUFLLENBQUMsWUFBWSxNQUFNLG1DQUFtQyxDQUFDLENBQUM7WUFDaEUsT0FBTztTQUNWO1FBRUQsMEVBQTBFO1FBQzFFLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMzQyxJQUFJLEdBQUcsS0FBSyxDQUFDLEVBQUU7WUFDWCxFQUFFLENBQUMsTUFBTSxDQUFDLG9EQUFvRCxNQUFNLFVBQVUsR0FBRyxHQUFHLENBQUMsQ0FBQztTQUN6RjthQUNJO1lBQ0QsRUFBRSxDQUFDLE1BQU0sQ0FBQyw4Q0FBOEMsTUFBTSxFQUFFLENBQUMsQ0FBQztTQUNyRTtJQUNMLENBQUM7SUFFRCxFQUFFLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3RCLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixFQUFFLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUE7SUFFeEIsT0FBTyxJQUFJLEVBQUU7UUFDVCxNQUFNLE9BQU8sR0FBRyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDaEMsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUMsZUFBZSxFQUFFLENBQUM7UUFFaEQsS0FBSyxNQUFNLE1BQU0sSUFBSSxPQUFPLEVBQUU7WUFDMUIsTUFBTSxvQkFBb0IsR0FBRyxFQUFFLENBQUMsNkJBQTZCLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDdEUsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRTlDLGlIQUFpSDtZQUNqSCxJQUFJLGtCQUFrQixJQUFJLG9CQUFvQixJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLElBQUksUUFBUSxHQUFHLENBQUMsSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUM3RyxNQUFNLGtCQUFrQixDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQzthQUN4QztpQkFDSSxJQUFJLFFBQVEsS0FBSyxDQUFDLEVBQUU7Z0JBQ3JCLEVBQUUsQ0FBQyxLQUFLLENBQUMsWUFBWSxNQUFNLG1CQUFtQixDQUFDLENBQUM7YUFDbkQ7U0FDSjtRQUVELE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFFLDZDQUE2QztLQUN4RTtBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xyXG4gICAgLy8gRnVuY3Rpb24gdG8gc2NhbiBmb3IgYWxsIHNlcnZlcnNcclxuICAgIGZ1bmN0aW9uIHNjYW5TZXJ2ZXJzKG5zLCBzdGFydFNlcnZlciA9IFwiaG9tZVwiKSB7XHJcbiAgICAgICAgY29uc3Qgc2VydmVyc1RvU2NhbiA9IFtzdGFydFNlcnZlcl07XHJcbiAgICAgICAgY29uc3Qgc2Nhbm5lZFNlcnZlcnMgPSBuZXcgU2V0KCk7XHJcbiAgICAgICAgd2hpbGUgKHNlcnZlcnNUb1NjYW4ubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBjb25zdCBzZXJ2ZXIgPSBzZXJ2ZXJzVG9TY2FuLnBvcCgpO1xyXG4gICAgICAgICAgICBpZiAoIXNjYW5uZWRTZXJ2ZXJzLmhhcyhzZXJ2ZXIpKSB7XHJcbiAgICAgICAgICAgICAgICBzY2FubmVkU2VydmVycy5hZGQoc2VydmVyKTtcclxuICAgICAgICAgICAgICAgIHNlcnZlcnNUb1NjYW4ucHVzaCguLi5ucy5zY2FuKHNlcnZlcikpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBbLi4uc2Nhbm5lZFNlcnZlcnNdO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEZ1bmN0aW9uIHRvIGRlcGxveSBhbmQgcnVuIGJtLmpzIG9uIGEgc2VydmVyXHJcbiAgICBhc3luYyBmdW5jdGlvbiBkZXBsb3lBbmRSdW5TY3JpcHQobnMsIHNlcnZlcikge1xyXG4gICAgICAgIC8vIENoZWNrIGlmIGJtLmpzIGlzIGFscmVhZHkgcnVubmluZyB3aXRoIHRoZSB0YXJnZXQgc2VydmVyIGFzIGFuIGFyZ3VtZW50XHJcbiAgICAgICAgY29uc3QgcnVubmluZ1NjcmlwdHMgPSBucy5wcygnaG9tZScpO1xyXG4gICAgICAgIGNvbnN0IGlzQWxyZWFkeVJ1bm5pbmcgPSBydW5uaW5nU2NyaXB0cy5zb21lKHNjcmlwdCA9PiBzY3JpcHQuZmlsZW5hbWUgPT09ICdzcmMvYm0uanMnICYmIHNjcmlwdC5hcmdzLmluY2x1ZGVzKHNlcnZlcikpO1xyXG5cclxuICAgICAgICAvLyBTa2lwIGRlcGxveW1lbnQgaWYgYm0uanMgaXMgYWxyZWFkeSBydW5uaW5nIGFnYWluc3QgdGhpcyBzZXJ2ZXJcclxuICAgICAgICBpZiAoaXNBbHJlYWR5UnVubmluZykge1xyXG4gICAgICAgICAgICBucy5wcmludChgU2tpcHBpbmcgJHtzZXJ2ZXJ9IC0gYmF0Y2ggbWFuYWdlciBhbHJlYWR5IHJ1bm5pbmcuYCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFJ1biB0aGUgYm0uanMgc2NyaXB0IG9uIHRoZSBob21lIHNlcnZlciB3aXRoIHRoZSBzZXJ2ZXIgYXMgdGhlIGFyZ3VtZW50XHJcbiAgICAgICAgY29uc3QgcGlkID0gbnMucnVuKCdzcmMvYm0uanMnLCAxLCBzZXJ2ZXIpO1xyXG4gICAgICAgIGlmIChwaWQgIT09IDApIHtcclxuICAgICAgICAgICAgbnMudHByaW50KGBFeGVjdXRlZCBiYXRjaCBtYW5hZ2VyIG9uIGhvbWUgc2VydmVyIGZvciB0YXJnZXQgJHtzZXJ2ZXJ9IChQSUQ6ICR7cGlkfSlgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIG5zLnRwcmludChgRmFpbGVkIHRvIGV4ZWN1dGUgYmF0Y2ggbWFuYWdlciBmb3IgdGFyZ2V0ICR7c2VydmVyfWApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBucy5ydW4oJ3NyYy93b3JtLmpzJyk7XHJcbiAgICBhd2FpdCBucy5zbGVlcCgxMTAwMCk7XHJcbiAgICBucy5ydW4oJ3NyYy9oYWNrbmV0LmpzJylcclxuXHJcbiAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgIGNvbnN0IHNlcnZlcnMgPSBzY2FuU2VydmVycyhucyk7XHJcbiAgICAgICAgY29uc3QgcGxheWVySGFja2luZ0xldmVsID0gbnMuZ2V0SGFja2luZ0xldmVsKCk7XHJcblxyXG4gICAgICAgIGZvciAoY29uc3Qgc2VydmVyIG9mIHNlcnZlcnMpIHtcclxuICAgICAgICAgICAgY29uc3QgaGFja2luZ0xldmVsUmVxdWlyZWQgPSBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzZXJ2ZXIpO1xyXG4gICAgICAgICAgICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcik7XHJcblxyXG4gICAgICAgICAgICAvLyBJZiB0aGUgcGxheWVyJ3MgaGFja2luZyBsZXZlbCBpcyBoaWdoIGVub3VnaCwgd2UgaGF2ZSByb290IGFjY2VzcywgYW5kIG1heE1vbmV5ID4gMCwgZGVwbG95IGFuZCBydW4gdGhlIHNjcmlwdFxyXG4gICAgICAgICAgICBpZiAocGxheWVySGFja2luZ0xldmVsID49IGhhY2tpbmdMZXZlbFJlcXVpcmVkICYmIG5zLmhhc1Jvb3RBY2Nlc3Moc2VydmVyKSAmJiBtYXhNb25leSA+IDAgJiYgc2VydmVyICE9PSAnaG9tZScpIHtcclxuICAgICAgICAgICAgICAgIGF3YWl0IGRlcGxveUFuZFJ1blNjcmlwdChucywgc2VydmVyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChtYXhNb25leSA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoYFNraXBwaW5nICR7c2VydmVyfSAtIG1heE1vbmV5IGlzIDAuYCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKDYwMDAwKTsgIC8vIFNsZWVwIGZvciA2MCBzZWNvbmRzIGJlZm9yZSBjaGVja2luZyBhZ2FpblxyXG4gICAgfVxyXG59Il19\",\"filename\":\"src/play.js\",\"server\":\"home\"}}],[\"src/worm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const portNumber = ns.args[0] || 1;  // Default to port 1 if not provided\\n    ns.clearPort(portNumber); // Clear port data\\n    let servers = getAllServers(ns, 'home');\\n    let scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js', '/src/bm.js'];\\n\\n    while (true) {\\n        await checkAndCopyScripts(ns, servers, scripts);\\n        await ns.sleep(10000); // Wait 10 seconds before looping\\n    }\\n}\\n\\nasync function checkAndCopyScripts(ns, servers, scripts) {\\n    for (let i = 0; i < servers.length; i++) {\\n        let server = servers[i];\\n\\n        // Attempt to open all possible ports on the server\\n        await attemptPortOpening(ns, server);\\n\\n        // For each server we have access to, copy each script if not present already\\n        if (ns.hasRootAccess(server)) {\\n            let copiedScripts = false;\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    copiedScripts = true;\\n                }\\n            }\\n            if (copiedScripts) {\\n                ns.tprint(`Scripts copied to server ${server}`);\\n                copiedScripts = false;\\n            }\\n        }\\n    }\\n}\\n\\nasync function attemptPortOpening(ns, server) {\\n    let openPorts = 0;\\n\\n    // Attempt to open each port regardless of root access status\\n    if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n        ns.brutessh(server);\\n        openPorts++;\\n    }\\n    if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n        ns.ftpcrack(server);\\n        openPorts++;\\n    }\\n    if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n        ns.sqlinject(server);\\n        openPorts++;\\n    }\\n    if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n        ns.httpworm(server);\\n        openPorts++;\\n    }\\n    if (ns.fileExists(\\\"relaysmtp.exe\\\", \\\"home\\\")) {\\n        ns.relaysmtp(server);\\n        openPorts++;\\n    }\\n\\n    const portsRequired = ns.getServerNumPortsRequired(server);\\n\\n    if (portsRequired <= openPorts && !ns.hasRootAccess(server)) {\\n        await ns.nuke(server);\\n        ns.tprint(`Gained root access to: ${server}`);\\n    }\\n\\n    ns.print(`Opened ${openPorts} ports on server ${server}`);\\n}\\n\\nfunction getAllServers(ns, startServer) {\\n    const portNumber = ns.args[0] || 1;  // Default to port 1 if not provided\\n    let servers = new Set([startServer]);\\n    let visited = {startServer: true};\\n    let i = 0;\\n\\n    while (i < Array.from(servers).length) {\\n        let nextServer = Array.from(servers)[i];\\n        let newServers = ns.scan(nextServer);\\n\\n        for (let newServer of newServers) {\\n            if (!visited[newServer]) {\\n                servers.add(newServer);\\n                visited[newServer] = true;\\n            }\\n        }\\n\\n        i++;\\n    }\\n\\n    for (let server of Array.from(servers)) {\\n        let allServers = ns.readPort(portNumber).split(',');\\n        if (!allServers.includes(server)) {\\n            ns.writePort(portNumber, allServers.concat(server).join(','));\\n        }\\n    }\\n    ns.writePort(portNumber, \\\"NULL\\\");\\n\\n    return Array.from(servers);\\n}\\n\",\"filename\":\"src/worm.js\",\"server\":\"home\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"home\"}}],[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"home\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"home\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"home\"}}],[\"doom.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n    ns.alert(`<iframe\\r\\n    width=\\\"680\\\"\\r\\n    height=\\\"400\\\"\\r\\n    frameborder=\\\"0\\\"\\r\\n    src=\\\"https://dos.zone/player/?bundleUrl=https%3A%2F%2Fcdn.dos.zone%2Fcustom%2Fdos%2Fdoom.jsdos?anonymous=1\\\"\\r\\n    allowfullscreen>\\r\\n</iframe>\\r\\n<!--\\r\\n  Message 'dz-player-exit' will be fired when js-dos is exited:\\r\\n  \\r\\n    window.addEventListener(\\\"message\\\", (e) => {\\r\\n        if (e.data.message === \\\"dz-player-exit\\\") {\\r\\n            // ...\\r\\n        }\\r\\n    });\\r\\n-->`);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9vbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9kb29tLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQjtBQUNyQixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLEVBQUUsQ0FBQyxLQUFLLENBQUM7Ozs7Ozs7Ozs7Ozs7OztJQWVULENBQUMsQ0FBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQHBhcmFtIHtOU30gbnMgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIG5zLmFsZXJ0KGA8aWZyYW1lXHJcbiAgICB3aWR0aD1cIjY4MFwiXHJcbiAgICBoZWlnaHQ9XCI0MDBcIlxyXG4gICAgZnJhbWVib3JkZXI9XCIwXCJcclxuICAgIHNyYz1cImh0dHBzOi8vZG9zLnpvbmUvcGxheWVyLz9idW5kbGVVcmw9aHR0cHMlM0ElMkYlMkZjZG4uZG9zLnpvbmUlMkZjdXN0b20lMkZkb3MlMkZkb29tLmpzZG9zP2Fub255bW91cz0xXCJcclxuICAgIGFsbG93ZnVsbHNjcmVlbj5cclxuPC9pZnJhbWU+XHJcbjwhLS1cclxuICBNZXNzYWdlICdkei1wbGF5ZXItZXhpdCcgd2lsbCBiZSBmaXJlZCB3aGVuIGpzLWRvcyBpcyBleGl0ZWQ6XHJcbiAgXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgKGUpID0+IHtcclxuICAgICAgICBpZiAoZS5kYXRhLm1lc3NhZ2UgPT09IFwiZHotcGxheWVyLWV4aXRcIikge1xyXG4gICAgICAgICAgICAvLyAuLi5cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuLS0+YCk7XHJcbn0iXX0=\",\"filename\":\"doom.js\",\"server\":\"home\"}}],[\"Temp/stock-hasTIXAPIAccess.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.stock.hasTIXAPIAccess()\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-hasTIXAPIAccess.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-hasTIXAPIAccess.txt.js\",\"server\":\"home\"}}],[\"Temp/kill-stockmarket-scripts.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { ns.ps().filter(proc => proc.filename == 'server/trade.js' && !proc.args.includes('-l') && !proc.args.includes('--liquidate')).forEach(proc => ns.kill(proc.pid)) }\",\"filename\":\"Temp/kill-stockmarket-scripts.js\",\"server\":\"home\"}}],[\"Temp/stock-getPosition.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    Object.fromEntries(ns.args.map(sym => [sym, ns.stock.getPosition(sym)]))\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-getPosition.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-getPosition.txt.js\",\"server\":\"home\"}}],[\"Temp/stock-sellStock.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.stock.sellStock(ns.args[0], ns.args[1])\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-sellStock.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-sellStock.txt.js\",\"server\":\"home\"}}],[\"src/hacknet.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    ns.disableLog(\\\"ALL\\\");\\n    const { hacknet } = ns;\\n    const maxValues = {\\n        cores: 16,\\n        level: 200,\\n        ram: 64\\n    };\\n    const upgradeCostFunc = {\\n        cores: hacknet.getCoreUpgradeCost,\\n        level: hacknet.getLevelUpgradeCost,\\n        ram: hacknet.getRamUpgradeCost\\n    };\\n    const maxNodes = hacknet.maxNumNodes();\\n    function getUpgradeInfo(index, stats, field) {\\n        if (stats[field] === maxValues[field]) {\\n            return undefined; // Already maxed out\\n        }\\n        const cost = upgradeCostFunc[field](index, 1);\\n        return { cost };\\n    }\\n    function getPurchaseInfo() {\\n        if (hacknet.numNodes() === maxNodes) {\\n            return undefined; // Can't purchase anymore\\n        }\\n        const cost = hacknet.getPurchaseNodeCost();\\n        return { cost };\\n    }\\n    function getOwnedHacknetNodes() {\\n        const nodes = [];\\n        for (let i = 0; i < hacknet.numNodes(); i++) {\\n            const stats = hacknet.getNodeStats(i);\\n            const nodeInfo = { ...stats, id: i };\\n            for (const field of Object.keys(upgradeCostFunc)) {\\n                nodeInfo[`${field}Upgrade`] = getUpgradeInfo(i, stats, field);\\n            }\\n            nodes.push(nodeInfo);\\n        }\\n        return nodes;\\n    }\\n    function getBestNodesToUpgrade(nodes) {\\n        const nodesToUpgrade = {\\n            cores: undefined,\\n            ram: undefined,\\n            level: undefined\\n        };\\n        for (const node of nodes) {\\n            for (const field of Object.keys(nodesToUpgrade)) {\\n                const upgradeInfo = node[`${field}Upgrade`];\\n                if (!upgradeInfo) {\\n                    continue;\\n                }\\n                if (!nodesToUpgrade[field] || upgradeInfo.cost < nodesToUpgrade[field].cost) {\\n                    nodesToUpgrade[field] = {\\n                        node: node.id,\\n                        cost: upgradeInfo.cost\\n                    };\\n                }\\n            }\\n        }\\n        return nodesToUpgrade;\\n    }\\n    function formatCurrency(value) {\\n        return new Intl.NumberFormat('en-US', {\\n            style: 'currency',\\n            currency: 'USD',\\n            notation: 'compact'\\n        }).format(value);\\n    }\\n    async function waitForMoney(cost) {\\n        while (ns.getServerMoneyAvailable(\\\"home\\\") < cost) {\\n            await ns.sleep(10000); // wait 10s\\n        }\\n    }\\n    async function purchaseNewNode(cost) {\\n        await waitForMoney(cost);\\n        ns.print(`PURCHASING NODE @ ${formatCurrency(cost)}`);\\n        hacknet.purchaseNode();\\n    }\\n    async function upgradeNode(field, node, cost) {\\n        await waitForMoney(cost);\\n        ns.print(`UPGRADING ${field.toUpperCase()} - Node ${node} @ ${formatCurrency(cost)}`);\\n        switch (field) {\\n            case \\\"cores\\\":\\n                hacknet.upgradeCore(node, 1);\\n                break;\\n            case \\\"level\\\":\\n                hacknet.upgradeLevel(node, 1);\\n                break;\\n            case \\\"ram\\\":\\n                hacknet.upgradeRam(node, 1);\\n                break;\\n        }\\n    }\\n    async function doNextAction(purchaseInfo, nodesToUpgrade, budget) {\\n        if (purchaseInfo && purchaseInfo.cost <= budget) {\\n            await purchaseNewNode(purchaseInfo.cost);\\n            return;\\n        }\\n        for (const field of Object.keys(nodesToUpgrade)) {\\n            const upgrade = nodesToUpgrade[field];\\n            if (upgrade && upgrade.cost <= budget) {\\n                await upgradeNode(field, upgrade.node, upgrade.cost);\\n                return;\\n            }\\n        }\\n    }\\n    while (true) {\\n        const homeMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n        const budget = homeMoney * 0.05; // 5% of home server money for Hacknet upgrades\\n        ns.print(`Current Budget: ${formatCurrency(budget)}`);\\n        const nodes = getOwnedHacknetNodes();\\n        const nodesToUpgrade = getBestNodesToUpgrade(nodes);\\n        const purchaseInfo = getPurchaseInfo();\\n        await doNextAction(purchaseInfo, nodesToUpgrade, budget);\\n        await ns.sleep(60000); // Repeat every minute\\n    }\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"src/hacknet.js\",\"server\":\"home\"}}],[\"template.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    ns.tprint(\\\"Hello Remote API!\\\");\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdGVtcGxhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUMvQixFQUFFLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDakMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgbnMudHByaW50KFwiSGVsbG8gUmVtb3RlIEFQSSFcIik7XHJcbn1cclxuIl19\",\"filename\":\"template.js\",\"server\":\"home\"}}],[\"alias.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const aliases = [\\n        { alias: \\\"n\\\", command: \\\"run NUKE.exe\\\" },\\n        { alias: \\\"home\\\", command: \\\"home; cd src\\\" },\\n        { alias: \\\"sa1\\\", command: \\\"scan-analyze 3\\\" },\\n        { alias: \\\"sa2\\\", command: \\\"scan-analyze 5\\\" },\\n        { alias: \\\"sa3\\\", command: \\\"scan-analyze 10\\\" },\\n        { alias: \\\"brutessh\\\", command: \\\"home; connect darkweb; buy -l; buy brutessh.exe; home\\\" },\\n        { alias: \\\"ftpcrack\\\", command: \\\"home; connect darkweb; buy -l; buy ftpcrack.exe; home\\\" },\\n        { alias: \\\"relaysmtp\\\", command: \\\"home; connect darkweb; buy -l; buy relaysmtp.exe; home\\\" },\\n        { alias: \\\"httpworm\\\", command: \\\"home; connect darkweb; buy -l; buy httpworm.exe; home\\\" },\\n        { alias: \\\"sqlinject\\\", command: \\\"home; connect darkweb; buy -l; buy sqlinject.exe; home\\\" },\\n    ];\\n    let aliasCommands = aliases.map(({ alias, command }) => `alias ${alias}=\\\"${command}\\\"`).join(\\\"; \\\");\\n    ns.tprint(\\\"SUCCESS: Copy and paste the following command into your terminal:\\\");\\n    ns.tprint(aliasCommands);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxpYXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYWxpYXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxPQUFPLEdBQUc7UUFDWixFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRTtRQUN2QyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRTtRQUMxQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFO1FBQzNDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUU7UUFDM0MsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRTtRQUM1QyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLHVEQUF1RCxFQUFFO1FBQ3ZGLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsdURBQXVELEVBQUU7UUFDdkYsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSx3REFBd0QsRUFBRTtRQUN6RixFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLHVEQUF1RCxFQUFFO1FBQ3ZGLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsd0RBQXdELEVBQUU7S0FFNUYsQ0FBQztJQUVGLElBQUksYUFBYSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLENBQUMsU0FBUyxLQUFLLEtBQUssT0FBTyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxtRUFBbUUsQ0FBQyxDQUFDO0lBQy9FLEVBQUUsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDN0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IGFsaWFzZXMgPSBbXHJcbiAgICAgICAgeyBhbGlhczogXCJuXCIsIGNvbW1hbmQ6IFwicnVuIE5VS0UuZXhlXCIgfSxcclxuICAgICAgICB7IGFsaWFzOiBcImhvbWVcIiwgY29tbWFuZDogXCJob21lOyBjZCBzcmNcIiB9LFxyXG4gICAgICAgIHsgYWxpYXM6IFwic2ExXCIsIGNvbW1hbmQ6IFwic2Nhbi1hbmFseXplIDNcIiB9LFxyXG4gICAgICAgIHsgYWxpYXM6IFwic2EyXCIsIGNvbW1hbmQ6IFwic2Nhbi1hbmFseXplIDVcIiB9LFxyXG4gICAgICAgIHsgYWxpYXM6IFwic2EzXCIsIGNvbW1hbmQ6IFwic2Nhbi1hbmFseXplIDEwXCIgfSxcclxuICAgICAgICB7IGFsaWFzOiBcImJydXRlc3NoXCIsIGNvbW1hbmQ6IFwiaG9tZTsgY29ubmVjdCBkYXJrd2ViOyBidXkgLWw7IGJ1eSBicnV0ZXNzaC5leGU7IGhvbWVcIiB9LFxyXG4gICAgICAgIHsgYWxpYXM6IFwiZnRwY3JhY2tcIiwgY29tbWFuZDogXCJob21lOyBjb25uZWN0IGRhcmt3ZWI7IGJ1eSAtbDsgYnV5IGZ0cGNyYWNrLmV4ZTsgaG9tZVwiIH0sXHJcbiAgICAgICAgeyBhbGlhczogXCJyZWxheXNtdHBcIiwgY29tbWFuZDogXCJob21lOyBjb25uZWN0IGRhcmt3ZWI7IGJ1eSAtbDsgYnV5IHJlbGF5c210cC5leGU7IGhvbWVcIiB9LFxyXG4gICAgICAgIHsgYWxpYXM6IFwiaHR0cHdvcm1cIiwgY29tbWFuZDogXCJob21lOyBjb25uZWN0IGRhcmt3ZWI7IGJ1eSAtbDsgYnV5IGh0dHB3b3JtLmV4ZTsgaG9tZVwiIH0sXHJcbiAgICAgICAgeyBhbGlhczogXCJzcWxpbmplY3RcIiwgY29tbWFuZDogXCJob21lOyBjb25uZWN0IGRhcmt3ZWI7IGJ1eSAtbDsgYnV5IHNxbGluamVjdC5leGU7IGhvbWVcIiB9LFxyXG5cclxuICAgIF07XHJcblxyXG4gICAgbGV0IGFsaWFzQ29tbWFuZHMgPSBhbGlhc2VzLm1hcCgoeyBhbGlhcywgY29tbWFuZCB9KSA9PiBgYWxpYXMgJHthbGlhc309XCIke2NvbW1hbmR9XCJgKS5qb2luKFwiOyBcIik7XHJcbiAgICBucy50cHJpbnQoXCJTVUNDRVNTOiBDb3B5IGFuZCBwYXN0ZSB0aGUgZm9sbG93aW5nIGNvbW1hbmQgaW50byB5b3VyIHRlcm1pbmFsOlwiKTtcclxuICAgIG5zLnRwcmludChhbGlhc0NvbW1hbmRzKTtcclxufVxyXG4iXX0=\",\"filename\":\"alias.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"trader\",\"darkweb\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"Temp/stock-hasTIXAPIAccess.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-hasTIXAPIAccess.txt\",\"text\":\"true\"}}],[\"Temp/stock-getPosition.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-getPosition.txt\",\"text\":\"{\\\"ECP\\\":[23600000,12087.942400296062,0,0],\\\"MGCP\\\":[18000000,22900.72535394258,0,0],\\\"BLD\\\":[0,0,0,0],\\\"CLRK\\\":[22700000,38299.62614224054,0,0],\\\"OMTK\\\":[9600000,50019.34729273958,0,0],\\\"FSIG\\\":[5500000,43217.343585262555,0,0],\\\"KGI\\\":[14100000,28851.19104384567,0,0],\\\"FLCM\\\":[11600000,10145.30339803474,0,0],\\\"STM\\\":[0,0,0,0],\\\"DCOMM\\\":[11700000,21526.566660959626,0,0],\\\"HLS\\\":[0,0,0,0],\\\"VITA\\\":[0,0,0,0],\\\"ICRS\\\":[0,0,0,0],\\\"UNV\\\":[6400000,21820.674698730556,0,0],\\\"AERO\\\":[0,0,0,0],\\\"OMN\\\":[0,0,0,0],\\\"SLRS\\\":[0,0,0,0],\\\"GPH\\\":[0,0,0,0],\\\"NVMD\\\":[0,0,0,0],\\\"WDS\\\":[0,0,0,0],\\\"LXO\\\":[0,0,0,0],\\\"RHOC\\\":[0,0,0,0],\\\"APHE\\\":[0,0,0,0],\\\"SYSC\\\":[7400000,8391.747789693258,0,0],\\\"CTK\\\":[0,0,0,0],\\\"NTLK\\\":[0,0,0,0],\\\"OMGA\\\":[0,0,0,0],\\\"FNS\\\":[0,0,0,0],\\\"JGN\\\":[9100000,529.2124945460264,0,0],\\\"SGC\\\":[0,0,0,0],\\\"CTYS\\\":[0,0,0,0],\\\"MDYN\\\":[3200000,9552.993583151285,0,0],\\\"TITN\\\":[3700000,19696.21158877307,0,0]}\"}}],[\"Temp/stock-sellStock.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-sellStock.txt\",\"text\":\"19542.963770523605\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"src/play.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7601.609999995278,\"ramUsage\":3.3,\"server\":\"home\",\"scriptKey\":\"src/play.js*[]\",\"title\":\"src/play.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"src/worm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7601.609999995278,\"ramUsage\":2.95,\"server\":\"home\",\"scriptKey\":\"src/worm.js*[]\",\"title\":\"src/worm.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":247810.2423311346,\"onlineMoneyMade\":407664485.86566126,\"onlineRunningTime\":7590.609999995288,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"sigma-cosmetics\\\"]\",\"title\":\"src/bm.js sigma-cosmetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":247810.2423311346,\"onlineMoneyMade\":85784778.80351189,\"onlineRunningTime\":7590.609999995288,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"foodnstuff\\\"]\",\"title\":\"src/bm.js foodnstuff\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":136331.75722414462,\"onlineMoneyMade\":238420998.27880076,\"onlineRunningTime\":7590.609999995288,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"n00dles\\\"]\",\"title\":\"src/bm.js n00dles\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":304754.7109505933,\"onlineMoneyMade\":2585525657.2388754,\"onlineRunningTime\":7470.409999995397,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"src/bm.js harakiri-sushi\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":365754.9130616037,\"onlineMoneyMade\":862693974.257863,\"onlineRunningTime\":7470.409999995397,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"nectar-net\\\"]\",\"title\":\"src/bm.js nectar-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":304836.8108188451,\"onlineMoneyMade\":940646071.3307747,\"onlineRunningTime\":7470.409999995397,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"src/bm.js hong-fang-tea\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":304877.860752971,\"onlineMoneyMade\":785717601.7012104,\"onlineRunningTime\":7470.409999995397,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"joesguns\\\"]\",\"title\":\"src/bm.js joesguns\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":310731.5813593216,\"onlineMoneyMade\":830473164.9466779,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"iron-gym\\\"]\",\"title\":\"src/bm.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":317153.4330539496,\"onlineMoneyMade\":11965733057.505339,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"omega-net\\\"]\",\"title\":\"src/bm.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":655505.0520905372,\"onlineMoneyMade\":19131616913.564285,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"netlink\\\"]\",\"title\":\"src/bm.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":467956.11305620754,\"onlineMoneyMade\":19639441403.835983,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/bm.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":473896.8595228284,\"onlineMoneyMade\":0,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/bm.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":233097.94594044334,\"onlineMoneyMade\":6072419915.547855,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"phantasy\\\"]\",\"title\":\"src/bm.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":424817.55828197266,\"onlineMoneyMade\":34508864301.34762,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"summit-uni\\\"]\",\"title\":\"src/bm.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":567720.5889610479,\"onlineMoneyMade\":28433053366.801308,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/bm.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":407340.1383284975,\"onlineMoneyMade\":60154421919.48107,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/bm.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":500776.35638854577,\"onlineMoneyMade\":29211562512.794765,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"computek\\\"]\",\"title\":\"src/bm.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":662555.788775935,\"onlineMoneyMade\":0,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"aevum-police\\\"]\",\"title\":\"src/bm.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":644114.5163692631,\"onlineMoneyMade\":108630194239.0877,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"unitalife\\\"]\",\"title\":\"src/bm.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":555655.1923227541,\"onlineMoneyMade\":101815282638.29524,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"zb-def\\\"]\",\"title\":\"src/bm.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":657698.7605701621,\"onlineMoneyMade\":63501531065.503716,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/bm.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":597949.7604513412,\"onlineMoneyMade\":100771366544.48357,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"nova-med\\\"]\",\"title\":\"src/bm.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":523209.3243896388,\"onlineMoneyMade\":33231296790.47509,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"rho-construction\\\"]\",\"title\":\"src/bm.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":545602.8844539076,\"onlineMoneyMade\":72444281922.20047,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"syscore\\\"]\",\"title\":\"src/bm.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":272177.48322828417,\"onlineMoneyMade\":621052740.6262492,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"neo-net\\\"]\",\"title\":\"src/bm.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":310206.1422025104,\"onlineMoneyMade\":5528789127.010664,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"silver-helix\\\"]\",\"title\":\"src/bm.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":364029.1738309908,\"onlineMoneyMade\":2885169890.807888,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/bm.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":448275.1326388387,\"onlineMoneyMade\":9626028895.726273,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/bm.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":536424.11918345,\"onlineMoneyMade\":26108861345.999306,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"catalyst\\\"]\",\"title\":\"src/bm.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":668726.414873802,\"onlineMoneyMade\":26879614671.557995,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/bm.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":650698.9258030189,\"onlineMoneyMade\":199435872463.7707,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"global-pharm\\\"]\",\"title\":\"src/bm.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":726051.8268818996,\"onlineMoneyMade\":81924259453.99461,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"univ-energy\\\"]\",\"title\":\"src/bm.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":386526.1797293257,\"onlineMoneyMade\":33383214413.243893,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"the-hub\\\"]\",\"title\":\"src/bm.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":194412.4880201876,\"onlineMoneyMade\":2748094664.321903,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"max-hardware\\\"]\",\"title\":\"src/bm.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"src/bm.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":272177.48322828417,\"onlineMoneyMade\":1940357625.6189017,\"onlineRunningTime\":4770.4099999978525,\"ramUsage\":8,\"server\":\"home\",\"scriptKey\":\"src/bm.js*[\\\"zer0\\\"]\",\"title\":\"src/bm.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"summit-uni\\\"]\",\"title\":\"src/scripts/grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.81000000000071,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.61000000000038,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.610000000000355,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.610000000000326,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.61000000000031,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.6100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.610000000000284,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.61000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.61000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.61000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.61000000000021,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.6100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.610000000000184,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.61000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.61000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"src/scripts/grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"computek\\\"]\",\"title\":\"src/scripts/grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.81000000000071,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.610000000000355,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.610000000000326,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.61000000000031,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.6100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.610000000000284,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.61000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.61000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.61000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.61000000000021,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.01000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.01000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.010000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.01000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.01000000000096,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.01000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.01000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.0100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.01000000000089,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.01000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.01000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.01000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.0100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.01000000000079,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.01000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.01000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.01000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.01000000000072,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/grow.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":182.2099999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.20999999999825,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.20999999999836,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.20999999999842,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.20999999999853,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":175.2099999999986,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":174.20999999999864,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":173.2099999999987,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":172.20999999999876,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.20999999999887,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.20999999999893,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.20999999999898,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":167.20999999999904,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":166.2099999999991,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.20999999999916,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.2099999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.20999999999927,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.20999999999933,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.20999999999938,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":160.20999999999944,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":159.2099999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":157.2099999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":156.20999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.20999999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.20999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":153.20999999999984,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.2099999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.20999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.21,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":148.21000000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.21000000000018,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":146.21000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":144.21000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.2100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000052,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.21000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.2100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.2100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.21000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000092,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.21000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.21000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":131.2100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":130.21000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.2100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.21000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":127.21000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":126.21000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.21000000000124,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":124.21000000000123,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.01000000000121,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":122.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.01000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/grow.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":124.01000000000123,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.01000000000121,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":122.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.81000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.81000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.81000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.810000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.81000000000098,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.81000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.81000000000095,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.81000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.81000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.81000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.8100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.81000000000088,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.81000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.81000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.81000000000081,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.8100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.81000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.81000000000071,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.610000000000355,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.610000000000326,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.61000000000031,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.6100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.610000000000284,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.61000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.61000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.61000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.61000000000021,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.6100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.610000000000184,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.61000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.61000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.20999999999768,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.20999999999773,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":189.2099999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.20999999999785,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":187.2099999999979,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":186.20999999999796,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":185.20999999999802,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":184.20999999999808,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":183.20999999999813,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":182.2099999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.20999999999825,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.20999999999836,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.20999999999842,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.20999999999853,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":175.2099999999986,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":174.20999999999864,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":173.2099999999987,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":172.20999999999876,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.20999999999887,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.20999999999893,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.20999999999898,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":167.20999999999904,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":166.2099999999991,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.20999999999916,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.2099999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.20999999999927,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.20999999999933,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.20999999999938,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":160.20999999999944,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":159.2099999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":157.2099999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":156.20999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.20999999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.20999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":153.20999999999984,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.2099999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.20999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.21,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":148.21000000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.21000000000018,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":146.21000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":144.21000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.2100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000052,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.21000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.2100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.2100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.21000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000092,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.21000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":131.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":130.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.01000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":127.01000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":126.01000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000124,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":124.01000000000123,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.01000000000121,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":122.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.01000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.01000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.010000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.01000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.01000000000096,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.01000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.01000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.0100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.01000000000089,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.01000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.01000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.01000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.0100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.01000000000079,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.01000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.01000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.01000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.01000000000072,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.81000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.81000000000033,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.810000000000315,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.8100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.81000000000029,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.81000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.81000000000026,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.810000000000244,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.81000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nova-med\\\"]\",\"title\":\"src/scripts/grow.js nova-med\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":202.40999999999704,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":201.4099999999971,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.40999999999715,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":199.4099999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":198.40999999999727,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":197.40999999999732,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.2099999999974,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":195.20999999999745,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":194.2099999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.20999999999756,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":192.20999999999762,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.20999999999768,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.20999999999773,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":189.2099999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.20999999999785,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":187.2099999999979,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":186.20999999999796,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":185.20999999999802,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":184.20999999999808,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":183.20999999999813,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":182.2099999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.20999999999825,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.20999999999836,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.20999999999842,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.20999999999853,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":175.2099999999986,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":174.20999999999864,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":173.2099999999987,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":172.20999999999876,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.20999999999887,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.20999999999893,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.20999999999898,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":167.20999999999904,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":166.2099999999991,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.20999999999916,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.2099999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.20999999999927,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.20999999999933,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.20999999999938,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":160.20999999999944,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":159.2099999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":157.2099999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":156.20999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.20999999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.20999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":153.20999999999984,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.2099999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.20999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.21,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":148.21000000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.21000000000018,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":146.21000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":144.21000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.2100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000052,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.21000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/grow.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.20999999999785,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":187.2099999999979,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":186.20999999999796,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":185.20999999999802,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":184.20999999999808,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":183.20999999999813,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":182.2099999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.20999999999825,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.20999999999836,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.20999999999842,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.20999999999853,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":175.2099999999986,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":174.20999999999864,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":173.2099999999987,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":172.20999999999876,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.20999999999887,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.20999999999893,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.20999999999898,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":167.20999999999904,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":166.2099999999991,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.20999999999916,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.2099999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.20999999999927,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.20999999999933,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.20999999999938,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":160.20999999999944,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":159.2099999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":157.2099999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":156.20999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.20999999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.20999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":153.20999999999984,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.2099999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.20999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.21,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":148.21000000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.21000000000018,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":146.21000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":144.21000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.2100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000052,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.21000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.2100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.2100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.21000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000092,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.21000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.21000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":131.2100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":130.21000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.2100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.21000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":127.21000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":126.21000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.21000000000124,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":124.21000000000123,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.01000000000121,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":122.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.01000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.01000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.010000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.01000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.01000000000096,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.01000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.01000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.0100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.01000000000089,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.01000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.01000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.01000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.0100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.01000000000079,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.01000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.01000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.01000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.01000000000072,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.81000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.81000000000033,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.810000000000315,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.8100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.81000000000029,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.81000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.81000000000026,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.810000000000244,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.81000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/grow.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.2100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.2100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.21000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000092,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.21000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.21000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":131.2100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":130.21000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.2100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.21000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":127.21000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":126.21000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.21000000000124,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":124.21000000000123,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.01000000000121,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":122.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.01000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.01000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.010000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.01000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.01000000000096,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.01000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.01000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.0100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.01000000000089,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.01000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.01000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.01000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.0100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.01000000000079,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.01000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.01000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.01000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.01000000000072,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.81000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.81000000000033,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.810000000000315,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.8100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.81000000000029,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.81000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.81000000000026,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.810000000000244,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.81000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"src/scripts/grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.8100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.81000000000088,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.81000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.81000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.81000000000081,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.8100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.81000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.81000000000071,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.610000000000326,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.61000000000031,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.6100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.610000000000284,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.61000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.61000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.61000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.61000000000021,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.6100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.610000000000184,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.61000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.61000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/grow.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.81000000000095,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.81000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.81000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.81000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.8100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.81000000000088,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.81000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.81000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.81000000000081,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.8100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.81000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.81000000000071,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.61000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.61000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.6100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.61000000000038,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.610000000000355,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.610000000000326,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.61000000000031,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.6100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.610000000000284,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.61000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.61000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.61000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.61000000000021,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.6100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.610000000000184,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.61000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.61000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"aevum-police\\\"]\",\"title\":\"src/scripts/grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":167.20999999999904,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":166.2099999999991,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.20999999999916,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.2099999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.00999999999928,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.00999999999934,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.0099999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":160.20999999999944,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":159.2099999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":157.2099999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":156.20999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.20999999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999998,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":153.00999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.0099999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.00999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.01000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.01000000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":148.01000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":146.01000000000025,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.0100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":144.01000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.01000000000042,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.01000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.0100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.0100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":131.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":130.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.01000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":127.01000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":126.01000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000124,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":124.01000000000123,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.01000000000121,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":122.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.81000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.81000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.81000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.810000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.81000000000098,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.81000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.81000000000095,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.81000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.81000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.81000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.8100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.81000000000088,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.81000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.81000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.81000000000081,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.8100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.81000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.81000000000071,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.610000000000355,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.610000000000326,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.61000000000031,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.6100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.610000000000284,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.61000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.61000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.61000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.61000000000021,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.6100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/grow.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":231.4099999999954,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":230.40999999999545,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":229.4099999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":228.40999999999556,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":227.40999999999562,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":226.40999999999568,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":225.40999999999573,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":224.4099999999958,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":223.40999999999585,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":222.4099999999959,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":221.40999999999596,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":220.40999999999602,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":219.40999999999607,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":218.40999999999613,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":217.4099999999962,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":216.40999999999624,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":215.4099999999963,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":214.40999999999636,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.40999999999642,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":212.40999999999647,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.40999999999653,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":210.4099999999966,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":209.40999999999664,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":208.4099999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":207.40999999999676,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":206.4099999999968,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":205.40999999999687,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":204.40999999999693,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":203.40999999999698,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":202.40999999999704,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":201.4099999999971,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.40999999999715,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":199.4099999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":198.40999999999727,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":197.20999999999734,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.2099999999974,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":195.20999999999745,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":194.2099999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.20999999999756,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":192.20999999999762,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.20999999999768,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.20999999999773,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":189.2099999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.20999999999785,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":187.2099999999979,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":186.20999999999796,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":185.20999999999802,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":184.20999999999808,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":183.20999999999813,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":182.2099999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.20999999999825,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.20999999999836,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.20999999999842,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.20999999999853,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":175.2099999999986,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":174.20999999999864,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":173.2099999999987,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":172.20999999999876,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.20999999999887,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.20999999999893,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.20999999999898,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":167.20999999999904,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":166.2099999999991,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.20999999999916,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.2099999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.00999999999928,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.00999999999934,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.0099999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":160.20999999999944,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":159.2099999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":157.2099999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":156.20999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.20999999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.20999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":153.00999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.0099999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.00999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.01000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.01000000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":148.01000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":146.01000000000025,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.0100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":144.01000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.01000000000042,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.01000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.0100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.0100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":131.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":130.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.01000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":127.01000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":126.01000000000126,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000124,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":124.01000000000123,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.01000000000121,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":122.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.81000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.81000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.81000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.810000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.81000000000098,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.81000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.81000000000095,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.81000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.81000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.81000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.8100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.81000000000088,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.81000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.81000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.81000000000081,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.8100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.81000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.81000000000071,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.610000000000326,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.61000000000031,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.6100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.610000000000284,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.61000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.61000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.61000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.61000000000021,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.6100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.610000000000184,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.61000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.61000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"univ-energy\\\"]\",\"title\":\"src/scripts/grow.js univ-energy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.810000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.8100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/grow.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"src/scripts/grow.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.81000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.81000000000033,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.810000000000315,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.8100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.81000000000029,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.81000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.81000000000026,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.810000000000244,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.81000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"src/scripts/grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.81000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.81000000000033,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.810000000000315,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.8100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.81000000000029,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.81000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.81000000000026,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.810000000000244,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.81000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/grow.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":156.20999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.20999999999972,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.20999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":153.20999999999984,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.2099999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.20999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.21,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":148.21000000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.21000000000018,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":146.21000000000024,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":144.21000000000035,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.2100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000052,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.2100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.2100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.21000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000092,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.21000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.21000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/weaken.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.40999999999642,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":212.40999999999647,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.40999999999653,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":210.4099999999966,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":209.40999999999664,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":208.4099999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":207.40999999999676,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.01000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.010000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.01000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.01000000000096,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.01000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.01000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.0100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.01000000000089,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.01000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.01000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.01000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.01000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.01000000000072,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.8100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.81000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.81000000000033,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/weaken.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"silver-helix\\\"]\",\"title\":\"src/scripts/grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.01000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.01000000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":148.01000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":146.01000000000025,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.0100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":144.01000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.01000000000042,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.01000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"alpha-ent\\\"]\",\"title\":\"src/scripts/weaken.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.0100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.0100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.81000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.81000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.81000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.81000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.81000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.8100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.81000000000088,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.81000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.81000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.81000000000081,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.8100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.81000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.6100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.610000000000184,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.61000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.61000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"rho-construction\\\"]\",\"title\":\"src/scripts/weaken.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/grow.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/grow.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/grow.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/grow.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/grow.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/grow.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/grow.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.21000000000124,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":124.21000000000123,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.01000000000121,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":122.0100000000012,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.01000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":112.01000000000106,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.01000000000104,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.01000000000103,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.01000000000101,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.010000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":107.01000000000099,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.01000000000097,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.01000000000096,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.01000000000094,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.01000000000093,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.01000000000091,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.0100000000009,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.01000000000089,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.01000000000086,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.01000000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.01000000000083,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.0100000000008,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.01000000000079,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.01000000000077,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.01000000000076,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.01000000000074,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.01000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.01000000000072,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.0100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.81000000000068,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":83.81000000000066,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":82.81000000000064,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.81000000000063,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":80.81000000000061,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.8100000000006,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":78.81000000000058,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":77.81000000000057,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.81000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.81000000000054,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.81000000000053,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.81000000000051,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":72.8100000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.81000000000049,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.81000000000047,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":69.81000000000046,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":68.81000000000044,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.81000000000043,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":66.81000000000041,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.8100000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":64.81000000000039,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.81000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.81000000000033,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.810000000000315,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.8100000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.81000000000029,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.81000000000027,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.81000000000026,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.810000000000244,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.81000000000023,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.810000000000116,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.8100000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"snap-fitness\\\"]\",\"title\":\"src/scripts/grow.js snap-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.81000000000037,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.81000000000036,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.81000000000034,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":60.81000000000033,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.810000000000315,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.8100000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.81000000000029,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.81000000000027,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.81000000000026,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.810000000000244,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.81000000000023,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/hack.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":118.01000000000114,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/weaken.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":117.01000000000113,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/weaken.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":116.01000000000111,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/weaken.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":115.0100000000011,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/weaken.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":114.01000000000109,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/weaken.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"src/scripts/weaken.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.81000000000027,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.81000000000026,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.810000000000244,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.81000000000023,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.81000000000019,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.81000000000017,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.81000000000016,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.810000000000144,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"zb-def\\\"]\",\"title\":\"src/scripts/hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"syscore\\\"]\",\"title\":\"src/scripts/hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"iron-gym\\\"]\",\"title\":\"src/scripts/grow.js iron-gym\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.610000000000184,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.61000000000017,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.61000000000014,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.61000000000013,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.61000000000011,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.6100000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.610000000000085,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.610000000000056,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.61000000000004,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.610000000000014,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.609999999999985,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.60999999999997,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.60999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.60999999999993,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.60999999999992,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.609999999999953,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"src/scripts/hack.js lexo-corp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"src/scripts/grow.js harakiri-sushi\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"src/scripts/grow.js harakiri-sushi\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"src/scripts/grow.js harakiri-sushi\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"src/scripts/grow.js harakiri-sushi\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"harakiri-sushi\\\"]\",\"title\":\"src/scripts/grow.js harakiri-sushi\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zer0\\\"]\",\"title\":\"src/scripts/grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zer0\\\"]\",\"title\":\"src/scripts/grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zer0\\\"]\",\"title\":\"src/scripts/grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zer0\\\"]\",\"title\":\"src/scripts/grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zer0\\\"]\",\"title\":\"src/scripts/grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zer0\\\"]\",\"title\":\"src/scripts/grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"zer0\\\"]\",\"title\":\"src/scripts/grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/weaken.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/weaken.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/weaken.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/weaken.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/weaken.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/weaken.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"unitalife\\\"]\",\"title\":\"src/scripts/weaken.js unitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/weaken.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/weaken.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/weaken.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"crush-fitness\\\"]\",\"title\":\"src/scripts/weaken.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"the-hub\\\"]\",\"title\":\"src/scripts/hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nectar-net\\\"]\",\"title\":\"src/scripts/grow.js nectar-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nectar-net\\\"]\",\"title\":\"src/scripts/grow.js nectar-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nectar-net\\\"]\",\"title\":\"src/scripts/grow.js nectar-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"nectar-net\\\"]\",\"title\":\"src/scripts/grow.js nectar-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"max-hardware\\\"]\",\"title\":\"src/scripts/grow.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"max-hardware\\\"]\",\"title\":\"src/scripts/grow.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"max-hardware\\\"]\",\"title\":\"src/scripts/grow.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"max-hardware\\\"]\",\"title\":\"src/scripts/grow.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"sigma-cosmetics\\\"]\",\"title\":\"src/scripts/grow.js sigma-cosmetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"sigma-cosmetics\\\"]\",\"title\":\"src/scripts/grow.js sigma-cosmetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"foodnstuff\\\"]\",\"title\":\"src/scripts/grow.js foodnstuff\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"foodnstuff\\\"]\",\"title\":\"src/scripts/grow.js foodnstuff\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"omega-net\\\"]\",\"title\":\"src/scripts/grow.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"catalyst\\\"]\",\"title\":\"src/scripts/hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"neo-net\\\"]\",\"title\":\"src/scripts/grow.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"neo-net\\\"]\",\"title\":\"src/scripts/grow.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"neo-net\\\"]\",\"title\":\"src/scripts/grow.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"neo-net\\\"]\",\"title\":\"src/scripts/grow.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"neo-net\\\"]\",\"title\":\"src/scripts/grow.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"neo-net\\\"]\",\"title\":\"src/scripts/grow.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"neo-net\\\"]\",\"title\":\"src/scripts/grow.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/weaken.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/weaken.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"src/scripts/weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/weaken.js*[\\\"netlink\\\"]\",\"title\":\"src/scripts/weaken.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"joesguns\\\"]\",\"title\":\"src/scripts/grow.js joesguns\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"joesguns\\\"]\",\"title\":\"src/scripts/grow.js joesguns\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/hack.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/hack.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/hack.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"phantasy\\\"]\",\"title\":\"src/scripts/hack.js phantasy\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"max-hardware\\\"]\",\"title\":\"src/scripts/hack.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"max-hardware\\\"]\",\"title\":\"src/scripts/hack.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"src/scripts/hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"src/scripts/hack.js*[\\\"max-hardware\\\"]\",\"title\":\"src/scripts/hack.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"src/scripts/grow.js hong-fang-tea\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"src/scripts/grow.js hong-fang-tea\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"src/scripts/grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"src/scripts/grow.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"src/scripts/grow.js hong-fang-tea\",\"threads\":1,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":14,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"8.3.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":37147733107,\"moneyMax\":928693327675,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1103,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":12,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"10.3.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":48900200424,\"moneyMax\":1222505010600,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1306,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":9,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"28.6.9.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":26551667330,\"moneyMax\":663791683250,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":991,\"serverGrowth\":74,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":7,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"5.1.0.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":26369600614,\"moneyMax\":659240015350,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1197,\"serverGrowth\":67,\"runningScripts\":[]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":7,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"31.1.9.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"ecorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":24567787731,\"moneyMax\":614194693275,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1124,\"serverGrowth\":81,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":9,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"13.6.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":47,\"hackDifficulty\":47,\"minDifficulty\":16,\"moneyAvailable\":17061610070,\"moneyMax\":426540251750,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":987,\"serverGrowth\":62,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":7,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"2.8.3.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"vitalife\",\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":16944521313,\"moneyMax\":423613032825,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1071,\"serverGrowth\":96,\"runningScripts\":[]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":7,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"76.6.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"fulcrumtech\",\"blade\",\"clarkinc\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":24827711995,\"moneyMax\":620692799875,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1047,\"serverGrowth\":85,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":11,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"45.7.4.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"fulcrumtech\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":24111602933,\"moneyMax\":602790073325,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1136,\"serverGrowth\":95,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":9,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"68.5.5.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"titan-labs\",\"4sigma\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":1716668466,\"moneyMax\":42916711650,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1019,\"serverGrowth\":93,\"runningScripts\":[]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-206771-CyberSec.cct\",\"type\":\"Array Jumping Game\",\"data\":[1,1,5,0,0,3,4,3,0,8,10],\"reward\":{\"type\":0,\"name\":\"CyberSec\"}}}],\"cpuCores\":12,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"12.3.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1500,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":8,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"40.2.0.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":1047333822,\"moneyMax\":26183345550,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":999,\"serverGrowth\":83,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"60.8.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":938871519,\"moneyMax\":23471787975,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1010,\"serverGrowth\":55,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":10,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"74.2.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"solaris\",\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":654320327,\"moneyMax\":16358008175,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":947,\"serverGrowth\":47,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"2.6.7.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":577938907,\"moneyMax\":14448472675,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":852,\"serverGrowth\":75,\"runningScripts\":[]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":9,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"92.7.0.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"microdyne\",\"omnitek\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":795716300,\"moneyMax\":19892907500,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":878,\"serverGrowth\":72,\"runningScripts\":[]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"42.3.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":989165693,\"moneyMax\":24729142325,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":922,\"serverGrowth\":85,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":9,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"17.3.3.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"univ-energy\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"univ-energy\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"univ-energy\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"univ-energy\"}}]]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":32.598000000000255,\"minDifficulty\":29,\"moneyAvailable\":21992627501.078053,\"moneyMax\":29573525200,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":842,\"serverGrowth\":85,\"runningScripts\":[]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":11,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"50.8.8.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"infocomm\",\"fulcrumtech\",\"stormtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":803540626,\"moneyMax\":20088515650,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":817,\"serverGrowth\":76,\"runningScripts\":[]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":11,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"47.4.9.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zb-def\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":633119168,\"moneyMax\":15827979200,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":823,\"serverGrowth\":74,\"runningScripts\":[]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"28.9.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zeus-med\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":808353536,\"moneyMax\":20208838400,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":921,\"serverGrowth\":78,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"86.4.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aevum-police\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":797396855,\"moneyMax\":19934921375,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":843,\"serverGrowth\":70,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"69.4.0.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":1056394057,\"moneyMax\":26409851425,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":867,\"serverGrowth\":58,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"8.0.6.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"galactic-cyber\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":933125606,\"moneyMax\":23328140150,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":898,\"serverGrowth\":60,\"runningScripts\":[]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":8,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"95.2.4.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"zb-def\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"zb-def\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"zb-def\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"zb-def\"}}]]},\"serversOnNetwork\":[\"zeus-med\",\"microdyne\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":26.716500000001158,\"minDifficulty\":21,\"moneyAvailable\":21385718845.080284,\"moneyMax\":23355394150,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":807,\"serverGrowth\":68,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":11,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"6.4.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"applied-energetics\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"applied-energetics\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"applied-energetics\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"applied-energetics\"}}]]},\"serversOnNetwork\":[\"taiyang-digital\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":30.86800000000085,\"minDifficulty\":26,\"moneyAvailable\":10012512108.878517,\"moneyMax\":18135057475,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":845,\"serverGrowth\":75,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":9,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"81.7.3.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\",\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":715555933,\"moneyMax\":17888898325,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":787,\"serverGrowth\":77,\"runningScripts\":[]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"79.1.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"global-pharm\",\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":1393322015,\"moneyMax\":34833050375,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":879,\"serverGrowth\":59,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"88.7.0.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"global-pharm\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"global-pharm\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"global-pharm\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"global-pharm\"}}]]},\"serversOnNetwork\":[\"lexo-corp\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":31.35800000000081,\"minDifficulty\":26,\"moneyAvailable\":24706900375.337086,\"moneyMax\":42865094175,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":806,\"serverGrowth\":88,\"runningScripts\":[]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-399868.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[10,[139,108,13,146,88,102,83,59,51,9,15,125,51,156]],\"reward\":{\"type\":3}}}],\"cpuCores\":10,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"34.9.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"nova-med\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"nova-med\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"nova-med\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"nova-med\"}}]]},\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":27.982000000000994,\"minDifficulty\":23,\"moneyAvailable\":23869150290.151543,\"moneyMax\":30924792900,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":809,\"serverGrowth\":66,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"4.1.6.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":1401142311,\"moneyMax\":35028557775,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":832,\"serverGrowth\":71,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"76.4.2.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"unitalife\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"unitalife\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"unitalife\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"unitalife\"}}]]},\"serversOnNetwork\":[\"galactic-cyber\",\"defcomm\",\"icarus\",\"solaris\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":30.224000000000885,\"minDifficulty\":25,\"moneyAvailable\":15673405977.426443,\"moneyMax\":26050196475,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":807,\"serverGrowth\":78,\"runningScripts\":[]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"16.2.3.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"lexo-corp\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"lexo-corp\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"lexo-corp\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"lexo-corp\"}}]]},\"serversOnNetwork\":[\"zb-institute\",\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":30.65200000000127,\"minDifficulty\":26,\"moneyAvailable\":17495602657.435055,\"moneyMax\":18290521650,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":650,\"serverGrowth\":62,\"runningScripts\":[]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"58.4.6.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"rho-construction\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"rho-construction\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"rho-construction\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"rho-construction\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":24.36562500000182,\"minDifficulty\":20,\"moneyAvailable\":8257529297.652062,\"moneyMax\":14192499450,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":523,\"serverGrowth\":47,\"runningScripts\":[]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":6,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"77.3.9.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"alpha-ent\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"alpha-ent\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"alpha-ent\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"alpha-ent\"}}]]},\"serversOnNetwork\":[\"summit-uni\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":27.668500000001707,\"minDifficulty\":22,\"moneyAvailable\":14762997777.67911,\"moneyMax\":16950397450,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":526,\"serverGrowth\":50,\"runningScripts\":[]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"70.1.4.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"aevum-police\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"aevum-police\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"aevum-police\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"aevum-police\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\",\"aerocorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":30.024000000001344,\"minDifficulty\":26,\"moneyAvailable\":5721091900,\"moneyMax\":5721091900,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":406,\"serverGrowth\":45,\"runningScripts\":[]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"21.4.6.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"rothman-uni\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"rothman-uni\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"rothman-uni\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"rothman-uni\"}}]]},\"serversOnNetwork\":[\"netlink\",\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":19.361250000002173,\"minDifficulty\":17,\"moneyAvailable\":3420977345.798428,\"moneyMax\":5608740525,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":425,\"serverGrowth\":45,\"runningScripts\":[]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"74.0.6.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"johnson-ortho\",\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":859276239,\"moneyMax\":21481905975,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":747,\"serverGrowth\":80,\"runningScripts\":[]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"79.7.8.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"summit-uni\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"summit-uni\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"summit-uni\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"summit-uni\"}}]]},\"serversOnNetwork\":[\"avmnite-02h\",\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":18.937375000001964,\"minDifficulty\":15,\"moneyAvailable\":3451859551.001728,\"moneyMax\":6000486800,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":445,\"serverGrowth\":50,\"runningScripts\":[]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"3.0.2.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"syscore\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"syscore\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"syscore\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"syscore\"}}]]},\"serversOnNetwork\":[\"computek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":22.42150000000185,\"minDifficulty\":20,\"moneyAvailable\":8015815643.160043,\"moneyMax\":13033395000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":597,\"serverGrowth\":68,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"44.9.9.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"catalyst\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"catalyst\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"catalyst\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"catalyst\"}}]]},\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":21.603750000002048,\"minDifficulty\":20,\"moneyAvailable\":7223439598.003555,\"moneyMax\":8149260400,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":412,\"serverGrowth\":54,\"runningScripts\":[]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"2.7.2.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"the-hub\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"the-hub\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"the-hub\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"the-hub\"}}]]},\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":17.871875000001502,\"minDifficulty\":13,\"moneyAvailable\":2785502459.877256,\"moneyMax\":3984438925,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":302,\"serverGrowth\":55,\"runningScripts\":[]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":true,\"ip\":\"30.4.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"computek\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"computek\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"computek\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"computek\"}}]]},\"serversOnNetwork\":[\"phantasy\",\"syscore\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":22.58062500000221,\"minDifficulty\":18,\"moneyAvailable\":3451549538.323706,\"moneyMax\":5992901100,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":359,\"serverGrowth\":56,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"90.2.8.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"netlink\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"netlink\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"netlink\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"netlink\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":30.158250000001743,\"minDifficulty\":25,\"moneyAvailable\":5180631601.858124,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":393,\"serverGrowth\":68,\"runningScripts\":[]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"41.7.9.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"johnson-ortho\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"johnson-ortho\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"johnson-ortho\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"johnson-ortho\"}}]]},\"serversOnNetwork\":[\"silver-helix\",\"zb-institute\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":20.773250000002463,\"minDifficulty\":16,\"moneyAvailable\":1233965116.6488862,\"moneyMax\":2014128600,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":270,\"serverGrowth\":48,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"33.1.6.2\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"n00dles\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"n00dles\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"n00dles\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"n00dles\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":5.993999999998428,\"minDifficulty\":1,\"moneyAvailable\":1335479.582448313,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"8.1.7.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"foodnstuff\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"foodnstuff\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"foodnstuff\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"foodnstuff\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":8.00537499999909,\"minDifficulty\":3,\"moneyAvailable\":37543988.20021653,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"86.5.0.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"sigma-cosmetics\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"sigma-cosmetics\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"sigma-cosmetics\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"sigma-cosmetics\"}}]]},\"serversOnNetwork\":[\"home\",\"zer0\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":8.068999999997098,\"minDifficulty\":3,\"moneyAvailable\":43589008.05975109,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"31.5.3.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"joesguns\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"joesguns\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"joesguns\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"joesguns\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":10.008999999997888,\"minDifficulty\":5,\"moneyAvailable\":46670142.13063021,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"12.0.2.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"zer0\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"zer0\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"zer0\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"zer0\"}}]]},\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":12.718874999999143,\"minDifficulty\":8,\"moneyAvailable\":127666804.78789297,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":2,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"86.8.2.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"nectar-net\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"nectar-net\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"nectar-net\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"nectar-net\"}}]]},\"serversOnNetwork\":[\"harakiri-sushi\",\"neo-net\",\"phantasy\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":12.006124999998129,\"minDifficulty\":7,\"moneyAvailable\":52573582.736527264,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"27.1.8.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"neo-net\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"neo-net\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"neo-net\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"neo-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":12.70787499999907,\"minDifficulty\":8,\"moneyAvailable\":88888936.56236441,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"81.5.9.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"silver-helix\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"silver-helix\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"silver-helix\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"CSEC\",\"the-hub\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":14.920999999999127,\"minDifficulty\":10,\"moneyAvailable\":755248377.4790319,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"20.8.8.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"hong-fang-tea\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"hong-fang-tea\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"hong-fang-tea\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"hong-fang-tea\"}}]]},\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":9.9091249999979,\"minDifficulty\":5,\"moneyAvailable\":53013683.15173222,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"76.3.4.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"harakiri-sushi\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"harakiri-sushi\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"harakiri-sushi\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"harakiri-sushi\"}}]]},\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":9.9614999999985,\"minDifficulty\":5,\"moneyAvailable\":74693957.26975875,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"28.3.9.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"phantasy\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"phantasy\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"phantasy\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"phantasy\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"computek\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":11.980874999999049,\"minDifficulty\":7,\"moneyAvailable\":453900792.60071135,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":2,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"49.5.1.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"max-hardware\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"max-hardware\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"max-hardware\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"max-hardware\"}}]]},\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":9.569999999998881,\"minDifficulty\":5,\"moneyAvailable\":189983436.73820034,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"20.9.6.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"omega-net\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"omega-net\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"omega-net\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"omega-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"netlink\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":31,\"hackDifficulty\":14.698499999999186,\"minDifficulty\":10,\"moneyAvailable\":1122498353.7275138,\"moneyMax\":1676941025,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":212,\"serverGrowth\":38,\"runningScripts\":[]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"62.2.1.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"crush-fitness\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"crush-fitness\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"crush-fitness\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"crush-fitness\"}}]]},\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":37,\"hackDifficulty\":17.127125000000195,\"minDifficulty\":12,\"moneyAvailable\":621854980.280961,\"moneyMax\":1000352275,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":246,\"serverGrowth\":29,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"89.2.9.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"iron-gym\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"iron-gym\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"iron-gym\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"iron-gym\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":14.385499999999238,\"minDifficulty\":10,\"moneyAvailable\":336971608.5647167,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"93.7.8.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"millenium-fitness\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"millenium-fitness\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"millenium-fitness\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"millenium-fitness\"}}]]},\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":21.412000000001473,\"minDifficulty\":17,\"moneyAvailable\":6250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":478,\"serverGrowth\":29,\"runningScripts\":[]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":10,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"92.7.5.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":954,\"serverGrowth\":54,\"runningScripts\":[]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"56.2.9.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"snap-fitness\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"snap-fitness\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"snap-fitness\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"snap-fitness\"}}]]},\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":15.966500000001501,\"minDifficulty\":15,\"moneyAvailable\":6366178890.0965605,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":714,\"serverGrowth\":49,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":11,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"80.4.5.6\",\"isConnectedTo\":true,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"run4theh111z\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"run4theh111z\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"run4theh111z\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"run4theh111z\"}}]]},\"serversOnNetwork\":[\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":545,\"serverGrowth\":1,\"runningScripts\":[]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"92.2.2.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"I.I.I.I\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"I.I.I.I\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"I.I.I.I\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"I.I.I.I\"}}]]},\"serversOnNetwork\":[\"computek\",\"rho-construction\",\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":340,\"serverGrowth\":1,\"runningScripts\":[]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"34.5.5.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"avmnite-02h\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"avmnite-02h\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"avmnite-02h\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"phantasy\",\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":208,\"serverGrowth\":1,\"runningScripts\":[]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":9,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"65.2.1.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\".\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\".\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\".\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\".\"}}]]},\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":522,\"serverGrowth\":1,\"runningScripts\":[]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"19.4.5.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"src/scripts/hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for hack.\\\");\\n        return;\\n    }\\n    await ns.hack(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9oYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNsRCxPQUFPO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGhhY2suXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5oYWNrKHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/hack.js\",\"server\":\"CSEC\"}}],[\"src/scripts/weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for weaken.\\\");\\n        return;\\n    }\\n    await ns.weaken(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vha2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NyYy9zY3JpcHRzL3dlYWtlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RUFBd0U7QUFFeEUsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDekIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVoQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO1FBQ3BELE9BQU87S0FDVjtJQUVELE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUVoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFkZSB0byBiZSBkZXBsb3llZCBieSBzcmMvd29ybXkvYWR2YW5jZWQvamFja3guanMgdG8gYSB0YXJnZXQgc2VydmVyXHJcblxyXG4vKiogQHBhcmFtIHtOU30gbnMgKiovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xyXG4gICAgY29uc3QgdGhyZWFkcyA9IG5zLmFyZ3NbMV0gfHwgMTtcclxuXHJcbiAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVSUk9SOiBObyB0YXJnZXQgc3BlY2lmaWVkIGZvciB3ZWFrZW4uXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0LCB7dGhyZWFkczogdGhyZWFkc30pO1xyXG5cclxufVxyXG4iXX0=\",\"filename\":\"src/scripts/weaken.js\",\"server\":\"CSEC\"}}],[\"src/scripts/grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"// Made to be deployed by src/wormy/advanced/jackx.js to a target server\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const threads = ns.args[1] || 1;\\n    if (!target) {\\n        ns.tprint(\\\"ERROR: No target specified for grow.\\\");\\n        return;\\n    }\\n    await ns.grow(target, { threads: threads });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3Jvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc2NyaXB0cy9ncm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQUV4RSxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDbEQsT0FBTztLQUNWO0lBRUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRTlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWRlIHRvIGJlIGRlcGxveWVkIGJ5IHNyYy93b3JteS9hZHZhbmNlZC9qYWNreC5qcyB0byBhIHRhcmdldCBzZXJ2ZXJcclxuXHJcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcclxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XHJcbiAgICBjb25zdCB0aHJlYWRzID0gbnMuYXJnc1sxXSB8fCAxO1xyXG5cclxuICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRVJST1I6IE5vIHRhcmdldCBzcGVjaWZpZWQgZm9yIGdyb3cuXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCwge3RocmVhZHM6IHRocmVhZHN9KTtcclxuXHJcbn1cclxuIl19\",\"filename\":\"src/scripts/grow.js\",\"server\":\"CSEC\"}}],[\"src/bm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    // Ensure the script is running on the home server\\n    if (ns.getHostname() !== 'home') {\\n        ns.tprint(\\\"This script should only be run from the home server. Exiting...\\\");\\n        return;\\n    }\\n\\n    const primaryTarget = ns.args[0];\\n    const reservedRam = 8;  // Reserve 8 GB of RAM on home server\\n    let startTimes = {};\\n    let allRootedServers = [];\\n\\n    const getSecurity = (targetServer) => ns.getServerSecurityLevel(targetServer);\\n    const getMoney = (targetServer) => ns.getServerMoneyAvailable(targetServer);\\n    const getMinSecurity = (targetServer) => ns.getServerMinSecurityLevel(targetServer);\\n    const getMaxMoney = (targetServer) => ns.getServerMaxMoney(targetServer);\\n\\n    // Function to get all servers and root new ones\\n    async function getAllServers(ns, startServer) {\\n        let servers = new Set([startServer]);\\n        let visited = {startServer: true};\\n        let i = 0;\\n\\n        while (i < Array.from(servers).length) {\\n            let nextServer = Array.from(servers)[i];\\n            let newServers = ns.scan(nextServer);\\n\\n            for (let newServer of newServers) {\\n                if (!visited[newServer] && newServer !== 'trader') {  // Exclude 'trader'\\n                    servers.add(newServer);\\n                    visited[newServer] = true;\\n                }\\n            }\\n\\n            i++;\\n        }\\n\\n        let newlyRootedServers = [];\\n        for (let server of Array.from(servers)) {\\n            if (!ns.hasRootAccess(server) && server !== 'trader') {  // Exclude 'trader'\\n                let openPorts = 0;\\n                let portsRequired = ns.getServerNumPortsRequired(server);\\n                if (ns.fileExists(\\\"bruteSSH.exe\\\", \\\"home\\\")) {\\n                    ns.brutessh(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"ftpcrack.exe\\\", \\\"home\\\")) {\\n                    ns.ftpcrack(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"sqlinject.exe\\\", \\\"home\\\")) {\\n                    ns.sqlinject(server);\\n                    openPorts++;\\n                }\\n                if (ns.fileExists(\\\"httpworm.exe\\\", \\\"home\\\")) {\\n                    ns.httpworm(server);\\n                    openPorts++;\\n                }\\n                if (portsRequired <= openPorts) {\\n                    await ns.nuke(server);\\n                    newlyRootedServers.push(server);\\n                    ns.tprint(`Gained root access to: ${server}`);\\n                }\\n            }\\n\\n            if (ns.hasRootAccess(server) && server !== 'trader' && !allRootedServers.includes(server)) {  // Exclude 'trader'\\n                allRootedServers.push(server);\\n                newlyRootedServers.push(server);\\n            }\\n        }\\n\\n        return newlyRootedServers;\\n    }\\n\\n    // Function to deploy scripts to rooted servers\\n    async function deployScriptsToServers(ns, servers, scripts) {\\n        for (let server of servers) {\\n            if (server === 'trader') continue;  // Skip 'trader'\\n            for (let script of scripts) {\\n                if (!ns.fileExists(script, server)) {\\n                    await ns.scp(`${script}`, server);\\n                    ns.tprint(`Copied ${script} to server ${server}`);\\n                }\\n            }\\n        }\\n    }\\n\\n    const scripts = ['/src/scripts/hack.js', '/src/scripts/weaken.js', '/src/scripts/grow.js'];\\n\\n    // Initial rooting and deployment\\n    let rootedServers = await getAllServers(ns, 'home');\\n    await deployScriptsToServers(ns, rootedServers, scripts);\\n\\n    var scriptQueue = [];\\n\\n    const scheduleScript = async (script, hostServer, startTime, targetServer, runtime) => {\\n        scriptQueue.push({\\n            script: script,\\n            hostServer: hostServer,\\n            startTime: startTime,\\n            targetServer: targetServer,\\n            runtime: runtime\\n        });\\n    };\\n\\n    // Function to calculate number of scripts needed to hit thresholds\\n    function calculateScriptsNeeded(ns, target, minSecurity, maxMoney) {\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const securityThreshold = minSecurity + 5;\\n        const moneyThreshold = maxMoney * 0.75;\\n\\n        let weakenScripts = 0;\\n        let growScripts = 0;\\n        let hackScripts = 0;\\n\\n        // Calculate how many weaken scripts are needed to reduce security to threshold\\n        const weakenAmountPerScript = ns.weakenAnalyze(1);\\n        while (currentSecurity - weakenScripts * weakenAmountPerScript > securityThreshold) {\\n            weakenScripts++;\\n        }\\n\\n        // Calculate how many grow scripts are needed to increase money to threshold\\n        if (currentMoney < moneyThreshold && currentSecurity < 100) {\\n            const growthAmount = ns.growthAnalyze(target, moneyThreshold / currentMoney);\\n            growScripts = Math.ceil(growthAmount);\\n        }\\n\\n        // Calculate how many hack scripts are needed to reach the desired money level\\n        const hackPercentage = ns.hackAnalyze(target);\\n        while (currentMoney - hackScripts * hackPercentage * currentMoney > moneyThreshold) {\\n            hackScripts++;\\n        }\\n\\n        return {weakenScripts, growScripts, hackScripts};\\n    }\\n\\n    // Function to calculate the impact of each script and adjust batching accordingly\\n    async function adjustBatching(ns, target) {\\n        if (target === 'trader') return [];  // Skip 'trader'\\n        const currentSecurity = getSecurity(target);\\n        const currentMoney = getMoney(target);\\n        const minSecurity = getMinSecurity(target);\\n        const maxMoney = getMaxMoney(target);\\n        let {weakenScripts, growScripts, hackScripts} = calculateScriptsNeeded(ns, target, minSecurity, maxMoney);\\n\\n        let scriptPlan = [];\\n        let runtime;\\n\\n        // Weaken first if security is too high\\n        if (weakenScripts > 0) {\\n            runtime = ns.getWeakenTime(target);\\n            scriptPlan.push({script: '/src/scripts/weaken.js', count: weakenScripts, runtime});\\n        }\\n\\n        // Grow next if money is too low and security is under control\\n        if (growScripts > 0 && currentSecurity < 100) {\\n            runtime = ns.getGrowTime(target);\\n            scriptPlan.push({script: '/src/scripts/grow.js', count: growScripts, runtime});\\n        }\\n\\n        // Hack last to extract money\\n        if (hackScripts > 0) {\\n            runtime = ns.getHackTime(target);\\n            scriptPlan.push({script: '/src/scripts/hack.js', count: hackScripts, runtime});\\n        }\\n\\n        return scriptPlan;\\n    }\\n\\n    if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n        // Initial scheduling based on current server state and predictions\\n        let scriptPlan = await adjustBatching(ns, primaryTarget);\\n        for (let job of scriptPlan) {\\n            for (let i = 0; i < job.count; i++) {\\n                await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n            }\\n        }\\n    }\\n\\n    while (true) {\\n        let now = new Date();\\n\\n        // Get newly rooted servers and deploy scripts\\n        let newRootedServers = await getAllServers(ns, 'home');\\n        if (newRootedServers.length > 0) {\\n            await deployScriptsToServers(ns, newRootedServers, scripts);\\n        }\\n\\n        if (scriptQueue.length > 0 && now >= scriptQueue[0].startTime) {\\n            var job = scriptQueue[0];\\n            var script = job.script;\\n            var hostServer = job.hostServer;\\n            const targetServer = job.targetServer;\\n            var ramRequired = ns.getScriptRam(script);\\n\\n            let serverToRunOn = hostServer;\\n\\n            // Adjust available RAM on home server, reserving 8 GB\\n            if (hostServer === 'home') {\\n                let homeServerMaxRam = ns.getServerMaxRam('home') - reservedRam;\\n                let homeServerUsedRam = ns.getServerUsedRam('home');\\n                let availableHomeRam = homeServerMaxRam - homeServerUsedRam;\\n\\n                // If not enough RAM on home server, find another server\\n                if (ramRequired > availableHomeRam) {\\n                    serverToRunOn = allRootedServers.find(server =>\\n                        server !== 'home' &&\\n                        server !== 'trader' &&  // Skip 'trader'\\n                        ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                    );\\n                }\\n            } else {\\n                serverToRunOn = allRootedServers.find(server =>\\n                    server !== 'trader' &&  // Skip 'trader'\\n                    ns.getServerMaxRam(server) - ns.getServerUsedRam(server) >= ramRequired\\n                );\\n            }\\n\\n            if (!serverToRunOn) {\\n                await ns.sleep(1000);  // Correct sleep to 1000ms (1 second)\\n                continue;\\n            }\\n\\n            // Ensure only hack, weaken, grow scripts are executed\\n            if (script === '/src/scripts/hack.js' || script === '/src/scripts/weaken.js' || script === '/src/scripts/grow.js') {\\n                ns.exec(script, serverToRunOn, 1, targetServer);\\n            }\\n            startTimes[job.script] = job.startTime;\\n            scriptQueue.shift();  // Remove the executed job from the queue\\n        }\\n\\n        if (scriptQueue.length === 0) {\\n            if (primaryTarget && primaryTarget !== 'trader') {  // Skip 'trader'\\n                var scriptPlan = await adjustBatching(ns, primaryTarget);\\n                for (let job of scriptPlan) {\\n                    for (let i = 0; i < job.count; i++) {\\n                        await scheduleScript(job.script, 'home', new Date(), primaryTarget, job.runtime);\\n                    }\\n                }\\n            }\\n        }\\n\\n        await ns.sleep(1000);  // Correct sleep to 1000ms (1 second )\\n    }\\n}\\n\",\"filename\":\"src/bm.js\",\"server\":\"CSEC\"}}]]},\"serversOnNetwork\":[\"hong-fang-tea\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":56,\"serverGrowth\":1,\"runningScripts\":[]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":11,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"10.2.4.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"48.3.3.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"61.2.0.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"trader\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"trader\",\"httpPortOpen\":false,\"ip\":\"18.9.8.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"server/trade.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { instanceCount, getConfiguration, getNsDataThroughFile, runCommand, getActiveSourceFiles, tryGetBitNodeMultipliers, formatMoney, formatNumberShort, formatDuration, getStockSymbols } from 'server/helper.js';\\nlet disableShorts = false;\\nlet commission = 100000; // Buy/sell commission. Expected profit must exceed this to buy anything.\\nlet totalProfit = 0.0; // We can keep track of how much we've earned since start.\\nlet lastLog = \\\"\\\"; // We update faster than the stock-market ticks, but we don't log anything unless there's been a change\\nlet allStockSymbols = null; // Stores the set of all symbols collected at start\\nlet mock = false; // If set to true, will \\\"mock\\\" buy/sell but not actually buy/sell anythingorecast\\nlet noisy = false; // If set to true, tprints and announces each time stocks are bought/sold\\nlet dictSourceFiles; // Populated at init, a dictionary of source-files the user has access to, and their level\\n// Pre-4S configuration (influences how we play the stock market before we have 4S data, after which everything's fool-proof)\\nlet showMarketSummary = false; // If set to true, will always generate and display the pre-4s forecast table in a separate tail window\\nlet minTickHistory; // This much history must be gathered before we will offer a stock forecast.\\nlet longTermForecastWindowLength; // This much history will be used to determine the historical probability of the stock (so long as no inversions are detected)\\nlet nearTermForecastWindowLength; // This much history will be used to detect recent negative trends and act on them immediately.\\n// The following pre-4s constants are hard-coded (not configurable via command line) but may require tweaking\\nconst marketCycleLength = 75; // Every this many ticks, all stocks have a 45% chance of \\\"reversing\\\" their probability. Something we must detect and act on quick to not lose profits.\\nconst maxTickHistory = 151; // This much history will be kept for purposes of detemining volatility and perhaps one day pinpointing the market cycle tick\\nconst inversionDetectionTolerance = 0.10; // If the near-term forecast is within this distance of (1 - long-term forecast), consider it a potential \\\"inversion\\\"\\nconst inversionLagTolerance = 5; // An inversion is \\\"trusted\\\" up to this many ticks after the normal nearTermForecastWindowLength expected detection time\\n// (Note: 33 total stocks * 45% inversion chance each cycle = ~15 expected inversions per cycle)\\n// The following pre-4s values are set during the lifetime of the program\\nlet marketCycleDetected = false; // We should not make risky purchasing decisions until the stock market cycle is detected. This can take a long time, but we'll be thanked\\nlet detectedCycleTick = 0; // This will be reset to zero once we've detected the market cycle point.\\nlet inversionAgreementThreshold = 6; // If this many stocks are detected as being in an \\\"inversion\\\", consider this the stock market cycle point\\nconst expectedTickTime = 6000;\\nconst catchUpTickTime = 4000;\\nlet lastTick = 0;\\nlet sleepInterval = 1000;\\nlet resetInfo = ( /**@returns{ResetInfo}*/() => undefined)(); // Information about the current bitnode\\nlet options;\\nconst argsSchema = [\\n    ['l', false],\\n    ['liquidate', false],\\n    ['mock', false],\\n    ['noisy', false],\\n    ['disable-shorts', false],\\n    ['reserve', null],\\n    ['fracB', 0.4],\\n    ['fracH', 0.2],\\n    ['buy-threshold', 0.0001],\\n    ['sell-threshold', 0],\\n    ['diversification', 0.34],\\n    ['disableHud', false],\\n    ['disable-purchase-tix-api', false],\\n    // The following settings are related only to tweaking pre-4s stock-market logic\\n    ['show-pre-4s-forecast', false],\\n    ['show-market-summary', false],\\n    ['pre-4s-buy-threshold-probability', 0.15],\\n    ['pre-4s-buy-threshold-return', 0.0015],\\n    ['pre-4s-sell-threshold-return', 0.0005],\\n    ['pre-4s-min-tick-history', 21],\\n    ['pre-4s-forecast-window', 51],\\n    ['pre-4s-inversion-detection-window', 10],\\n    ['pre-4s-min-blackout-window', 10],\\n    ['pre-4s-minimum-hold-time', 10],\\n    ['buy-4s-budget', 0.8], // Maximum corpus value we will sacrifice in order to buy 4S. Setting to 0 will never buy 4s.\\n];\\nexport function autocomplete(data, args) {\\n    data.flags(argsSchema);\\n    return [];\\n}\\n/** Requires access to the TIX API. Purchases access to the 4S Mkt Data API as soon as it can\\n * @param {NS} ns */\\nexport async function main(ns) {\\n    const runOptions = getConfiguration(ns, argsSchema);\\n    if (!runOptions)\\n        return; // Invalid options, or ran in --help mode.\\n    // If given the \\\"liquidate\\\" command, try to kill any versions of this script trading in stocks\\n    // NOTE: We must do this immediately before we start resetting / overwriting global state below (which is shared between script instances)\\n    const hasTixApiAccess = await getNsDataThroughFile(ns, 'ns.stock.hasTIXAPIAccess()');\\n    if (runOptions.l || runOptions.liquidate) {\\n        if (!hasTixApiAccess)\\n            return log(ns, 'ERROR: Cannot liquidate stocks because we do not have Tix Api Access', true, 'error');\\n        log(ns, 'INFO: Killing any other stockmaster processes...', false, 'info');\\n        await runCommand(ns, `ns.ps().filter(proc => proc.filename == '${ns.getScriptName()}' && !proc.args.includes('-l') && !proc.args.includes('--liquidate'))` +\\n            `.forEach(proc => ns.kill(proc.pid))`, '/Temp/kill-stockmarket-scripts.js');\\n        log(ns, 'INFO: Checking for and liquidating any stocks...', false, 'info');\\n        await liquidate(ns); // Sell all stocks\\n        return;\\n    } // Otherwise, prevent multiple instances of this script from being started, even with different args.\\n    if (await instanceCount(ns) > 1)\\n        return;\\n    ns.disableLog(\\\"ALL\\\");\\n    // Extract various options from the args (globals, purchasing decision factors, pre-4s factors)\\n    options = runOptions; // We don't set the global \\\"options\\\" until we're sure this is the only running instance\\n    mock = options.mock;\\n    noisy = options.noisy;\\n    const fracB = options.fracB;\\n    const fracH = options.fracH;\\n    const diversification = options.diversification;\\n    const disableHud = options.disableHud || options.liquidate || options.mock;\\n    disableShorts = options['disable-shorts'];\\n    const pre4sBuyThresholdProbability = options['pre-4s-buy-threshold-probability'];\\n    const pre4sMinBlackoutWindow = options['pre-4s-min-blackout-window'] || 1;\\n    const pre4sMinHoldTime = options['pre-4s-minimum-hold-time'] || 0;\\n    minTickHistory = options['pre-4s-min-tick-history'] || 21;\\n    nearTermForecastWindowLength = options['pre-4s-inversion-detection-window'] || 10;\\n    longTermForecastWindowLength = options['pre-4s-forecast-window'] || (marketCycleLength + 1);\\n    showMarketSummary = options['show-pre-4s-forecast'] || options['show-market-summary'];\\n    // Other global values must be reset at start lest they be left in memory from a prior run\\n    lastTick = 0, totalProfit = 0, lastLog = \\\"\\\", marketCycleDetected = false, detectedCycleTick = 0, inversionAgreementThreshold = 6;\\n    let myStocks = [], allStocks = [];\\n    let player = await getPlayerInfo(ns);\\n    resetInfo = await getNsDataThroughFile(ns, 'ns.getResetInfo()');\\n    if (!hasTixApiAccess) { // You cannot use the stockmaster until you have API access\\n        if (options['disable-purchase-tix-api'])\\n            return log(ns, \\\"ERROR: You do not have stock market API access, and --disable-purchase-tix-api is set.\\\", true);\\n        let success = false;\\n        log(ns, `INFO: You are missing stock market API access. (NOTE: This is granted for free once you have SF8). ` +\\n            `Waiting until we can have the 5b needed to buy it. (Run with --disable-purchase-tix-api to disable this feature.)`, true);\\n        do {\\n            await ns.sleep(sleepInterval);\\n            try {\\n                const reserve = options['reserve'] != null ? options['reserve'] : Number(ns.read(\\\"reserve.txt\\\") || 0);\\n                success = await tryGetStockMarketAccess(ns, player.money - reserve);\\n            }\\n            catch (err) {\\n                log(ns, `WARNING: stockmaster.js Caught (and suppressed) an unexpected error while waiting to buy stock market access:\\\\n` +\\n                    (typeof err === 'string' ? err : err.message || JSON.stringify(err)), false, 'warning');\\n            }\\n        } while (!success);\\n    }\\n    dictSourceFiles = await getActiveSourceFiles(ns); // Find out what source files the user has unlocked\\n    if (!disableShorts && (!(8 in dictSourceFiles) || dictSourceFiles[8] < 2)) {\\n        log(ns, \\\"INFO: Shorting stocks has been disabled (you have not yet unlocked access to shorting)\\\");\\n        disableShorts = true;\\n    }\\n    allStockSymbols = await getStockSymbols(ns);\\n    allStocks = await initAllStocks(ns);\\n    let bitnodeMults;\\n    if (5 in dictSourceFiles)\\n        bitnodeMults = await tryGetBitNodeMultipliers(ns);\\n    // Assume bitnode mults are 1 if user doesn't have this API access yet\\n    if (!bitnodeMults)\\n        bitnodeMults = { FourSigmaMarketDataCost: 1, FourSigmaMarketDataApiCost: 1 };\\n    if (showMarketSummary)\\n        await launchSummaryTail(ns); // Opens a separate script / window to continuously display the Pre4S forecast\\n    let hudElement = null;\\n    if (!disableHud) {\\n        hudElement = initializeHud();\\n        ns.atExit(() => hudElement.parentElement.parentElement.parentElement.removeChild(hudElement.parentElement.parentElement));\\n    }\\n    log(ns, `Welcome! Please note: all stock purchases will initially result in a Net (unrealized) Loss. This is not only due to commission, but because each stock has a 'spread' (difference in buy price and sell price). ` +\\n        `This script is designed to buy stocks that are most likely to surpass that loss and turn a profit, but it will take a few minutes to see the progress.\\\\n\\\\n` +\\n        `If you choose to stop the script, make sure you SELL all your stocks (can go 'run ${ns.getScriptName()} --liquidate') to get your money back.\\\\n\\\\nGood luck!\\\\n~ Insight\\\\n\\\\n`);\\n    let pre4s = true;\\n    while (true) {\\n        try {\\n            const playerStats = await getPlayerInfo(ns);\\n            const reserve = options['reserve'] != null ? options['reserve'] : Number(ns.read(\\\"reserve.txt\\\") || 0);\\n            // Check whether we have 4s access yes (once we do, we can stop checking)\\n            if (pre4s)\\n                pre4s = !(await checkAccess(ns, 'has4SDataTIXAPI'));\\n            const holdings = await refresh(ns, !pre4s, allStocks, myStocks); // Returns total stock value\\n            const corpus = holdings + playerStats.money; // Corpus means total stocks + cash\\n            const maxHoldings = (1 - fracH) * corpus; // The largest value of stock we could hold without violiating fracH (Fraction to keep as cash)\\n            if (pre4s && !mock && await tryGet4SApi(ns, playerStats, bitnodeMults, corpus * (options['buy-4s-budget'] - fracH) - reserve))\\n                continue; // Start the loop over if we just bought 4S API access\\n            // Be more conservative with our decisions if we don't have 4S data\\n            const thresholdToBuy = pre4s ? options['pre-4s-buy-threshold-return'] : options['buy-threshold'];\\n            const thresholdToSell = pre4s ? options['pre-4s-sell-threshold-return'] : options['sell-threshold'];\\n            if (myStocks.length > 0)\\n                doStatusUpdate(ns, allStocks, myStocks, hudElement);\\n            else if (hudElement)\\n                hudElement.innerText = \\\"$0.000 \\\";\\n            if (pre4s && allStocks[0].priceHistory.length < minTickHistory) {\\n                log(ns, `Building a history of stock prices (${allStocks[0].priceHistory.length}/${minTickHistory})...`);\\n                await ns.sleep(sleepInterval);\\n                continue;\\n            }\\n            // Sell forecasted-to-underperform shares (worse than some expected return threshold)\\n            let sales = 0;\\n            for (let stk of myStocks) {\\n                if (stk.absReturn() <= thresholdToSell || stk.bullish() && stk.sharesShort > 0 || stk.bearish() && stk.sharesLong > 0) {\\n                    if (pre4s && stk.ticksHeld < pre4sMinHoldTime) {\\n                        if (!stk.warnedBadPurchase)\\n                            log(ns, `WARNING: Thinking of selling ${stk.sym} with ER ${formatBP(stk.absReturn())}, but holding out as it was purchased just ${stk.ticksHeld} ticks ago...`);\\n                        stk.warnedBadPurchase = true; // Hack to ensure we don't spam this warning\\n                    }\\n                    else {\\n                        sales += await doSellAll(ns, stk);\\n                        stk.warnedBadPurchase = false;\\n                    }\\n                }\\n            }\\n            if (sales > 0)\\n                continue; // If we sold anything, loop immediately (no need to sleep) and refresh stats immediately before making purchasing decisions.\\n            // If we haven't gone above a certain liquidity threshold, don't attempt to buy more stock\\n            // Avoids death-by-a-thousand-commissions before we get super-rich, stocks are capped, and this is no longer an issue\\n            // BUT may mean we miss striking while the iron is hot while waiting to build up more funds.\\n            if (playerStats.money / corpus > fracB) {\\n                // Compute the cash we have to spend (such that spending it all on stock would bring us down to a liquidity of fracH)\\n                let cash = Math.min(playerStats.money - reserve, maxHoldings - holdings);\\n                // If we haven't detected the market cycle (or haven't detected it reliably), assume it might be quite soon and restrict bets to those that can turn a profit in the very-near term.\\n                const estTick = Math.max(detectedCycleTick, marketCycleLength - (!marketCycleDetected ? 10 : inversionAgreementThreshold <= 8 ? 20 : inversionAgreementThreshold <= 10 ? 30 : marketCycleLength));\\n                // Buy shares with cash remaining in hand if exceeding some buy threshold. Prioritize targets whose expected return will cover the ask/bit spread the soonest\\n                for (const stk of allStocks.sort(purchaseOrder)) {\\n                    if (cash <= 0)\\n                        break; // Break if we are out of money (i.e. from prior purchases)\\n                    // Do not purchase a stock if it is not forecasted to recover from the ask/bid spread before the next market cycle and potential probability inversion\\n                    if (stk.blackoutWindow() >= marketCycleLength - estTick)\\n                        continue;\\n                    if (pre4s && (Math.max(pre4sMinHoldTime, pre4sMinBlackoutWindow) >= marketCycleLength - estTick))\\n                        continue;\\n                    // Skip if we already own all possible shares in this stock, or if the expected return is below our threshold, or if shorts are disabled and stock is bearish\\n                    if (stk.ownedShares() == stk.maxShares || stk.absReturn() <= thresholdToBuy || (disableShorts && stk.bearish()))\\n                        continue;\\n                    // If pre-4s, do not purchase any stock whose last inversion was too recent, or whose probability is too close to 0.5\\n                    if (pre4s && (stk.lastInversion < minTickHistory || Math.abs(stk.prob - 0.5) < pre4sBuyThresholdProbability))\\n                        continue;\\n                    // Enforce diversification: Don't hold more than x% of our portfolio as a single stock (as corpus increases, this naturally stops being a limiter)\\n                    // Inflate our budget / current position value by a factor of stk.spread_pct to avoid repeated micro-buys of a stock due to the buy/ask spread making holdings appear more diversified after purchase\\n                    let budget = Math.min(cash, maxHoldings * (diversification + stk.spread_pct) - stk.positionValue() * (1.01 + stk.spread_pct));\\n                    let purchasePrice = stk.bullish() ? stk.ask_price : stk.bid_price; // Depends on whether we will be buying a long or short position\\n                    let affordableShares = Math.floor((budget - commission) / purchasePrice);\\n                    let numShares = Math.min(stk.maxShares - stk.ownedShares(), affordableShares);\\n                    if (numShares <= 0)\\n                        continue;\\n                    // Don't buy fewer shares than can beat the comission before the next stock market cycle (after covering the spread), lest the position reverse before we break-even.\\n                    let ticksBeforeCycleEnd = marketCycleLength - estTick - stk.timeToCoverTheSpread();\\n                    if (ticksBeforeCycleEnd < 1)\\n                        continue; // We're cutting it too close to the market cycle, position might reverse before we break-even on commission\\n                    let estEndOfCycleValue = numShares * purchasePrice * ((stk.absReturn() + 1) ** ticksBeforeCycleEnd - 1); // Expected difference in purchase price and value at next market cycle end\\n                    let owned = stk.ownedShares() > 0;\\n                    if (estEndOfCycleValue <= 2 * commission)\\n                        log(ns, (owned ? '' : `We currently have ${formatNumberShort(stk.ownedShares(), 3, 1)} shares in ${stk.sym} valued at ${formatMoney(stk.positionValue())} ` +\\n                            `(${(100 * stk.positionValue() / maxHoldings).toFixed(1)}% of corpus, capped at ${(diversification * 100).toFixed(1)}% by --diversification).\\\\n`) +\\n                            `Despite attractive ER of ${formatBP(stk.absReturn())}, ${owned ? 'more ' : ''}${stk.sym} was not bought. ` +\\n                            `\\\\nBudget: ${formatMoney(budget)} can only buy ${numShares.toLocaleString('en')} ${owned ? 'more ' : ''}shares @ ${formatMoney(purchasePrice)}. ` +\\n                            `\\\\nGiven an estimated ${marketCycleLength - estTick} ticks left in market cycle, less ${stk.timeToCoverTheSpread().toFixed(1)} ticks to cover the spread (${(stk.spread_pct * 100).toFixed(2)}%), ` +\\n                            `remaining ${ticksBeforeCycleEnd.toFixed(1)} ticks would only generate ${formatMoney(estEndOfCycleValue)}, which is less than 2x commission (${formatMoney(2 * commission, 3)})`);\\n                    else\\n                        cash -= await doBuy(ns, stk, numShares);\\n                }\\n            }\\n        }\\n        catch (err) {\\n            log(ns, `WARNING: stockmaster.js Caught (and suppressed) an unexpected error in the main loop:\\\\n` +\\n                (typeof err === 'string' ? err : err.message || JSON.stringify(err)), false, 'warning');\\n        }\\n        await ns.sleep(sleepInterval);\\n    }\\n}\\n/** Ram-dodge getting updated player info. Note that this is the only async routine called in the main loop.\\n * If latency or ram instability is an issue, you may wish to try uncommenting the direct request.\\n * @param {NS} ns\\n * @returns {Promise<Player>} */\\nasync function getPlayerInfo(ns) {\\n    return await getNsDataThroughFile(ns, `ns.getPlayer()`);\\n}\\nfunction getTimeInBitnode() {\\n    return Date.now() - resetInfo.lastNodeReset;\\n}\\n/* A sorting function to put stocks in the order we should prioritize investing in them */\\nlet purchaseOrder = (a, b) => (Math.ceil(a.timeToCoverTheSpread()) - Math.ceil(b.timeToCoverTheSpread())) || (b.absReturn() - a.absReturn());\\n/** @param {NS} ns\\n * Generic helper for dodging the hefty RAM requirements of stock functions by spawning a temporary script to collect info for us. */\\nasync function getStockInfoDict(ns, stockFunction) {\\n    allStockSymbols ??= await getStockSymbols(ns);\\n    if (allStockSymbols == null)\\n        throw new Error(`No WSE API Access yet, this call to ns.stock.${stockFunction} is premature.`);\\n    return await getNsDataThroughFile(ns, `Object.fromEntries(ns.args.map(sym => [sym, ns.stock.${stockFunction}(sym)]))`, `/Temp/stock-${stockFunction}.txt`, allStockSymbols);\\n}\\n;\\n/** @param {NS} ns **/\\nasync function initAllStocks(ns) {\\n    let dictMaxShares = await getStockInfoDict(ns, 'getMaxShares'); // Only need to get this once, it never changes\\n    return allStockSymbols.map(s => ({\\n        sym: s,\\n        maxShares: dictMaxShares[s],\\n        expectedReturn: function () {\\n            // To add conservatism to pre-4s estimates, we reduce the probability by 1 standard deviation without crossing the midpoint\\n            let normalizedProb = (this.prob - 0.5);\\n            let conservativeProb = normalizedProb < 0 ? Math.min(0, normalizedProb + this.probStdDev) : Math.max(0, normalizedProb - this.probStdDev);\\n            return this.vol * conservativeProb;\\n        },\\n        absReturn: function () {\\n            return Math.abs(this.expectedReturn());\\n        },\\n        bullish: function () {\\n            return this.prob > 0.5;\\n        },\\n        bearish: function () {\\n            return !this.bullish();\\n        },\\n        ownedShares: function () {\\n            return this.sharesLong + this.sharesShort;\\n        },\\n        owned: function () {\\n            return this.ownedShares() > 0;\\n        },\\n        positionValueLong: function () {\\n            return this.sharesLong * this.bid_price;\\n        },\\n        positionValueShort: function () {\\n            return this.sharesShort * (2 * this.boughtPriceShort - this.ask_price);\\n        },\\n        positionValue: function () {\\n            return this.positionValueLong() + this.positionValueShort();\\n        },\\n        // How many stock market ticks must occur at the current expected return before we regain the value lost by the spread between buy and sell prices.\\n        // This can be derived by taking the compound interest formula (future = current * (1 + expected_return) ^ n) and solving for n\\n        timeToCoverTheSpread: function () {\\n            return Math.log(this.ask_price / this.bid_price) / Math.log(1 + this.absReturn());\\n        },\\n        // We should not buy this stock within this many ticks of a Market cycle, or we risk being forced to sell due to a probability inversion, and losing money due to the spread\\n        blackoutWindow: function () {\\n            return Math.ceil(this.timeToCoverTheSpread());\\n        },\\n        // Pre-4s properties used for forecasting\\n        priceHistory: [],\\n        lastInversion: 0,\\n    }));\\n}\\n/** @param {NS} ns **/\\nasync function refresh(ns, has4s, allStocks, myStocks) {\\n    let holdings = 0;\\n    // Dodge hefty RAM requirements by spawning a sequence of temporary scripts to collect info for us one function at a time\\n    const dictAskPrices = await getStockInfoDict(ns, 'getAskPrice');\\n    const dictBidPrices = await getStockInfoDict(ns, 'getBidPrice');\\n    const dictVolatilities = !has4s ? null : await getStockInfoDict(ns, 'getVolatility');\\n    const dictForecasts = !has4s ? null : await getStockInfoDict(ns, 'getForecast');\\n    const dictPositions = mock ? null : await getStockInfoDict(ns, 'getPosition');\\n    const ticked = allStocks.some(stk => stk.ask_price != dictAskPrices[stk.sym]); // If any price has changed since our last update, the stock market has \\\"ticked\\\"\\n    if (ticked) {\\n        if (Date.now() - lastTick < expectedTickTime - sleepInterval) {\\n            if (Date.now() - lastTick < catchUpTickTime - sleepInterval) {\\n                let changedPrices = allStocks.filter(stk => stk.ask_price != dictAskPrices[stk.sym]);\\n                log(ns, `WARNING: Detected a stock market tick after only ${formatDuration(Date.now() - lastTick)}, but expected ~${formatDuration(expectedTickTime)}. ` +\\n                    (changedPrices.length >= 33 ? '(All stocks updated)' : `The following ${changedPrices.length} stock prices changed: ${changedPrices.map(stk => `${stk.sym} ${formatMoney(stk.ask_price)} -> ${formatMoney(dictAskPrices[stk.sym])}`).join(\\\", \\\")}`), false, 'warning');\\n            }\\n            else\\n                log(ns, `INFO: Detected a rapid stock market tick (${formatDuration(Date.now() - lastTick)}), likely to make up for lag / offline time.`);\\n        }\\n        lastTick = Date.now();\\n    }\\n    myStocks.length = 0;\\n    for (const stk of allStocks) {\\n        const sym = stk.sym;\\n        stk.ask_price = dictAskPrices[sym]; // The amount we would pay if we bought the stock (higher than 'price')\\n        stk.bid_price = dictBidPrices[sym]; // The amount we would recieve if we sold the stock (lower than 'price')\\n        stk.spread = stk.ask_price - stk.bid_price;\\n        stk.spread_pct = stk.spread / stk.ask_price; // The percentage of value we lose just by buying the stock\\n        stk.price = (stk.ask_price + stk.bid_price) / 2; // = ns.stock.getPrice(sym);\\n        stk.vol = has4s ? dictVolatilities[sym] : stk.vol;\\n        stk.prob = has4s ? dictForecasts[sym] : stk.prob;\\n        stk.probStdDev = has4s ? 0 : stk.probStdDev; // Standard deviation around the est. probability\\n        // Update our current portfolio of owned stock\\n        let [priorLong, priorShort] = [stk.sharesLong, stk.sharesShort];\\n        stk.position = mock ? null : dictPositions[sym];\\n        stk.sharesLong = mock ? (stk.sharesLong || 0) : stk.position[0];\\n        stk.boughtPrice = mock ? (stk.boughtPrice || 0) : stk.position[1];\\n        stk.sharesShort = mock ? (stk.shares_short || 0) : stk.position[2];\\n        stk.boughtPriceShort = mock ? (stk.boughtPrice_short || 0) : stk.position[3];\\n        holdings += stk.positionValue();\\n        if (stk.owned())\\n            myStocks.push(stk);\\n        else\\n            stk.ticksHeld = 0;\\n        if (ticked) // Increment ticksHeld, or reset it if we have no position in this stock or reversed our position last tick.\\n            stk.ticksHeld = !stk.owned() || (priorLong > 0 && stk.sharesLong == 0) || (priorShort > 0 && stk.sharesShort == 0) ? 0 : 1 + (stk.ticksHeld || 0);\\n    }\\n    if (ticked)\\n        await updateForecast(ns, allStocks, has4s); // Logic below only required on market tick\\n    return holdings;\\n}\\n// Historical probability can be inferred from the number of times the stock was recently observed increasing over the total number of observations\\nconst forecast = history => history.reduce((ups, price, idx) => idx == 0 ? 0 : (history[idx - 1] > price ? ups + 1 : ups), 0) / (history.length - 1);\\n// An \\\"inversion\\\" can be detected if two probabilities are far enough apart and are within \\\"tolerance\\\" of p1 being equal to 1-p2\\nconst tol2 = inversionDetectionTolerance / 2;\\nconst detectInversion = (p1, p2) => ((p1 >= 0.5 + tol2) && (p2 <= 0.5 - tol2) && p2 <= (1 - p1) + inversionDetectionTolerance)\\n    /* Reverse Condition: */ || ((p1 <= 0.5 - tol2) && (p2 >= 0.5 + tol2) && p2 >= (1 - p1) - inversionDetectionTolerance);\\n/** @param {NS} ns **/\\nasync function updateForecast(ns, allStocks, has4s) {\\n    const currentHistory = allStocks[0].priceHistory.length;\\n    const prepSummary = showMarketSummary || mock || (!has4s && (currentHistory < minTickHistory || allStocks.filter(stk => stk.owned()).length == 0)); // Decide whether to display the market summary table.\\n    const inversionsDetected = []; // Keep track of individual stocks whose probability has inverted (45% chance of happening each \\\"cycle\\\")\\n    detectedCycleTick = (detectedCycleTick + 1) % marketCycleLength; // Keep track of stock market cycle (which occurs every 75 ticks)\\n    for (const stk of allStocks) {\\n        stk.priceHistory.unshift(stk.price);\\n        if (stk.priceHistory.length > maxTickHistory) // Limit the rolling window size\\n            stk.priceHistory.splice(maxTickHistory, 1);\\n        // Volatility is easy - the largest observed % movement in a single tick\\n        if (!has4s)\\n            stk.vol = stk.priceHistory.reduce((max, price, idx) => Math.max(max, idx == 0 ? 0 : Math.abs(stk.priceHistory[idx - 1] - price) / price), 0);\\n        // We want stocks that have the best expected return, averaged over a long window for greater precision, but the game will occasionally invert probabilities\\n        // (45% chance every 75 updates), so we also compute a near-term forecast window to allow for early-detection of inversions so we can ditch our position.\\n        stk.nearTermForecast = forecast(stk.priceHistory.slice(0, nearTermForecastWindowLength));\\n        let preNearTermWindowProb = forecast(stk.priceHistory.slice(nearTermForecastWindowLength, nearTermForecastWindowLength + marketCycleLength)); // Used to detect the probability before the potential inversion event.\\n        // Detect whether it appears as though the probability of this stock has recently undergone an inversion (i.e. prob => 1 - prob)\\n        stk.possibleInversionDetected = has4s ? detectInversion(stk.prob, stk.lastTickProbability || stk.prob) : detectInversion(preNearTermWindowProb, stk.nearTermForecast);\\n        stk.lastTickProbability = stk.prob;\\n        if (stk.possibleInversionDetected)\\n            inversionsDetected.push(stk);\\n    }\\n    // Detect whether our auto-detected \\\"stock market cycle\\\" timing should be adjusted based on the number of potential inversions observed\\n    let summary = \\\"\\\";\\n    if (inversionsDetected.length > 0) {\\n        summary += `${inversionsDetected.length} Stocks appear to be reversing their outlook: ${inversionsDetected.map(s => s.sym).join(', ')} (threshold: ${inversionAgreementThreshold})\\\\n`;\\n        if (inversionsDetected.length >= inversionAgreementThreshold && (has4s || currentHistory >= minTickHistory)) { // We believe we have detected the stock market cycle!\\n            const newPredictedCycleTick = has4s ? 0 : nearTermForecastWindowLength; // By the time we've detected it, we're this many ticks past the cycle start\\n            if (detectedCycleTick != newPredictedCycleTick)\\n                log(ns, `Threshold for changing predicted market cycle met (${inversionsDetected.length} >= ${inversionAgreementThreshold}). ` +\\n                    `Changing current market tick from ${detectedCycleTick} to ${newPredictedCycleTick}.`);\\n            marketCycleDetected = true;\\n            detectedCycleTick = newPredictedCycleTick;\\n            // Don't adjust this in the future unless we see another day with as much or even more agreement (capped at 14, it seems sometimes our cycles get out of sync with\\n            // actual cycles and we need to reset our clock even after previously determining the cycle with great certainty.)\\n            inversionAgreementThreshold = Math.max(14, inversionsDetected.length);\\n        }\\n    }\\n    // Act on any inversions (if trusted), compute the probability, and prepare the stock summary\\n    for (const stk of allStocks) {\\n        // Don't \\\"trust\\\" (act on) a detected inversion unless it's near the time when we're capable of detecting market cycle start. Avoids most false-positives.\\n        if (stk.possibleInversionDetected && (has4s && detectedCycleTick == 0 ||\\n            (!has4s && (detectedCycleTick >= nearTermForecastWindowLength / 2) && (detectedCycleTick <= nearTermForecastWindowLength + inversionLagTolerance))))\\n            stk.lastInversion = detectedCycleTick; // If we \\\"trust\\\" a probability inversion has occurred, probability will be calculated based on only history since the last inversion.\\n        else\\n            stk.lastInversion++;\\n        // Only take the stock history since after the last inversion to compute the probability of the stock.\\n        const probWindowLength = Math.min(longTermForecastWindowLength, stk.lastInversion);\\n        stk.longTermForecast = forecast(stk.priceHistory.slice(0, probWindowLength));\\n        if (!has4s) {\\n            stk.prob = stk.longTermForecast;\\n            stk.probStdDev = Math.sqrt((stk.prob * (1 - stk.prob)) / probWindowLength);\\n        }\\n        const signalStrength = 1 + (stk.bullish() ? (stk.nearTermForecast > stk.prob ? 1 : 0) + (stk.prob > 0.8 ? 1 : 0) : (stk.nearTermForecast < stk.prob ? 1 : 0) + (stk.prob < 0.2 ? 1 : 0));\\n        if (prepSummary) { // Example: AERO  ++   Prob: 54% (t51: 54%, t10: 67%) tLast⇄:190 Vol:0.640% ER: 2.778BP Spread:1.784% ttProfit: 65 Pos: 14.7M long  (held 189 ticks)\\n            stk.debugLog = `${stk.sym.padEnd(5, ' ')} ${(stk.bullish() ? '+' : '-').repeat(signalStrength).padEnd(3)} ` +\\n                `Prob:${(stk.prob * 100).toFixed(0).padStart(3)}% (t${probWindowLength.toFixed(0).padStart(2)}:${(stk.longTermForecast * 100).toFixed(0).padStart(3)}%, ` +\\n                `t${Math.min(stk.priceHistory.length, nearTermForecastWindowLength).toFixed(0).padStart(2)}:${(stk.nearTermForecast * 100).toFixed(0).padStart(3)}%) ` +\\n                `tLast⇄:${(stk.lastInversion + 1).toFixed(0).padStart(3)} Vol:${(stk.vol * 100).toFixed(2)}% ER:${formatBP(stk.expectedReturn()).padStart(8)} ` +\\n                `Spread:${(stk.spread_pct * 100).toFixed(2)}% ttProfit:${stk.blackoutWindow().toFixed(0).padStart(3)}`;\\n            if (stk.owned())\\n                stk.debugLog += ` Pos: ${formatNumberShort(stk.ownedShares(), 3, 1)} (${stk.ownedShares() == stk.maxShares ? 'max' :\\n                    ((100 * stk.ownedShares() / stk.maxShares).toFixed(0).padStart(2) + '%')}) ${stk.sharesLong > 0 ? 'long ' : 'short'} (held ${stk.ticksHeld} ticks)`;\\n            if (stk.possibleInversionDetected)\\n                stk.debugLog += ' ⇄⇄⇄';\\n        }\\n    }\\n    // Print a summary of stocks as of this most recent tick (if enabled)\\n    if (prepSummary) {\\n        summary += `Market day ${detectedCycleTick + 1}${marketCycleDetected ? '' : '?'} of ${marketCycleLength} (${marketCycleDetected ? (100 * inversionAgreementThreshold / 19).toPrecision(2) : '0'}% certain) ` +\\n            `Current Stock Summary and Pre-4S Forecasts (by best payoff-time):\\\\n` + allStocks.sort(purchaseOrder).map(s => s.debugLog).join(\\\"\\\\n\\\");\\n        if (showMarketSummary)\\n            await updateForecastFile(ns, summary);\\n        else\\n            log(ns, summary);\\n    }\\n    // Write out a file of stock probabilities so that other scripts can make use of this (e.g. hack orchestrator can manipulate the stock market)\\n    await ns.write('/Temp/stock-probabilities.txt', JSON.stringify(Object.fromEntries(allStocks.map(stk => [stk.sym, { prob: stk.prob, sharesLong: stk.sharesLong, sharesShort: stk.sharesShort }]))), \\\"w\\\");\\n}\\n// Helpers to display the stock market summary in a separate window.\\nlet summaryFile = '/Temp/stockmarket-summary.txt';\\nlet updateForecastFile = async (ns, summary) => await ns.write(summaryFile, summary, 'w');\\nlet launchSummaryTail = async (ns) => {\\n    let summaryTailScript = summaryFile.replace('.txt', '-tail.js');\\n    if (await getNsDataThroughFile(ns, `ns.scriptRunning('${summaryTailScript}', ns.getHostname())`, '/Temp/stockmarket-summary-is-running.txt'))\\n        return;\\n    //await getNsDataThroughFile(ns, `ns.scriptKill('${summaryTailScript}', ns.getHostname())`, summaryTailScript.replace('.js', '-kill.js')); // Only needed if we're changing the script below\\n    await runCommand(ns, `ns.disableLog('sleep'); ns.tail(); let lastRead = '';\\r\\n        while (true) { \\r\\n            let read = ns.read('${summaryFile}');\\r\\n            if (lastRead != read) ns.print(lastRead = read);\\r\\n            await ns.sleep(1000); \\r\\n        }`, summaryTailScript);\\n};\\n// Ram-dodging helpers that spawn temporary scripts to buy/sell rather than pay 2.5GB ram per variant\\nlet buyStockWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'buyStock'); // ns.stock.buyStock(sym, numShares);\\nlet buyShortWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'buyShort'); // ns.stock.buyShort(sym, numShares);\\nlet sellStockWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'sellStock'); // ns.stock.sellStock(sym, numShares);\\nlet sellShortWrapper = async (ns, sym, numShares) => await transactStock(ns, sym, numShares, 'sellShort'); // ns.stock.sellShort(sym, numShares);\\nlet transactStock = async (ns, sym, numShares, action) => await getNsDataThroughFile(ns, `ns.stock.${action}(ns.args[0], ns.args[1])`, null, [sym, numShares]);\\n/** @param {NS} ns\\n * Automatically buys either a short or long position depending on the outlook of the stock. */\\nasync function doBuy(ns, stk, sharesToBuy) {\\n    // We include -2*commission in the \\\"holdings value\\\" of our stock, but if we make repeated purchases of the same stock, we have to track\\n    // the additional commission somewhere. So only subtract it from our running profit if this isn't our first purchase of this symbol\\n    let price = 0; //price wasn't defined yet.\\n    if (stk.owned())\\n        totalProfit -= commission;\\n    let long = stk.bullish();\\n    let expectedPrice = long ? stk.ask_price : stk.bid_price; // Depends on whether we will be buying a long or short position\\n    log(ns, `INFO: ${long ? 'Buying  ' : 'Shorting'} ${formatNumberShort(sharesToBuy, 3, 3).padStart(5)} (` +\\n        `${stk.maxShares == sharesToBuy + stk.ownedShares() ? '@max shares' : `${formatNumberShort(sharesToBuy + stk.ownedShares(), 3, 3).padStart(5)}/${formatNumberShort(stk.maxShares, 3, 3).padStart(5)}`}) ` +\\n        `${stk.sym.padEnd(5)} @ ${formatMoney(expectedPrice).padStart(9)} for ${formatMoney(sharesToBuy * expectedPrice).padStart(9)} (Spread:${(stk.spread_pct * 100).toFixed(2)}% ` +\\n        `ER:${formatBP(stk.expectedReturn()).padStart(8)}) Ticks to Profit: ${stk.timeToCoverTheSpread().toFixed(2)}`, noisy, 'info');\\n    try {\\n        price = mock ? expectedPrice : Number(await transactStock(ns, stk.sym, sharesToBuy, long ? 'buyStock' : 'buyShort'));\\n    }\\n    catch (err) {\\n        if (long)\\n            throw err;\\n        disableShorts = true;\\n        log(ns, `WARN: Failed to short ${stk.sym} (Shorts not available?). Disabling shorts...`, true, 'warning');\\n        return 0;\\n    }\\n    // The rest of this work is for troubleshooting / mock-mode purposes\\n    if (price == 0) {\\n        const playerMoney = (await getPlayerInfo(ns)).money;\\n        if (playerMoney < sharesToBuy * expectedPrice)\\n            log(ns, `WARN: Failed to ${long ? 'buy' : 'short'} ${stk.sym} because money just recently dropped to ${formatMoney(playerMoney)} and we can no longer afford it.`, noisy);\\n        else\\n            log(ns, `ERROR: Failed to ${long ? 'buy' : 'short'} ${stk.sym} @ ${formatMoney(expectedPrice)} (0 was returned) despite having ${formatMoney(playerMoney)}.`, true, 'error');\\n        return 0;\\n    }\\n    else if (price != expectedPrice) {\\n        log(ns, `WARNING: ${long ? 'Bought' : 'Shorted'} ${stk.sym} @ ${formatMoney(price)} but expected ${formatMoney(expectedPrice)} (spread: ${formatMoney(stk.spread)})`, false, 'warning');\\n        price = expectedPrice; // Known Bitburner bug for now, short returns \\\"price\\\" instead of \\\"bid_price\\\". Correct this so running profit calcs are correct.\\n    }\\n    if (mock && long)\\n        stk.boughtPrice = (stk.boughtPrice * stk.sharesLong + price * sharesToBuy) / (stk.sharesLong + sharesToBuy);\\n    if (mock && !long)\\n        stk.boughtPriceShort = (stk.boughtPriceShort * stk.sharesShort + price * sharesToBuy) / (stk.sharesShort + sharesToBuy);\\n    if (long)\\n        stk.sharesLong += sharesToBuy;\\n    else\\n        stk.sharesShort += sharesToBuy; // Maintained for mock mode, otherwise, redundant (overwritten at next refresh)\\n    return sharesToBuy * price + commission; // Return the amount spent on the transaction so it can be subtracted from our cash on hand\\n}\\n/** @param {NS} ns\\n * Sell our current position in this stock. */\\nasync function doSellAll(ns, stk) {\\n    let long = stk.sharesLong > 0;\\n    if (long && stk.sharesShort > 0) // Detect any issues here - we should always sell one before buying the other.\\n        log(ns, `ERROR: Somehow ended up both ${stk.sharesShort} short and ${stk.sharesLong} long on ${stk.sym}`, true, 'error');\\n    let expectedPrice = long ? stk.bid_price : stk.ask_price; // Depends on whether we will be selling a long or short position\\n    let sharesSold = long ? stk.sharesLong : stk.sharesShort;\\n    let price = mock ? expectedPrice : await transactStock(ns, stk.sym, sharesSold, long ? 'sellStock' : 'sellShort');\\n    const profit = (long ? stk.sharesLong * (price - stk.boughtPrice) : stk.sharesShort * (stk.boughtPriceShort - price)) - 2 * commission;\\n    log(ns, `${profit > 0 ? 'SUCCESS' : 'WARNING'}: Sold all ${formatNumberShort(sharesSold, 3, 3).padStart(5)} ${stk.sym.padEnd(5)} ${long ? ' long' : 'short'} positions ` +\\n        `@ ${formatMoney(price).padStart(9)} for a ` + (profit > 0 ? `PROFIT of ${formatMoney(profit).padStart(9)}` : ` LOSS  of ${formatMoney(-profit).padStart(9)}`) + ` after ${stk.ticksHeld} ticks`, noisy, noisy ? (profit > 0 ? 'success' : 'error') : undefined);\\n    if (price == 0) {\\n        log(ns, `ERROR: Failed to sell ${sharesSold} ${stk.sym} ${long ? 'shares' : 'shorts'} @ ${formatMoney(expectedPrice)} - 0 was returned.`, true, 'error');\\n        return 0;\\n    }\\n    else if (price != expectedPrice) {\\n        log(ns, `WARNING: Sold ${stk.sym} ${long ? 'shares' : 'shorts'} @ ${formatMoney(price)} but expected ${formatMoney(expectedPrice)} (spread: ${formatMoney(stk.spread)})`, false, 'warning');\\n        price = expectedPrice; // Known Bitburner bug for now, sellSort returns \\\"price\\\" instead of \\\"ask_price\\\". Correct this so running profit calcs are correct.\\n    }\\n    if (long)\\n        stk.sharesLong -= sharesSold;\\n    else\\n        stk.sharesShort -= sharesSold; // Maintained for mock mode, otherwise, redundant (overwritten at next refresh)\\n    totalProfit += profit;\\n    return price * sharesSold - commission; // Return the amount of money recieved from the transaction\\n}\\nlet formatBP = fraction => formatNumberShort(fraction * 100 * 100, 3, 2) + \\\" BP\\\";\\n/** Log / tprint / toast helper.\\n * @param {NS} ns */\\nlet log = (ns, message, tprint = false, toastStyle = \\\"\\\") => {\\n    if (message == lastLog)\\n        return;\\n    ns.print(message);\\n    if (tprint)\\n        ns.tprint(message);\\n    if (toastStyle)\\n        ns.toast(message, toastStyle);\\n    return lastLog = message;\\n};\\nfunction doStatusUpdate(ns, stocks, myStocks, hudElement = null) {\\n    let maxReturnBP = 10000 * Math.max(...myStocks.map(s => s.absReturn())); // The largest return (in basis points) in our portfolio\\n    let minReturnBP = 10000 * Math.min(...myStocks.map(s => s.absReturn())); // The smallest return (in basis points) in our portfolio\\n    let est_holdings_cost = myStocks.reduce((sum, stk) => sum + (stk.owned() ? commission : 0) +\\n        stk.sharesLong * stk.boughtPrice + stk.sharesShort * stk.boughtPriceShort, 0);\\n    let liquidation_value = myStocks.reduce((sum, stk) => sum - (stk.owned() ? commission : 0) + stk.positionValue(), 0);\\n    let status = `Long ${myStocks.filter(s => s.sharesLong > 0).length}, Short ${myStocks.filter(s => s.sharesShort > 0).length} of ${stocks.length} stocks ` +\\n        (myStocks.length == 0 ? '' : `(ER ${minReturnBP.toFixed(1)}-${maxReturnBP.toFixed(1)} BP) `) +\\n        `Profit: ${formatMoney(totalProfit, 3)} Holdings: ${formatMoney(liquidation_value, 3)} (Cost: ${formatMoney(est_holdings_cost, 3)}) ` +\\n        `Net: ${formatMoney(totalProfit + liquidation_value - est_holdings_cost, 3)}`;\\n    log(ns, status);\\n    if (hudElement)\\n        hudElement.innerText = formatMoney(liquidation_value, 6, 3);\\n}\\n/** @param {NS} ns **/\\nasync function liquidate(ns) {\\n    allStockSymbols ??= await getStockSymbols(ns);\\n    if (allStockSymbols == null)\\n        return; // Nothing to liquidate, no API Access\\n    let totalStocks = 0, totalSharesLong = 0, totalSharesShort = 0, totalRevenue = 0;\\n    const dictPositions = mock ? null : await getStockInfoDict(ns, 'getPosition');\\n    for (const sym of allStockSymbols) {\\n        var [sharesLong, , sharesShort, avgShortCost] = dictPositions[sym];\\n        if (sharesLong + sharesShort == 0)\\n            continue;\\n        totalStocks++, totalSharesLong += sharesLong, totalSharesShort += sharesShort;\\n        if (sharesLong > 0)\\n            totalRevenue += (await sellStockWrapper(ns, sym, sharesLong)) * sharesLong - commission;\\n        if (sharesShort > 0)\\n            totalRevenue += (2 * avgShortCost - (await sellShortWrapper(ns, sym, sharesShort))) * sharesShort - commission;\\n    }\\n    log(ns, `Sold ${totalSharesLong.toLocaleString('en')} long shares and ${totalSharesShort.toLocaleString('en')} short shares ` +\\n        `in ${totalStocks} stocks for ${formatMoney(totalRevenue, 3)}`, true, 'success');\\n}\\n/** @param {NS} ns **/\\n/** @param {Player} playerStats **/\\nasync function tryGet4SApi(ns, playerStats, bitnodeMults, budget) {\\n    if (await checkAccess(ns, 'has4SDataTIXAPI'))\\n        return false; // Only return true if we just bought it\\n    const cost4sData = 1E9 * bitnodeMults.FourSigmaMarketDataCost;\\n    const cost4sApi = 25E9 * bitnodeMults.FourSigmaMarketDataApiCost;\\n    const has4S = await checkAccess(ns, 'has4SData');\\n    const totalCost = (has4S ? 0 : cost4sData) + cost4sApi;\\n    // Liquidate shares if it would allow us to afford 4S API data\\n    if (totalCost > budget) /* Need to reserve some money to invest */\\n        return false;\\n    if (playerStats.money < totalCost)\\n        await liquidate(ns);\\n    if (!has4S) {\\n        if (await tryBuy(ns, 'purchase4SMarketData'))\\n            log(ns, `SUCCESS: Purchased 4SMarketData for ${formatMoney(cost4sData)} ` +\\n                `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        else\\n            log(ns, 'ERROR attempting to purchase 4SMarketData!', false, 'error');\\n    }\\n    if (await tryBuy(ns, 'purchase4SMarketDataTixApi')) {\\n        log(ns, `SUCCESS: Purchased 4SMarketDataTixApi for ${formatMoney(cost4sApi)} ` +\\n            `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        return true;\\n    }\\n    else {\\n        log(ns, 'ERROR attempting to purchase 4SMarketDataTixApi!', false, 'error');\\n        if (!(5 in dictSourceFiles)) { // If we do not have access to bitnode multipliers, assume the cost is double and try again later\\n            log(ns, 'INFO: Bitnode mults are not available (SF5) - assuming everything is twice as expensive in the current bitnode.');\\n            bitnodeMults.FourSigmaMarketDataCost *= 2;\\n            bitnodeMults.FourSigmaMarketDataApiCost *= 2;\\n        }\\n    }\\n    return false;\\n}\\n/** @param {NS} ns\\n * @param {\\\"hasWSEAccount\\\"|\\\"hasTIXAPIAccess\\\"|\\\"has4SData\\\"|\\\"has4SDataTIXAPI\\\"} stockFn\\n * Helper to check for one of the stock access functions */\\nasync function checkAccess(ns, stockFn) {\\n    return await getNsDataThroughFile(ns, `ns.stock.${stockFn}()`);\\n}\\n/** @param {NS} ns\\n * @param {\\\"purchaseWseAccount\\\"|\\\"purchaseTixApi\\\"|\\\"purchase4SMarketData\\\"|\\\"purchase4SMarketDataTixApi\\\"} stockFn\\n * Helper to try and buy a stock access. Yes, the code is the same as above, but I wanted to be explicit. */\\nasync function tryBuy(ns, stockFn) {\\n    return await getNsDataThroughFile(ns, `ns.stock.${stockFn}()`);\\n}\\n/** @param {NS} ns\\n * @param {number} budget - The amount we are willing to spend on WSE and API access\\n * Tries to purchase access to the stock market **/\\nasync function tryGetStockMarketAccess(ns, budget) {\\n    if (await checkAccess(ns, 'hasTIXAPIAccess'))\\n        return true; // Already have access\\n    const costWseAccount = 200E6;\\n    const costTixApi = 5E9;\\n    const hasWSE = await checkAccess(ns, 'hasWSEAccount');\\n    const totalCost = (hasWSE ? 0 : costWseAccount) + costTixApi;\\n    if (totalCost > budget)\\n        return false;\\n    if (!hasWSE) {\\n        if (await tryBuy(ns, 'purchaseWseAccount'))\\n            log(ns, `SUCCESS: Purchased a WSE (stockmarket) account for ${formatMoney(costWseAccount)} ` +\\n                `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        else\\n            log(ns, 'ERROR attempting to purchase WSE account!', false, 'error');\\n    }\\n    if (await tryBuy(ns, 'purchaseTixApi')) {\\n        log(ns, `SUCCESS: Purchased Tix (stockmarket) Api access for ${formatMoney(costTixApi)} ` +\\n            `(At ${formatDuration(getTimeInBitnode())} into BitNode)`, true, 'success');\\n        return true;\\n    }\\n    else\\n        log(ns, 'ERROR attempting to purchase Tix Api!', false, 'error');\\n    return false;\\n}\\nfunction initializeHud() {\\n    const d = eval(\\\"document\\\");\\n    let htmlDisplay = d.getElementById(\\\"stock-display-1\\\");\\n    if (htmlDisplay !== null)\\n        return htmlDisplay;\\n    // Get the custom display elements in HUD.\\n    let customElements = d.getElementById(\\\"overview-extra-hook-0\\\").parentElement.parentElement;\\n    // Make a clone of the hook for extra hud elements, and move it up under money\\n    let stockValueTracker = customElements.cloneNode(true);\\n    // Remove any nested elements created by stats.js\\n    stockValueTracker.querySelectorAll(\\\"p > p\\\").forEach(el => el.parentElement.removeChild(el));\\n    // Change ids since duplicate id's are invalid\\n    stockValueTracker.querySelectorAll(\\\"p\\\").forEach((el, i) => el.id = \\\"stock-display-\\\" + i);\\n    // Get out output element\\n    htmlDisplay = stockValueTracker.querySelector(\\\"#stock-display-1\\\");\\n    // Display label and default value\\n    stockValueTracker.querySelectorAll(\\\"p\\\")[0].innerText = \\\"Stock\\\";\\n    htmlDisplay.innerText = \\\"$0.000 \\\";\\n    // Insert our element right after Money\\n    customElements.parentElement.insertBefore(stockValueTracker, customElements.parentElement.childNodes[2]);\\n    return htmlDisplay;\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"server/trade.js\",\"server\":\"trader\"}}],[\"server/helper.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Return a formatted representation of the monetary amount using scale symbols (e.g. $6.50M)\\n * @param {number} num - The number to format\\n * @param {number=} maxSignificantFigures - (default: 6) The maximum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} maxDecimalPlaces - (default: 3) The maximum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatMoney(num, maxSignificantFigures = 6, maxDecimalPlaces = 3) {\\n    let numberShort = formatNumberShort(num, maxSignificantFigures, maxDecimalPlaces);\\n    return num >= 0 ? \\\"$\\\" + numberShort : numberShort.replace(\\\"-\\\", \\\"-$\\\");\\n}\\nconst symbols = [\\\"\\\", \\\"k\\\", \\\"m\\\", \\\"b\\\", \\\"t\\\", \\\"q\\\", \\\"Q\\\", \\\"s\\\", \\\"S\\\", \\\"o\\\", \\\"n\\\", \\\"e33\\\", \\\"e36\\\", \\\"e39\\\"];\\n/**\\n * Return a formatted representation of the monetary amount using scale sympols (e.g. 6.50M)\\n * @param {number} num - The number to format\\n * @param {number=} maxSignificantFigures - (default: 6) The maximum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} maxDecimalPlaces - (default: 3) The maximum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatNumberShort(num, maxSignificantFigures = 6, maxDecimalPlaces = 3) {\\n    if (Math.abs(num) > 10 ** (3 * symbols.length)) // If we've exceeded our max symbol, switch to exponential notation\\n        return num.toExponential(Math.min(maxDecimalPlaces, maxSignificantFigures - 1));\\n    for (var i = 0, sign = Math.sign(num), num = Math.abs(num); num >= 1000 && i < symbols.length; i++)\\n        num /= 1000;\\n    // TODO: A number like 9.999 once rounded to show 3 sig figs, will become 10.00, which is now 4 sig figs.\\n    return ((sign < 0) ? \\\"-\\\" : \\\"\\\") + num.toFixed(Math.max(0, Math.min(maxDecimalPlaces, maxSignificantFigures - Math.floor(1 + Math.log10(num))))) + symbols[i];\\n}\\n/** Convert a shortened number back into a value */\\nexport function parseShortNumber(text = \\\"0\\\") {\\n    let parsed = Number(text);\\n    if (!isNaN(parsed))\\n        return parsed;\\n    for (const sym of symbols.slice(1))\\n        if (text.toLowerCase().endsWith(sym))\\n            return Number.parseFloat(text.slice(0, text.length - sym.length)) * Math.pow(10, 3 * symbols.indexOf(sym));\\n    return Number.NaN;\\n}\\n/**\\n * Return a number formatted with the specified number of significatnt figures or decimal places, whichever is more limiting.\\n * @param {number} num - The number to format\\n * @param {number=} minSignificantFigures - (default: 6) The minimum significant figures you wish to see (e.g. 123, 12.3 and 1.23 all have 3 significant figures)\\n * @param {number=} minDecimalPlaces - (default: 3) The minimum decimal places you wish to see, regardless of significant figures. (e.g. 12.3, 1.2, 0.1 all have 1 decimal)\\n **/\\nexport function formatNumber(num, minSignificantFigures = 3, minDecimalPlaces = 1) {\\n    return num == 0.0 ? num : num.toFixed(Math.max(minDecimalPlaces, Math.max(0, minSignificantFigures - Math.ceil(Math.log10(num)))));\\n}\\n/** Formats some RAM amount as a round number of GB with thousands separators e.g. `1,028 GB` */\\nexport function formatRam(num) {\\n    return `${Math.round(num).toLocaleString('en')} GB`;\\n}\\n/** Return a datatime in ISO format */\\nexport function formatDateTime(datetime) {\\n    return datetime.toISOString();\\n}\\n/** Format a duration (in milliseconds) as e.g. '1h 21m 6s' for big durations or e.g '12.5s' / '23ms' for small durations */\\nexport function formatDuration(duration) {\\n    if (duration < 1000)\\n        return `${duration.toFixed(0)}ms`;\\n    if (!isFinite(duration))\\n        return 'forever (Infinity)';\\n    const portions = [];\\n    const msInHour = 1000 * 60 * 60;\\n    const hours = Math.trunc(duration / msInHour);\\n    if (hours > 0) {\\n        portions.push(hours + 'h');\\n        duration -= (hours * msInHour);\\n    }\\n    const msInMinute = 1000 * 60;\\n    const minutes = Math.trunc(duration / msInMinute);\\n    if (minutes > 0) {\\n        portions.push(minutes + 'm');\\n        duration -= (minutes * msInMinute);\\n    }\\n    let seconds = (duration / 1000.0);\\n    // Include millisecond precision if we're on the order of seconds\\n    seconds = (hours == 0 && minutes == 0) ? seconds.toPrecision(3) : seconds.toFixed(0);\\n    if (seconds > 0) {\\n        portions.push(seconds + 's');\\n        duration -= (minutes * 1000);\\n    }\\n    return portions.join(' ');\\n}\\n/** Generate a hashCode for a string that is pretty unique most of the time */\\nexport function hashCode(s) {\\n    return s.split(\\\"\\\").reduce(function (a, b) {\\n        a = ((a << 5) - a) + b.charCodeAt(0);\\n        return a & a;\\n    }, 0);\\n}\\n/** @param {NS} ns **/\\nexport function disableLogs(ns, listOfLogs) {\\n    ['disableLog'].concat(...listOfLogs).forEach(log => checkNsInstance(ns, '\\\"disableLogs\\\"').disableLog(log));\\n}\\n/** Joins all arguments as components in a path, e.g. pathJoin(\\\"foo\\\", \\\"bar\\\", \\\"/baz\\\") = \\\"foo/bar/baz\\\" **/\\nexport function pathJoin(...args) {\\n    return args.filter(s => !!s).join('/').replace(/\\\\/\\\\/+/g, '/');\\n}\\n/** Gets the path for the given local file, taking into account optional subfolder relocation via git-pull.js **/\\nexport function getFilePath(file) {\\n    const subfolder = ''; // git-pull.js optionally modifies this when downloading\\n    return pathJoin(subfolder, file);\\n}\\n// FUNCTIONS THAT PROVIDE ALTERNATIVE IMPLEMENTATIONS TO EXPENSIVE NS FUNCTIONS\\n// VARIATIONS ON NS.RUN\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.run in your script **/\\nexport function getFnRunViaNsRun(ns) {\\n    return checkNsInstance(ns, '\\\"getFnRunViaNsRun\\\"').run;\\n}\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.exec in your script **/\\nexport function getFnRunViaNsExec(ns, host = \\\"home\\\") {\\n    checkNsInstance(ns, '\\\"getFnRunViaNsExec\\\"');\\n    return function (scriptPath, ...args) {\\n        return ns.exec(scriptPath, host, ...args);\\n    };\\n}\\n// VARIATIONS ON NS.ISRUNNING\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.run in your script  */\\nexport function getFnIsAliveViaNsIsRunning(ns) {\\n    return checkNsInstance(ns, '\\\"getFnIsAliveViaNsIsRunning\\\"').isRunning;\\n}\\n/** @param {NS} ns\\n *  Use where a function is required to run a script and you have already referenced ns.ps in your script  */\\nexport function getFnIsAliveViaNsPs(ns) {\\n    checkNsInstance(ns, '\\\"getFnIsAliveViaNsPs\\\"');\\n    return function (pid, host) {\\n        return ns.ps(host).some(process => process.pid === pid);\\n    };\\n}\\n/**\\n * Retrieve the result of an ns command by executing it in a temporary .js script, writing the result to a file, then shuting it down\\n * Importing incurs a maximum of 1.1 GB RAM (0 GB for ns.read, 1 GB for ns.run, 0.1 GB for ns.isRunning).\\n * Has the capacity to retry if there is a failure (e.g. due to lack of RAM available). Not recommended for performance-critical code.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fName - (default \\\"/Temp/{command-name}.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n * @param {bool=} verbose - (default false) If set to true, pid and result of command are logged.\\n **/\\nexport async function getNsDataThroughFile(ns, command, fName = null, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"getNsDataThroughFile\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['run', 'isRunning']);\\n    return await getNsDataThroughFile_Custom(ns, ns.run, command, fName, args, verbose, maxRetries, retryDelayMs);\\n}\\n/** Convert a command name like \\\"ns.namespace.someFunction(args, args)\\\" into\\n * a default file path for running that command \\\"/Temp/namespace-someFunction.txt\\\" */\\nfunction getDefaultCommandFileName(command, ext = '.txt') {\\n    // If prefixed with \\\"ns.\\\", strip that out\\n    let fname = command;\\n    if (fname.startsWith(\\\"ns.\\\"))\\n        fname = fname.slice(3);\\n    // Remove anything between parentheses\\n    fname = fname.replace(/ *\\\\([^)]*\\\\) */g, \\\"\\\");\\n    // Replace any dereferencing (dots) with dashes\\n    fname = fname.replace(\\\".\\\", \\\"-\\\");\\n    return `/Temp/${fname}${ext}`;\\n}\\n/**\\n * An advanced version of getNsDataThroughFile that lets you pass your own \\\"fnRun\\\" implementation to reduce RAM requirements\\n * Importing incurs no RAM (now that ns.read is free) plus whatever fnRun you provide it\\n * Has the capacity to retry if there is a failure (e.g. due to lack of RAM available). Not recommended for performance-critical code.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {function} fnRun - A single-argument function used to start the new sript, e.g. `ns.run` or `(f,...args) => ns.exec(f, \\\"home\\\", ...args)`\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n **/\\nexport async function getNsDataThroughFile_Custom(ns, fnRun, command, fName = null, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"getNsDataThroughFile_Custom\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['read']);\\n    fName = fName || getDefaultCommandFileName(command);\\n    const fNameCommand = fName + '.js';\\n    // Pre-write contents to the file that will allow us to detect if our temp script never got run\\n    const initialContents = \\\"<Insufficient RAM>\\\";\\n    ns.write(fName, initialContents, 'w');\\n    // TODO: Workaround for v2.3.0 deprecation. Remove when the warning is gone.\\n    // Avoid serializing ns.getPlayer() properties that generate warnings\\n    if (command === \\\"ns.getPlayer()\\\")\\n        command = `( ()=> { let player = ns.getPlayer();\\r\\n            const excludeProperties = ['playtimeSinceLastAug', 'playtimeSinceLastBitnode', 'bitNodeN'];\\r\\n            return Object.keys(player).reduce((pCopy, key) => {\\r\\n                if (!excludeProperties.includes(key))\\r\\n                   pCopy[key] = player[key];\\r\\n                return pCopy;\\r\\n            }, {});\\r\\n        })()`;\\n    // Prepare a command that will write out a new file containing the results of the command\\n    // unless it already exists with the same contents (saves time/ram to check first)\\n    // If an error occurs, it will write an empty file to avoid old results being misread.\\n    const commandToFile = `let r;try{r=JSON.stringify(\\\\n` +\\n        `    ${command}\\\\n` +\\n        `);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\\\n` +\\n        `const f=\\\"${fName}\\\"; if(ns.read(f)!==r) ns.write(f,r,'w')`;\\n    // Run the command with auto-retries if it fails\\n    const pid = await runCommand_Custom(ns, fnRun, commandToFile, fNameCommand, args, verbose, maxRetries, retryDelayMs);\\n    // Wait for the process to complete. Note, as long as the above returned a pid, we don't actually have to check it, just the file contents\\n    const fnIsAlive = (ignored_pid) => ns.read(fName) === initialContents;\\n    await waitForProcessToComplete_Custom(ns, fnIsAlive, pid, verbose);\\n    if (verbose)\\n        log(ns, `Process ${pid} is done. Reading the contents of ${fName}...`);\\n    // Read the file, with auto-retries if it fails // TODO: Unsure reading a file can fail or needs retrying.\\n    let lastRead;\\n    const fileData = await autoRetry(ns, () => ns.read(fName), f => (lastRead = f) !== undefined && f !== \\\"\\\" && f !== initialContents && !(typeof f == \\\"string\\\" && f.startsWith(\\\"ERROR: \\\")), () => `\\\\nns.read('${fName}') returned a bad result: \\\"${lastRead}\\\".` +\\n        `\\\\n  Script:  ${fNameCommand}\\\\n  Args:    ${JSON.stringify(args)}\\\\n  Command: ${command}` +\\n        (lastRead == undefined ? '\\\\nThe developer has no idea how this could have happened. Please post a screenshot of this error on discord.' :\\n            lastRead == initialContents ? `\\\\nThe script that ran this will likely recover and try again later once you have more free ram.` :\\n                lastRead == \\\"\\\" ? `\\\\nThe file appears to have been deleted before a result could be retrieved. Perhaps there is a conflicting script.` :\\n                    `\\\\nThe script was likely passed invalid arguments. Please post a screenshot of this error on discord.`), maxRetries, retryDelayMs, undefined, verbose, verbose);\\n    if (verbose)\\n        log(ns, `Read the following data for command ${command}:\\\\n${fileData}`);\\n    return JSON.parse(fileData); // Deserialize it back into an object/array and return\\n}\\n/** Evaluate an arbitrary ns command by writing it to a new script and then running or executing it.\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fileName - (default \\\"/Temp/{command-name}.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n * @param {bool=} verbose - (default false) If set to true, the evaluation result of the command is printed to the terminal\\n */\\nexport async function runCommand(ns, command, fileName, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"runCommand\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['run']);\\n    return await runCommand_Custom(ns, ns.run, command, fileName, args, verbose, maxRetries, retryDelayMs);\\n}\\nconst _cachedExports = [];\\n/** @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @returns {string[]} The set of all funciton names exported by this file. */\\nfunction getExports(ns) {\\n    if (_cachedExports.length > 0)\\n        return _cachedExports;\\n    const scriptHelpersRows = ns.read(getFilePath('server/helper.js')).split(\\\"\\\\n\\\");\\n    for (const row of scriptHelpersRows) {\\n        if (!row.startsWith(\\\"export\\\"))\\n            continue;\\n        const funcNameStart = row.indexOf(\\\"function\\\") + \\\"function\\\".length + 1;\\n        const funcNameEnd = row.indexOf(\\\"(\\\", funcNameStart);\\n        _cachedExports.push(row.substring(funcNameStart, funcNameEnd));\\n    }\\n    return _cachedExports;\\n}\\n/**\\n * An advanced version of runCommand that lets you pass your own \\\"isAlive\\\" test to reduce RAM requirements (e.g. to avoid referencing ns.isRunning)\\n * Importing incurs 0 GB RAM (assuming fnRun, fnWrite are implemented using another ns function you already reference elsewhere like ns.exec)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {function} fnRun - A single-argument function used to start the new sript, e.g. `ns.run` or `(f,...args) => ns.exec(f, \\\"home\\\", ...args)`\\n * @param {string} command - The ns command that should be invoked to get the desired data (e.g. \\\"ns.getServer('home')\\\" )\\n * @param {string=} fileName - (default \\\"/Temp/{commandhash}-data.txt\\\") The name of the file to which data will be written to disk by a temporary process\\n * @param {args=} args - args to be passed in as arguments to command being run as a new script.\\n **/\\nexport async function runCommand_Custom(ns, fnRun, command, fileName, args = [], verbose = false, maxRetries = 5, retryDelayMs = 50) {\\n    checkNsInstance(ns, '\\\"runCommand_Custom\\\"');\\n    if (!Array.isArray(args))\\n        throw new Error(`args specified were a ${typeof args}, but an array is required.`);\\n    if (!verbose)\\n        disableLogs(ns, ['sleep']);\\n    // Auto-import any helpers that the temp script attempts to use\\n    const required = getExports(ns).filter(e => command.includes(`${e}(`));\\n    let script = (required.length > 0 ? `import { ${required.join(\\\", \\\")} } from 'server/helper.js'\\\\n` : '') +\\n        `export async function main(ns) { ${command} }`;\\n    fileName = fileName || getDefaultCommandFileName(command, '.js');\\n    if (verbose)\\n        log(ns, `INFO: Using a temporary script (${fileName}) to execute the command:` +\\n            `\\\\n  ${command}\\\\nWith the following arguments:    ${JSON.stringify(args)}`);\\n    // It's possible for the file to be deleted while we're trying to execute it, so even wrap writing the file in a retry\\n    return await autoRetry(ns, async () => {\\n        // To improve performance, don't re-write the temp script if it's already in place with the correct contents.\\n        const oldContents = ns.read(fileName);\\n        if (oldContents != script) {\\n            if (oldContents) // Create some noise if temp scripts are being created with the same name but different contents\\n                ns.tprint(`WARNING: Had to overwrite temp script ${fileName}\\\\nOld Contents:\\\\n${oldContents}\\\\nNew Contents:\\\\n${script}` +\\n                    `\\\\nThis warning is generated as part of an effort to switch over to using only 'immutable' temp scripts. ` +\\n                    `Please paste a screenshot in Discord at https://discord.com/channels/415207508303544321/935667531111342200`);\\n            ns.write(fileName, script, \\\"w\\\");\\n            // Wait for the script to appear and be readable (game can be finicky on actually completing the write)\\n            await autoRetry(ns, () => ns.read(fileName), c => c == script, () => `Temporary script ${fileName} is not available, ` +\\n                `despite having written it. (Did a competing process delete or overwrite it?)`, maxRetries, retryDelayMs, undefined, verbose, verbose);\\n        }\\n        // Run the script, now that we're sure it is in place\\n        return fnRun(fileName, 1 /* Always 1 thread */, ...args);\\n    }, pid => pid !== 0, () => `The temp script was not run (likely due to insufficient RAM).` +\\n        `\\\\n  Script:  ${fileName}\\\\n  Args:    ${JSON.stringify(args)}\\\\n  Command: ${command}` +\\n        `\\\\nThe script that ran this will likely recover and try again later once you have more free ram.`, maxRetries, retryDelayMs, undefined, verbose, verbose);\\n}\\n/**\\n * Wait for a process id to complete running\\n * Importing incurs a maximum of 0.1 GB RAM (for ns.isRunning)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {int} pid - The process id to monitor\\n * @param {bool=} verbose - (default false) If set to true, pid and result of command are logged.\\n **/\\nexport async function waitForProcessToComplete(ns, pid, verbose) {\\n    checkNsInstance(ns, '\\\"waitForProcessToComplete\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['isRunning']);\\n    return await waitForProcessToComplete_Custom(ns, ns.isRunning, pid, verbose);\\n}\\n/**\\n * An advanced version of waitForProcessToComplete that lets you pass your own \\\"isAlive\\\" test to reduce RAM requirements (e.g. to avoid referencing ns.isRunning)\\n * Importing incurs 0 GB RAM (assuming fnIsAlive is implemented using another ns function you already reference elsewhere like ns.ps)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point\\n * @param {(pid: number) => Promise<boolean>} fnIsAlive - A single-argument function used to start the new sript, e.g. `ns.isRunning` or `pid => ns.ps(\\\"home\\\").some(process => process.pid === pid)`\\n **/\\nexport async function waitForProcessToComplete_Custom(ns, fnIsAlive, pid, verbose) {\\n    checkNsInstance(ns, '\\\"waitForProcessToComplete_Custom\\\"');\\n    if (!verbose)\\n        disableLogs(ns, ['sleep']);\\n    // Wait for the PID to stop running (cheaper than e.g. deleting (rm) a possibly pre-existing file and waiting for it to be recreated)\\n    let start = Date.now();\\n    let sleepMs = 1;\\n    let done = false;\\n    for (var retries = 0; retries < 1000; retries++) {\\n        if (!(await fnIsAlive(pid))) {\\n            done = true;\\n            break; // Script is done running\\n        }\\n        if (verbose && retries % 100 === 0)\\n            ns.print(`Waiting for pid ${pid} to complete... (${formatDuration(Date.now() - start)})`);\\n        await ns.sleep(sleepMs);\\n        sleepMs = Math.min(sleepMs * 2, 200);\\n    }\\n    // Make sure that the process has shut down and we haven't just stopped retrying\\n    if (!done) {\\n        let errorMessage = `run-command pid ${pid} is running much longer than expected. Max retries exceeded.`;\\n        ns.print(errorMessage);\\n        throw new Error(errorMessage);\\n    }\\n}\\n/** If the argument is an Error instance, returns it as is, otherwise, returns a new Error instance. */\\nfunction asError(error) {\\n    return error instanceof Error ? error : new Error(typeof error === 'string' ? error : JSON.stringify(error));\\n}\\n/** Helper to retry something that failed temporarily (can happen when e.g. we temporarily don't have enough RAM to run)\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport async function autoRetry(ns, fnFunctionThatMayFail, fnSuccessCondition, errorContext = \\\"Success condition not met\\\", maxRetries = 5, initialRetryDelayMs = 50, backoffRate = 3, verbose = false, tprintFatalErrors = true) {\\n    checkNsInstance(ns, '\\\"autoRetry\\\"');\\n    let retryDelayMs = initialRetryDelayMs, attempts = 0;\\n    while (attempts++ <= maxRetries) {\\n        try {\\n            const result = await fnFunctionThatMayFail();\\n            const error = typeof errorContext === 'string' ? errorContext : errorContext();\\n            if (!fnSuccessCondition(result))\\n                throw asError(error);\\n            return result;\\n        }\\n        catch (error) {\\n            const fatal = attempts >= maxRetries;\\n            log(ns, `${fatal ? 'FAIL' : 'INFO'}: Attempt ${attempts} of ${maxRetries} failed` +\\n                (fatal ? `: ${typeof error === 'string' ? error : error.message || JSON.stringify(error)}` : `. Trying again in ${retryDelayMs}ms...`), tprintFatalErrors && fatal, !verbose ? undefined : (fatal ? 'error' : 'info'));\\n            if (fatal)\\n                throw asError(error);\\n            await ns.sleep(retryDelayMs);\\n            retryDelayMs *= backoffRate;\\n        }\\n    }\\n}\\n/** Helper to log a message, and optionally also tprint it and toast it\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport function log(ns, message = \\\"\\\", alsoPrintToTerminal = false, toastStyle = \\\"\\\", maxToastLength = Number.MAX_SAFE_INTEGER) {\\n    checkNsInstance(ns, '\\\"log\\\"');\\n    ns.print(message);\\n    if (toastStyle)\\n        ns.toast(message.length <= maxToastLength ? message : message.substring(0, maxToastLength - 3) + \\\"...\\\", toastStyle);\\n    if (alsoPrintToTerminal) {\\n        ns.tprint(message);\\n        // TODO: Find a way write things logged to the terminal to a \\\"permanent\\\" terminal log file, preferably without this becoming an async function.\\n        //       Perhaps we copy logs to a port so that a separate script can optionally pop and append them to a file.\\n        //ns.write(\\\"log.terminal.txt\\\", message + '\\\\n', 'a'); // Note: we should get away with not awaiting this promise since it's not a script file\\n    }\\n    return message;\\n}\\n/** Helper to get a list of all hostnames on the network\\n * @param {NS} ns - The nestcript instance passed to your script's main entry point */\\nexport function scanAllServers(ns) {\\n    checkNsInstance(ns, '\\\"scanAllServers\\\"');\\n    let discoveredHosts = []; // Hosts (a.k.a. servers) we have scanned\\n    let hostsToScan = [\\\"home\\\"]; // Hosts we know about, but have no yet scanned\\n    let infiniteLoopProtection = 9999; // In case you mess with this code, this should save you from getting stuck\\n    while (hostsToScan.length > 0 && infiniteLoopProtection-- > 0) { // Loop until the list of hosts to scan is empty\\n        let hostName = hostsToScan.pop(); // Get the next host to be scanned\\n        discoveredHosts.push(hostName); // Mark this host as \\\"scanned\\\"\\n        for (const connectedHost of ns.scan(hostName)) // \\\"scan\\\" (list all hosts connected to this one)\\n            if (!discoveredHosts.includes(connectedHost) && !hostsToScan.includes(connectedHost)) // If we haven't found this host\\n                hostsToScan.push(connectedHost); // Add it to the queue of hosts to be scanned\\n    }\\n    return discoveredHosts; // The list of scanned hosts should now be the set of all hosts in the game!\\n}\\n/** @param {NS} ns\\n * Get a dictionary of active source files, taking into account the current active bitnode as well (optionally disabled). **/\\nexport async function getActiveSourceFiles(ns, includeLevelsFromCurrentBitnode = true) {\\n    return await getActiveSourceFiles_Custom(ns, getNsDataThroughFile, includeLevelsFromCurrentBitnode);\\n}\\n/** @param {NS} ns\\n * @param {(ns: NS, command: string, fName?: string, args?: any, verbose?: any, maxRetries?: number, retryDelayMs?: number) => Promise<any>} fnGetNsDataThroughFile\\n * getActiveSourceFiles Helper that allows the user to pass in their chosen implementation of getNsDataThroughFile to minimize RAM usage **/\\nexport async function getActiveSourceFiles_Custom(ns, fnGetNsDataThroughFile, includeLevelsFromCurrentBitnode = true) {\\n    checkNsInstance(ns, '\\\"getActiveSourceFiles\\\"');\\n    // Find out what source files the user has unlocked\\n    let dictSourceFiles;\\n    try {\\n        dictSourceFiles = await fnGetNsDataThroughFile(ns, `Object.fromEntries(ns.singularity.getOwnedSourceFiles().map(sf => [sf.n, sf.lvl]))`, '/Temp/owned-source-files.txt');\\n    }\\n    catch {\\n        dictSourceFiles = {};\\n    } // If this fails (e.g. low RAM), return an empty dictionary\\n    // If the user is currently in a given bitnode, they will have its features unlocked\\n    if (includeLevelsFromCurrentBitnode) {\\n        try {\\n            const currentNode = (await fnGetNsDataThroughFile(ns, 'ns.getResetInfo()', '/Temp/reset-info.txt')).currentNode;\\n            dictSourceFiles[currentNode] = Math.max(3, dictSourceFiles[currentNode] || 0);\\n        }\\n        catch { /* We are expected to be fault-tolerant in low-ram conditions */\\n        }\\n    }\\n    return dictSourceFiles;\\n}\\n/** @param {NS} ns\\n * Return bitnode multiplers, or null if they cannot be accessed. **/\\nexport async function tryGetBitNodeMultipliers(ns) {\\n    return await tryGetBitNodeMultipliers_Custom(ns, getNsDataThroughFile);\\n}\\n/** @param {NS} ns\\n * tryGetBitNodeMultipliers Helper that allows the user to pass in their chosen implementation of getNsDataThroughFile to minimize RAM usage **/\\nexport async function tryGetBitNodeMultipliers_Custom(ns, fnGetNsDataThroughFile) {\\n    checkNsInstance(ns, '\\\"tryGetBitNodeMultipliers\\\"');\\n    let canGetBitNodeMultipliers = false;\\n    try {\\n        canGetBitNodeMultipliers = 5 in (await getActiveSourceFiles_Custom(ns, fnGetNsDataThroughFile));\\n    }\\n    catch {\\n    }\\n    if (!canGetBitNodeMultipliers)\\n        return null;\\n    try {\\n        return await fnGetNsDataThroughFile(ns, 'ns.getBitNodeMultipliers()', '/Temp/bitnode-multipliers.txt');\\n    }\\n    catch {\\n    }\\n    return null;\\n}\\n/** @param {NS} ns\\n * Returns the number of instances of the current script running on the specified host. **/\\nexport async function instanceCount(ns, onHost = \\\"home\\\", warn = true, tailOtherInstances = true) {\\n    checkNsInstance(ns, '\\\"alreadyRunning\\\"');\\n    const scriptName = ns.getScriptName();\\n    const others = await getNsDataThroughFile(ns, 'ns.ps(ns.args[0]).filter(p => p.filename == ns.args[1]).map(p => p.pid)', '/Temp/ps-other-instances.txt', [onHost, scriptName]);\\n    if (others.length >= 2) {\\n        if (warn)\\n            log(ns, `WARNING: You cannot start multiple versions of this script (${scriptName}). Please shut down the other instance first.` +\\n                (tailOtherInstances ? ' (To help with this, a tail window for the other instance will be opened)' : ''), true, 'warning');\\n        if (tailOtherInstances) // Tail all but the last pid, since it will belong to the current instance (which will be shut down)\\n            others.slice(0, others.length - 1).forEach(pid => ns.tail(pid));\\n    }\\n    return others.length;\\n}\\nlet cachedStockSymbols = null; // Cache of stock symbols since these never change\\n/** Helper function to get all stock symbols, or null if you do not have TIX api access.\\n * Caches symbols the first time they are successfully requested, since symbols never change.\\n * @param {NS} ns */\\nexport async function getStockSymbols(ns) {\\n    cachedStockSymbols ??= await getNsDataThroughFile(ns, `(() => { try { return ns.stock.getSymbols(); } catch { return null; } })()`, '/Temp/stock-symbols.txt');\\n    return cachedStockSymbols;\\n}\\n/** Helper function to get the total value of stocks using as little RAM as possible.\\n * @param {NS} ns */\\nexport async function getStocksValue(ns) {\\n    let stockSymbols = await getStockSymbols(ns);\\n    if (stockSymbols == null)\\n        return 0; // No TIX API Access\\n    const stockGetAll = async (fn) => await getNsDataThroughFile(ns, `(() => { try { return Object.fromEntries(ns.args.map(sym => [sym, ns.stock.${fn}(sym)])); } catch { return null; } })()`, `/Temp/stock-${fn}-all.txt`, stockSymbols);\\n    const askPrices = await stockGetAll('getAskPrice');\\n    // Workaround for Bug #304: If we lost TIX access, our cache of stock symbols will still be valid, but we won't be able to get prices.\\n    if (askPrices == null)\\n        return 0; // No TIX API Access\\n    const bidPrices = await stockGetAll('getBidPrice');\\n    const positions = await stockGetAll('getPosition');\\n    return stockSymbols.map(sym => ({ sym, pos: positions[sym], ask: askPrices[sym], bid: bidPrices[sym] }))\\n        .reduce((total, stk) => total + (stk.pos[0] * stk.bid) /* Long Value */ + stk.pos[2] * (stk.pos[3] * 2 - stk.ask) /* Short Value */\\n        // Subtract commission only if we have one or more shares (this is money we won't get when we sell our position)\\n        // If for some crazy reason we have shares both in the short and long position, we'll have to pay the commission twice (two separate sales)\\n        - 100000 * (Math.sign(stk.pos[0]) + Math.sign(stk.pos[2])), 0);\\n}\\n/** @param {NS} ns\\n * Returns a helpful error message if we forgot to pass the ns instance to a function */\\nexport function checkNsInstance(ns, fnName = \\\"this function\\\") {\\n    if (ns === undefined || !ns.print)\\n        throw new Error(`The first argument to ${fnName} should be a 'ns' instance.`);\\n    return ns;\\n}\\n/** A helper to parse the command line arguments with a bunch of extra features, such as\\n * - Loading a persistent defaults override from a local config file named after the script.\\n * - Rendering \\\"--help\\\" output without all scripts having to explicitly specify it\\n * @param {NS} ns\\n * @param {[string, string | number | boolean | string[]][]} argsSchema - Specification of possible command line args. **/\\nexport function getConfiguration(ns, argsSchema) {\\n    checkNsInstance(ns, '\\\"getConfig\\\"');\\n    const scriptName = ns.getScriptName();\\n    // If the user has a local config file, override the defaults in the argsSchema\\n    const confName = `${scriptName}.config.txt`;\\n    const overrides = ns.read(confName);\\n    const overriddenSchema = overrides ? [...argsSchema] : argsSchema; // Clone the original args schema\\n    if (overrides) {\\n        try {\\n            let parsedOverrides = JSON.parse(overrides); // Expect a parsable dict or array of 2-element arrays like args schema\\n            if (Array.isArray(parsedOverrides))\\n                parsedOverrides = Object.fromEntries(parsedOverrides);\\n            log(ns, `INFO: Applying ${Object.keys(parsedOverrides).length} overriding default arguments from \\\"${confName}\\\"...`);\\n            for (const key in parsedOverrides) {\\n                const override = parsedOverrides[key];\\n                const matchIndex = overriddenSchema.findIndex(o => o[0] == key);\\n                const match = matchIndex === -1 ? null : overriddenSchema[matchIndex];\\n                if (!match)\\n                    throw new Error(`Unrecognized key \\\"${key}\\\" does not match of this script's options: ` + JSON.stringify(argsSchema.map(a => a[0])));\\n                else if (override === undefined)\\n                    throw new Error(`The key \\\"${key}\\\" appeared in the config with no value. Some value must be provided. Try null?`);\\n                else if (match && JSON.stringify(match[1]) != JSON.stringify(override)) {\\n                    if (typeof (match[1]) !== typeof (override))\\n                        log(ns, `WARNING: The \\\"${confName}\\\" overriding \\\"${key}\\\" value: ${JSON.stringify(override)} has a different type (${typeof override}) than the ` +\\n                            `current default value ${JSON.stringify(match[1])} (${typeof match[1]}). The resulting behaviour may be unpredictable.`, false, 'warning');\\n                    else\\n                        log(ns, `INFO: Overriding \\\"${key}\\\" value: ${JSON.stringify(match[1])}  ->  ${JSON.stringify(override)}`);\\n                    overriddenSchema[matchIndex] = { ...match }; // Clone the (previously shallow-copied) object at this position of the new argsSchema\\n                    overriddenSchema[matchIndex][1] = override; // Update the value of the clone.\\n                }\\n            }\\n        }\\n        catch (err) {\\n            log(ns, `ERROR: There's something wrong with your config file \\\"${confName}\\\", it cannot be loaded.` +\\n                `\\\\nThe error encountered was: ${(typeof err === 'string' ? err : err.message || JSON.stringify(err))}` +\\n                `\\\\nYour config file should either be a dictionary e.g.: { \\\"string-opt\\\": \\\"value\\\", \\\"num-opt\\\": 123, \\\"array-opt\\\": [\\\"one\\\", \\\"two\\\"] }` +\\n                `\\\\nor an array of dict entries (2-element arrays) e.g.: [ [\\\"string-opt\\\", \\\"value\\\"], [\\\"num-opt\\\", 123], [\\\"array-opt\\\", [\\\"one\\\", \\\"two\\\"]] ]` +\\n                `\\\\n\\\"${confName}\\\" contains:\\\\n${overrides}`, true, 'error', 80);\\n            return null;\\n        }\\n    }\\n    // Return the result of using the in-game args parser to combine the defaults with the command line args provided\\n    try {\\n        const finalOptions = ns.flags(overriddenSchema);\\n        log(ns, `INFO: Running ${scriptName} with the following settings:` + Object.keys(finalOptions).filter(a => a != \\\"_\\\").map(a => `\\\\n  ${a.length == 1 ? \\\"-\\\" : \\\"--\\\"}${a} = ${finalOptions[a] === null ? \\\"null\\\" : JSON.stringify(finalOptions[a])}`).join(\\\"\\\") +\\n            `\\\\nrun ${scriptName} --help  to get more information about these options.`);\\n        return finalOptions;\\n    }\\n    catch (err) { // Detect if the user passed invalid arguments, and return help text\\n        const error = ns.args.includes(\\\"help\\\") || ns.args.includes(\\\"--help\\\") ? null : // Detect if the user explictly asked for help and suppress the error\\n            (typeof err === 'string' ? err : err.message || JSON.stringify(err));\\n        // Try to parse documentation about each argument from the source code's comments\\n        const source = ns.read(scriptName).split(\\\"\\\\n\\\");\\n        let argsRow = 1 + source.findIndex(row => row.includes(\\\"argsSchema =\\\"));\\n        const optionDescriptions = {};\\n        while (argsRow && argsRow < source.length) {\\n            const nextArgRow = source[argsRow++].trim();\\n            if (nextArgRow.length == 0)\\n                continue;\\n            if (nextArgRow[0] == \\\"]\\\" || nextArgRow.includes(\\\";\\\"))\\n                break; // We've reached the end of the args schema\\n            const commentSplit = nextArgRow.split(\\\"//\\\").map(e => e.trim());\\n            if (commentSplit.length != 2)\\n                continue; // This row doesn't appear to be in the format: [option...], // Comment\\n            const optionSplit = commentSplit[0].split(\\\"'\\\"); // Expect something like: ['name', someDefault]. All we need is the name\\n            if (optionSplit.length < 2)\\n                continue;\\n            optionDescriptions[optionSplit[1]] = commentSplit[1];\\n        }\\n        log(ns, (error ? `ERROR: There was an error parsing the script arguments provided: ${error}\\\\n` : 'INFO: ') +\\n            `${scriptName} possible arguments:` + argsSchema.map(a => `\\\\n  ${a[0].length == 1 ? \\\" -\\\" : \\\"--\\\"}${a[0].padEnd(30)} ` +\\n            `Default: ${(a[1] === null ? \\\"null\\\" : JSON.stringify(a[1])).padEnd(10)}` +\\n            (a[0] in optionDescriptions ? ` // ${optionDescriptions[a[0]]}` : '')).join(\\\"\\\") + '\\\\n' +\\n            `\\\\nTip: All argument names, and some values support auto-complete. Hit the <tab> key to autocomplete or see possible options.` +\\n            `\\\\nTip: Array arguments are populated by specifying the argument multiple times, e.g.:` +\\n            `\\\\n       run ${scriptName} --arrayArg first --arrayArg second --arrayArg third  to run the script with arrayArg=[first, second, third]` +\\n            (!overrides ? `\\\\nTip: You can override the default values by creating a config file named \\\"${confName}\\\" containing e.g.: { \\\"arg-name\\\": \\\"preferredValue\\\" }`\\n                : overrides && !error ? `\\\\nNote: The default values are being modified by overrides in your local \\\"${confName}\\\":\\\\n${overrides}`\\n                    : `\\\\nThis error may have been caused by your local overriding \\\"${confName}\\\" (especially if you changed the types of any options):\\\\n${overrides}`), true);\\n        return null; // Caller should handle null and shut down elegantly.\\n    }\\n}\\n/** In order to pass in args to pass along to the startup/completion script, they may have to be quoted, when given as\\n * parameters to this script, but those quotes will have to be stripped when passing these along to a subsequent script as raw strings.\\n * @param {string[]} args - The the array-argument passed to the script.\\n * @returns {string[]} The the array-argument unescaped (or deserialized if a single argument starting with '[' was supplied]). */\\nexport function unEscapeArrayArgs(args) {\\n    // For convenience, also support args as a single stringified array\\n    if (args.length == 1 && args[0].startsWith(\\\"[\\\"))\\n        return JSON.parse(args[0]);\\n    // Otherwise, args wrapped in quotes should have those quotes removed.\\n    const escapeChars = ['\\\"', \\\"'\\\", \\\"`\\\"];\\n    return args.map(arg => escapeChars.some(c => arg.startsWith(c) && arg.endsWith(c)) ? arg.slice(1, -1) : arg);\\n}\\n//# sourceMappingURL=data:application/json;base64,\",\"filename\":\"server/helper.js\",\"server\":\"trader\"}}],[\"Temp/stock-hasTIXAPIAccess.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.stock.hasTIXAPIAccess()\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-hasTIXAPIAccess.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-hasTIXAPIAccess.txt.js\",\"server\":\"trader\"}}],[\"Temp/ps-other-instances.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.ps(ns.args[0]).filter(p => p.filename == ns.args[1]).map(p => p.pid)\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/ps-other-instances.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/ps-other-instances.txt.js\",\"server\":\"trader\"}}],[\"Temp/getPlayer.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ( ()=> { let player = ns.getPlayer();\\n            const excludeProperties = ['playtimeSinceLastAug', 'playtimeSinceLastBitnode', 'bitNodeN'];\\n            return Object.keys(player).reduce((pCopy, key) => {\\n                if (!excludeProperties.includes(key))\\n                   pCopy[key] = player[key];\\n                return pCopy;\\n            }, {});\\n        })()\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/getPlayer.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/getPlayer.txt.js\",\"server\":\"trader\"}}],[\"Temp/getResetInfo.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.getResetInfo()\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/getResetInfo.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/getResetInfo.txt.js\",\"server\":\"trader\"}}],[\"Temp/owned-source-files.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    Object.fromEntries(ns.singularity.getOwnedSourceFiles().map(sf => [sf.n, sf.lvl]))\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/owned-source-files.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/owned-source-files.txt.js\",\"server\":\"trader\"}}],[\"Temp/reset-info.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.getResetInfo()\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/reset-info.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/reset-info.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-symbols.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    (() => { try { return ns.stock.getSymbols(); } catch { return null; } })()\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-symbols.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-symbols.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-getMaxShares.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    Object.fromEntries(ns.args.map(sym => [sym, ns.stock.getMaxShares(sym)]))\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-getMaxShares.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-getMaxShares.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-has4SDataTIXAPI.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.stock.has4SDataTIXAPI()\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-has4SDataTIXAPI.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-has4SDataTIXAPI.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-getAskPrice.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    Object.fromEntries(ns.args.map(sym => [sym, ns.stock.getAskPrice(sym)]))\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-getAskPrice.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-getAskPrice.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-getBidPrice.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    Object.fromEntries(ns.args.map(sym => [sym, ns.stock.getBidPrice(sym)]))\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-getBidPrice.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-getBidPrice.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-getVolatility.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    Object.fromEntries(ns.args.map(sym => [sym, ns.stock.getVolatility(sym)]))\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-getVolatility.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-getVolatility.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-getForecast.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    Object.fromEntries(ns.args.map(sym => [sym, ns.stock.getForecast(sym)]))\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-getForecast.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-getForecast.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-getPosition.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    Object.fromEntries(ns.args.map(sym => [sym, ns.stock.getPosition(sym)]))\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-getPosition.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-getPosition.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-buyStock.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.stock.buyStock(ns.args[0], ns.args[1])\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-buyStock.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-buyStock.txt.js\",\"server\":\"trader\"}}],[\"Temp/stock-sellStock.txt.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) { let r;try{r=JSON.stringify(\\n    ns.stock.sellStock(ns.args[0], ns.args[1])\\n);}catch(e){r=\\\"ERROR: \\\"+(typeof e=='string'?e:e.message||JSON.stringify(e));}\\nconst f=\\\"/Temp/stock-sellStock.txt\\\"; if(ns.read(f)!==r) ns.write(f,r,'w') }\",\"filename\":\"Temp/stock-sellStock.txt.js\",\"server\":\"trader\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"Temp/stock-hasTIXAPIAccess.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-hasTIXAPIAccess.txt\",\"text\":\"true\"}}],[\"Temp/ps-other-instances.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/ps-other-instances.txt\",\"text\":\"[]\"}}],[\"Temp/getPlayer.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/getPlayer.txt\",\"text\":\"{\\\"hp\\\":{\\\"current\\\":10,\\\"max\\\":10},\\\"skills\\\":{\\\"hacking\\\":3000,\\\"strength\\\":2,\\\"defense\\\":1,\\\"dexterity\\\":2,\\\"agility\\\":1,\\\"charisma\\\":2,\\\"intelligence\\\":0},\\\"exp\\\":{\\\"hacking\\\":15337747.417707091,\\\"strength\\\":0,\\\"defense\\\":0,\\\"dexterity\\\":0,\\\"agility\\\":0,\\\"charisma\\\":0,\\\"intelligence\\\":0},\\\"mults\\\":{\\\"hacking_chance\\\":2.36199897781433,\\\"hacking_speed\\\":2.420708529795824,\\\"hacking_money\\\":6.808238583268071,\\\"hacking_grow\\\":4.13636885115778,\\\"hacking\\\":5.773801653260731,\\\"hacking_exp\\\":5.4733245501180905,\\\"strength\\\":2.1745481960372324,\\\"strength_exp\\\":2.3920030156409564,\\\"defense\\\":1.890911474814985,\\\"defense_exp\\\":2.3920030156409564,\\\"dexterity\\\":2.1745481960372324,\\\"dexterity_exp\\\":2.3920030156409564,\\\"agility\\\":1.890911474814985,\\\"agility_exp\\\":2.3920030156409564,\\\"charisma\\\":2.0800026222964836,\\\"charisma_exp\\\":2.3920030156409564,\\\"hacknet_node_money\\\":4.769056012434158,\\\"hacknet_node_purchase_cost\\\":0.40456639308027387,\\\"hacknet_node_ram_cost\\\":0.5288449582748679,\\\"hacknet_node_core_cost\\\":0.5288449582748679,\\\"hacknet_node_level_cost\\\":0.4495182145336376,\\\"company_rep\\\":3.157443980646062,\\\"faction_rep\\\":2.3920030156409555,\\\"work_money\\\":2.0800026222964836,\\\"crime_success\\\":1.890911474814985,\\\"crime_money\\\":1.890911474814985,\\\"bladeburner_max_stamina\\\":1,\\\"bladeburner_stamina_gain\\\":1,\\\"bladeburner_analysis\\\":1,\\\"bladeburner_success_chance\\\":1},\\\"city\\\":\\\"Sector-12\\\",\\\"numPeopleKilled\\\":0,\\\"money\\\":213666129694.1867,\\\"location\\\":\\\"Alpha Enterprises\\\",\\\"totalPlaytime\\\":2795755000,\\\"jobs\\\":{},\\\"factions\\\":[\\\"BitRunners\\\",\\\"The Black Hand\\\",\\\"NiteSec\\\",\\\"Netburners\\\",\\\"CyberSec\\\"],\\\"entropy\\\":0,\\\"karma\\\":0}\"}}],[\"Temp/getResetInfo.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/getResetInfo.txt\",\"text\":\"{\\\"lastAugReset\\\":1724979890537,\\\"lastNodeReset\\\":1724611901363,\\\"currentNode\\\":1,\\\"ownedAugs\\\":{},\\\"ownedSF\\\":{},\\\"bitNodeOptions\\\":{\\\"sourceFileOverrides\\\":{},\\\"restrictHomePCUpgrade\\\":false,\\\"disableGang\\\":false,\\\"disableCorporation\\\":false,\\\"disableBladeburner\\\":false,\\\"disable4SData\\\":false,\\\"disableHacknetServer\\\":false,\\\"disableSleeveExpAndAugmentation\\\":false}}\"}}],[\"Temp/owned-source-files.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/owned-source-files.txt\",\"text\":\"<Insufficient RAM>\"}}],[\"Temp/reset-info.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/reset-info.txt\",\"text\":\"{\\\"lastAugReset\\\":1724979890537,\\\"lastNodeReset\\\":1724611901363,\\\"currentNode\\\":1,\\\"ownedAugs\\\":{},\\\"ownedSF\\\":{},\\\"bitNodeOptions\\\":{\\\"sourceFileOverrides\\\":{},\\\"restrictHomePCUpgrade\\\":false,\\\"disableGang\\\":false,\\\"disableCorporation\\\":false,\\\"disableBladeburner\\\":false,\\\"disable4SData\\\":false,\\\"disableHacknetServer\\\":false,\\\"disableSleeveExpAndAugmentation\\\":false}}\"}}],[\"Temp/stock-symbols.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-symbols.txt\",\"text\":\"[\\\"ECP\\\",\\\"MGCP\\\",\\\"BLD\\\",\\\"CLRK\\\",\\\"OMTK\\\",\\\"FSIG\\\",\\\"KGI\\\",\\\"FLCM\\\",\\\"STM\\\",\\\"DCOMM\\\",\\\"HLS\\\",\\\"VITA\\\",\\\"ICRS\\\",\\\"UNV\\\",\\\"AERO\\\",\\\"OMN\\\",\\\"SLRS\\\",\\\"GPH\\\",\\\"NVMD\\\",\\\"WDS\\\",\\\"LXO\\\",\\\"RHOC\\\",\\\"APHE\\\",\\\"SYSC\\\",\\\"CTK\\\",\\\"NTLK\\\",\\\"OMGA\\\",\\\"FNS\\\",\\\"JGN\\\",\\\"SGC\\\",\\\"CTYS\\\",\\\"MDYN\\\",\\\"TITN\\\"]\"}}],[\"Temp/stock-getMaxShares.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-getMaxShares.txt\",\"text\":\"{\\\"ECP\\\":19400000,\\\"MGCP\\\":19400000,\\\"BLD\\\":13700000,\\\"CLRK\\\":27200000,\\\"OMTK\\\":8600000,\\\"FSIG\\\":6200000,\\\"KGI\\\":20100000,\\\"FLCM\\\":11400000,\\\"STM\\\":10700000,\\\"DCOMM\\\":12000000,\\\"HLS\\\":14400000,\\\"VITA\\\":17900000,\\\"ICRS\\\":7000000,\\\"UNV\\\":10700000,\\\"AERO\\\":8100000,\\\"OMN\\\":8800000,\\\"SLRS\\\":5500000,\\\"GPH\\\":5600000,\\\"NVMD\\\":4900000,\\\"WDS\\\":12300000,\\\"LXO\\\":8100000,\\\"RHOC\\\":14600000,\\\"APHE\\\":5800000,\\\"SYSC\\\":7000000,\\\"CTK\\\":24800000,\\\"NTLK\\\":2900000,\\\"OMGA\\\":1700000,\\\"FNS\\\":3000000,\\\"JGN\\\":10100000,\\\"SGC\\\":1800000,\\\"CTYS\\\":22600000,\\\"MDYN\\\":2400000,\\\"TITN\\\":3800000}\"}}],[\"Temp/stock-has4SDataTIXAPI.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-has4SDataTIXAPI.txt\",\"text\":\"true\"}}],[\"Temp/stock-getAskPrice.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-getAskPrice.txt\",\"text\":\"{\\\"ECP\\\":22453.47747846736,\\\"MGCP\\\":23439.68342268393,\\\"BLD\\\":16692.674582278287,\\\"CLRK\\\":8821.292334674064,\\\"OMTK\\\":41642.85747496332,\\\"FSIG\\\":85711.07675181553,\\\"KGI\\\":21846.458667733983,\\\"FLCM\\\":30022.807544047064,\\\"STM\\\":18473.07913056993,\\\"DCOMM\\\":13445.626449433643,\\\"HLS\\\":9327.047810836671,\\\"VITA\\\":14649.806309259944,\\\"ICRS\\\":25048.845683680232,\\\"UNV\\\":17765.51732302583,\\\"AERO\\\":12800.388777621474,\\\"OMN\\\":14286.355646905151,\\\"SLRS\\\":26226.808647202408,\\\"GPH\\\":39254.36729045609,\\\"NVMD\\\":27717.899812845637,\\\"WDS\\\":9391.295505456617,\\\"LXO\\\":5961.495417426981,\\\"RHOC\\\":2267.9101733849225,\\\"APHE\\\":31176.59634788759,\\\"SYSC\\\":6509.314202869405,\\\"CTK\\\":1402.1804606841542,\\\"NTLK\\\":457.886192055226,\\\"OMGA\\\":7491.40888630363,\\\"FNS\\\":2458.278592758789,\\\"JGN\\\":1028.2297965130829,\\\"SGC\\\":3012.52234708212,\\\"CTYS\\\":2724.169195453607,\\\"MDYN\\\":17696.07296723656,\\\"TITN\\\":18775.115207741237}\"}}],[\"Temp/stock-getBidPrice.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-getBidPrice.txt\",\"text\":\"{\\\"ECP\\\":22230.059792114454,\\\"MGCP\\\":23299.465974492407,\\\"BLD\\\":16493.55719163481,\\\"CLRK\\\":8751.003152724472,\\\"OMTK\\\":41228.500684167666,\\\"FSIG\\\":85198.3484761317,\\\"KGI\\\":21629.080969547576,\\\"FLCM\\\":29546.255043347905,\\\"STM\\\":18107.27558342993,\\\"DCOMM\\\":13258.696190950952,\\\"HLS\\\":9197.376838292766,\\\"VITA\\\":14475.05712863259,\\\"ICRS\\\":24899.00214020857,\\\"UNV\\\":17448.5903539332,\\\"AERO\\\":12647.700243494777,\\\"OMN\\\":14115.941861852603,\\\"SLRS\\\":25810.510097246814,\\\"GPH\\\":38631.28209536948,\\\"NVMD\\\":27497.040053380733,\\\"WDS\\\":9242.227322830322,\\\"LXO\\\":5843.446003220506,\\\"RHOC\\\":2254.343412626887,\\\"APHE\\\":30804.708518688134,\\\"SYSC\\\":6418.817282472015,\\\"CTK\\\":1379.923627974882,\\\"NTLK\\\":439.92987079815833,\\\"OMGA\\\":7357.766309541029,\\\"FNS\\\":2428.955190061865,\\\"JGN\\\":1015.9646299542786,\\\"SGC\\\":2976.587686878357,\\\"CTYS\\\":2675.5715289341174,\\\"MDYN\\\":17415.18292013757,\\\"TITN\\\":18588.298140997544}\"}}],[\"Temp/stock-getVolatility.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-getVolatility.txt\",\"text\":\"{\\\"ECP\\\":0.005,\\\"MGCP\\\":0.0043,\\\"BLD\\\":0.0076,\\\"CLRK\\\":0.0074,\\\"OMTK\\\":0.0064,\\\"FSIG\\\":0.011000000000000001,\\\"KGI\\\":0.0084,\\\"FLCM\\\":0.012,\\\"STM\\\":0.008,\\\"DCOMM\\\":0.006500000000000001,\\\"HLS\\\":0.006500000000000001,\\\"VITA\\\":0.0077,\\\"ICRS\\\":0.0064,\\\"UNV\\\":0.0052,\\\"AERO\\\":0.0059,\\\"OMN\\\":0.0074,\\\"SLRS\\\":0.0076,\\\"GPH\\\":0.0064,\\\"NVMD\\\":0.0076,\\\"WDS\\\":0.024700000000000003,\\\"LXO\\\":0.0132,\\\"RHOC\\\":0.0062,\\\"APHE\\\":0.0194,\\\"SYSC\\\":0.0151,\\\"CTK\\\":0.009899999999999999,\\\"NTLK\\\":0.0392,\\\"OMGA\\\":0.0097,\\\"FNS\\\":0.0070999999999999995,\\\"JGN\\\":0.0215,\\\"SGC\\\":0.0108,\\\"CTYS\\\":0.016,\\\"MDYN\\\":0.0078000000000000005,\\\"TITN\\\":0.006}\"}}],[\"Temp/stock-getForecast.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-getForecast.txt\",\"text\":\"{\\\"ECP\\\":0.31151728156911124,\\\"MGCP\\\":0.6561862612261358,\\\"BLD\\\":0.3681335974808151,\\\"CLRK\\\":0.388441164334324,\\\"OMTK\\\":0.387937523905226,\\\"FSIG\\\":0.32590826780191123,\\\"KGI\\\":0.41246710374991524,\\\"FLCM\\\":0.3528150965730136,\\\"STM\\\":0.5836565492979556,\\\"DCOMM\\\":0.5901224932007537,\\\"HLS\\\":0.41340178784179743,\\\"VITA\\\":0.43533908806843774,\\\"ICRS\\\":0.4201535109017662,\\\"UNV\\\":0.38799457302408613,\\\"AERO\\\":0.5588482342075105,\\\"OMN\\\":0.5509070550396217,\\\"SLRS\\\":0.4141258004650467,\\\"GPH\\\":0.3970701032305135,\\\"NVMD\\\":0.4462571533755756,\\\"WDS\\\":0.4808092560746775,\\\"LXO\\\":0.44185062750824194,\\\"RHOC\\\":0.47300631439548285,\\\"APHE\\\":0.4322037960349086,\\\"SYSC\\\":0.47781110744700256,\\\"CTK\\\":0.44389138783026794,\\\"NTLK\\\":0.4864954828723006,\\\"OMGA\\\":0.5250086087798452,\\\"FNS\\\":0.4844142647390493,\\\"JGN\\\":0.5508843982598863,\\\"SGC\\\":0.5371493109336793,\\\"CTYS\\\":0.5518748462655911,\\\"MDYN\\\":0.5686997859995161,\\\"TITN\\\":0.5985495186874997}\"}}],[\"Temp/stock-getPosition.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-getPosition.txt\",\"text\":\"{\\\"ECP\\\":[0,0,0,0],\\\"MGCP\\\":[9971400,23433.6348380057,0,0],\\\"BLD\\\":[0,0,0,0],\\\"CLRK\\\":[0,0,0,0],\\\"OMTK\\\":[0,0,0,0],\\\"FSIG\\\":[0,0,0,0],\\\"KGI\\\":[0,0,0,0],\\\"FLCM\\\":[0,0,0,0],\\\"STM\\\":[0,0,0,0],\\\"DCOMM\\\":[12000000,13660.028065585882,0,0],\\\"HLS\\\":[0,0,0,0],\\\"VITA\\\":[0,0,0,0],\\\"ICRS\\\":[0,0,0,0],\\\"UNV\\\":[0,0,0,0],\\\"AERO\\\":[0,0,0,0],\\\"OMN\\\":[6701034,14556.05626188421,0,0],\\\"SLRS\\\":[0,0,0,0],\\\"GPH\\\":[0,0,0,0],\\\"NVMD\\\":[0,0,0,0],\\\"WDS\\\":[0,0,0,0],\\\"LXO\\\":[0,0,0,0],\\\"RHOC\\\":[0,0,0,0],\\\"APHE\\\":[0,0,0,0],\\\"SYSC\\\":[0,0,0,0],\\\"CTK\\\":[0,0,0,0],\\\"NTLK\\\":[0,0,0,0],\\\"OMGA\\\":[0,0,0,0],\\\"FNS\\\":[0,0,0,0],\\\"JGN\\\":[10100000,957.9325157785403,0,0],\\\"SGC\\\":[0,0,0,0],\\\"CTYS\\\":[22600000,2697.4116035943002,0,0],\\\"MDYN\\\":[2400000,17268.621116717295,0,0],\\\"TITN\\\":[3800000,18333.402043210488,0,0]}\"}}],[\"Temp/stock-probabilities.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-probabilities.txt\",\"text\":\"{\\\"FSIG\\\":{\\\"prob\\\":0.32590826780191123,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"MGCP\\\":{\\\"prob\\\":0.6561862612261358,\\\"sharesLong\\\":9971400,\\\"sharesShort\\\":0},\\\"FLCM\\\":{\\\"prob\\\":0.3528150965730136,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"APHE\\\":{\\\"prob\\\":0.4322037960349086,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"CLRK\\\":{\\\"prob\\\":0.388441164334324,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"JGN\\\":{\\\"prob\\\":0.5508843982598863,\\\"sharesLong\\\":10100000,\\\"sharesShort\\\":0},\\\"ECP\\\":{\\\"prob\\\":0.31151728156911124,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"ICRS\\\":{\\\"prob\\\":0.4201535109017662,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"BLD\\\":{\\\"prob\\\":0.3681335974808151,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"KGI\\\":{\\\"prob\\\":0.41246710374991524,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"OMTK\\\":{\\\"prob\\\":0.387937523905226,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"CTYS\\\":{\\\"prob\\\":0.5518748462655911,\\\"sharesLong\\\":22600000,\\\"sharesShort\\\":0},\\\"TITN\\\":{\\\"prob\\\":0.5985495186874997,\\\"sharesLong\\\":3800000,\\\"sharesShort\\\":0},\\\"NVMD\\\":{\\\"prob\\\":0.4462571533755756,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"NTLK\\\":{\\\"prob\\\":0.4864954828723006,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"DCOMM\\\":{\\\"prob\\\":0.5901224932007537,\\\"sharesLong\\\":12000000,\\\"sharesShort\\\":0},\\\"VITA\\\":{\\\"prob\\\":0.43533908806843774,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"GPH\\\":{\\\"prob\\\":0.3970701032305135,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"SLRS\\\":{\\\"prob\\\":0.4141258004650467,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"HLS\\\":{\\\"prob\\\":0.41340178784179743,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"LXO\\\":{\\\"prob\\\":0.44185062750824194,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"CTK\\\":{\\\"prob\\\":0.44389138783026794,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"MDYN\\\":{\\\"prob\\\":0.5686997859995161,\\\"sharesLong\\\":2400000,\\\"sharesShort\\\":0},\\\"OMN\\\":{\\\"prob\\\":0.5509070550396217,\\\"sharesLong\\\":6701034,\\\"sharesShort\\\":0},\\\"RHOC\\\":{\\\"prob\\\":0.47300631439548285,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"STM\\\":{\\\"prob\\\":0.5836565492979556,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"UNV\\\":{\\\"prob\\\":0.38799457302408613,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"SYSC\\\":{\\\"prob\\\":0.47781110744700256,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"AERO\\\":{\\\"prob\\\":0.5588482342075105,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"SGC\\\":{\\\"prob\\\":0.5371493109336793,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"WDS\\\":{\\\"prob\\\":0.4808092560746775,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"OMGA\\\":{\\\"prob\\\":0.5250086087798452,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0},\\\"FNS\\\":{\\\"prob\\\":0.4844142647390493,\\\"sharesLong\\\":0,\\\"sharesShort\\\":0}}\"}}],[\"Temp/stock-buyStock.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-buyStock.txt\",\"text\":\"14556.05626188421\"}}],[\"Temp/stock-sellStock.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Temp/stock-sellStock.txt\",\"text\":\"29509.536043911015\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"server/trade.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":108474018296.47482,\"onlineRunningTime\":7496.209999995373,\"ramUsage\":2.6,\"server\":\"trader\",\"scriptKey\":\"server/trade.js*[]\",\"title\":\"server/trade.js \",\"threads\":1,\"temporary\":false}}]}}}","CompaniesSave":"{\"Alpha Enterprises\":{\"favor\":2.2427662860147746}}","FactionsSave":"{\"Daedalus\":{\"discovery\":\"known\"},\"Four Sigma\":{\"discovery\":\"known\"},\"BitRunners\":{\"favor\":160.76031373090265,\"playerReputation\":975705.4979937463,\"discovery\":\"known\"},\"The Black Hand\":{\"favor\":175.06555851027048,\"playerReputation\":65708.27023979227,\"discovery\":\"known\"},\"NiteSec\":{\"favor\":144.05738338180603,\"playerReputation\":58377.41356897738,\"discovery\":\"known\"},\"Aevum\":{\"favor\":6.161522813860028,\"discovery\":\"known\"},\"Chongqing\":{\"discovery\":\"known\"},\"New Tokyo\":{\"favor\":9.513393517449087,\"discovery\":\"known\"},\"Sector-12\":{\"favor\":41.30752000743857,\"discovery\":\"known\"},\"Volhaven\":{\"discovery\":\"known\"},\"Slum Snakes\":{\"discovery\":\"rumored\"},\"Netburners\":{\"favor\":153.04171368482773,\"playerReputation\":58318.2043034371,\"discovery\":\"known\"},\"Tian Di Hui\":{\"favor\":128.6261755574662,\"discovery\":\"known\"},\"CyberSec\":{\"favor\":136.87015123800174,\"playerReputation\":56221.51490527755,\"discovery\":\"known\"}}","AliasesSave":"{\"n\":\"run NUKE.exe\",\"home\":\"home; cd src\",\"h\":\"run hack.js\",\"sa\":\"scan-analyze 3\",\"worm\":\"run src/worm.js\",\"sa1\":\"scan-analyze 3\",\"sa2\":\"scan-analyze 5\",\"sa3\":\"scan-analyze 10\",\"brutessh\":\"home; connect darkweb; buy -l; buy brutessh.exe; home\",\"ftpcrack\":\"home; connect darkweb; buy -l; buy ftpcrack.exe; home\",\"relaysmtp\":\"home; connect darkweb; buy -l; buy relaysmtp.exe; home\",\"httpworm\":\"home; connect darkweb; buy -l; buy httpworm.exe; home\",\"sqlinject\":\"home; connect darkweb; buy -l; buy sqlinject.exe; home\"}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":22310.772360630825,\"lastPrice\":22341.768635290908,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.5,\"b\":false,\"otlkMag\":18.87445767840972,\"otlkMagForecast\":29.87452588801412,\"cap\":320396047,\"spreadPerc\":0.5,\"shareTxForMovement\":45838,\"shareTxUntilMovement\":15298,\"totalShares\":97200000,\"maxShares\":19400000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":23341.686171854577,\"lastPrice\":23369.57469858817,\"playerShares\":9971400,\"playerAvgPx\":23433.6348380057,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.43,\"b\":true,\"otlkMag\":15.599965068354019,\"otlkMagForecast\":69.594713289403,\"cap\":601904183,\"spreadPerc\":0.3,\"shareTxForMovement\":61131,\"shareTxUntilMovement\":26312,\"totalShares\":97200000,\"maxShares\":19400000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":16628.156075129395,\"lastPrice\":16593.115886956548,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":13.214486881746348,\"otlkMagForecast\":35.717864820272446,\"cap\":447085042,\"spreadPerc\":0.6,\"shareTxForMovement\":64486,\"shareTxUntilMovement\":52114,\"totalShares\":68300000,\"maxShares\":13700000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":8768.11910019184,\"lastPrice\":8786.147743699268,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":false,\"otlkMag\":11.178821832521079,\"otlkMagForecast\":38.83771671040601,\"cap\":221556483,\"spreadPerc\":0.4,\"shareTxForMovement\":87317,\"shareTxUntilMovement\":85459,\"totalShares\":136000000,\"maxShares\":27200000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":41509.36411995576,\"lastPrice\":41435.679079565496,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":false,\"otlkMag\":11.186319546849493,\"otlkMagForecast\":37.3729483269542,\"cap\":911106465,\"spreadPerc\":0.5,\"shareTxForMovement\":61851,\"shareTxUntilMovement\":61851,\"totalShares\":43000000,\"maxShares\":8600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":85715.90083914156,\"lastPrice\":85454.71261397362,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.1,\"b\":false,\"otlkMag\":17.462383521684952,\"otlkMagForecast\":32.02140935054059,\"cap\":1250999832,\"spreadPerc\":0.3,\"shareTxForMovement\":41802,\"shareTxUntilMovement\":41802,\"totalShares\":30800000,\"maxShares\":6200000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":21687.15161916779,\"lastPrice\":21737.76981864078,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.84,\"b\":false,\"otlkMag\":8.773719959432478,\"otlkMagForecast\":39.96213288057361,\"cap\":419775358,\"spreadPerc\":0.5,\"shareTxForMovement\":59971,\"shareTxUntilMovement\":59971,\"totalShares\":100700000,\"maxShares\":20100000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":29883.842191340504,\"lastPrice\":29784.531293697484,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.2,\"b\":false,\"otlkMag\":14.669414314828,\"otlkMagForecast\":33.27124899680076,\"cap\":699478735,\"spreadPerc\":0.8,\"shareTxForMovement\":52147,\"shareTxUntilMovement\":11696,\"totalShares\":57100000,\"maxShares\":11400000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":18330.834119699164,\"lastPrice\":18290.17735699993,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":8.384250728002746,\"otlkMagForecast\":56.740600098352054,\"cap\":319870074,\"spreadPerc\":1,\"shareTxForMovement\":70346,\"shareTxUntilMovement\":70346,\"totalShares\":53300000,\"maxShares\":10700000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":13376.27646191692,\"lastPrice\":13352.161320192297,\"playerShares\":12000000,\"playerAvgPx\":13660.028065585882,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":8.995972429435762,\"otlkMagForecast\":60.309858109566164,\"cap\":36866450,\"spreadPerc\":0.7,\"shareTxForMovement\":63177,\"shareTxUntilMovement\":3790,\"totalShares\":60000000,\"maxShares\":12000000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":9278.94066970182,\"lastPrice\":9262.21232456472,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":false,\"otlkMag\":8.675461591256227,\"otlkMagForecast\":40.94414953837316,\"cap\":222253210,\"spreadPerc\":0.7,\"shareTxForMovement\":94221,\"shareTxUntilMovement\":94221,\"totalShares\":72000000,\"maxShares\":14400000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":14593.588280181082,\"lastPrice\":14562.431718946267,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":6.452256885116358,\"otlkMagForecast\":42.931255624595735,\"cap\":193965545,\"spreadPerc\":0.6,\"shareTxForMovement\":80372,\"shareTxUntilMovement\":80372,\"totalShares\":89600000,\"maxShares\":17900000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":24929.5916358142,\"lastPrice\":24973.923911944403,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":false,\"otlkMag\":7.998848005638669,\"otlkMagForecast\":42.30343285190816,\"cap\":553544482,\"spreadPerc\":0.3,\"shareTxForMovement\":46091,\"shareTxUntilMovement\":46091,\"totalShares\":35000000,\"maxShares\":7000000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":17581.650670407933,\"lastPrice\":17607.053838479515,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.52,\"b\":false,\"otlkMag\":11.216726005630763,\"otlkMagForecast\":39.637658483923445,\"cap\":289532994,\"spreadPerc\":0.9,\"shareTxForMovement\":89038,\"shareTxUntilMovement\":89038,\"totalShares\":53400000,\"maxShares\":10700000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":12703.219237899846,\"lastPrice\":12724.044510558126,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":5.875176019569673,\"otlkMagForecast\":55.58352260581231,\"cap\":386322803,\"spreadPerc\":0.6,\"shareTxForMovement\":122888,\"shareTxUntilMovement\":122888,\"totalShares\":40700000,\"maxShares\":8100000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":14230.348568542333,\"lastPrice\":14201.148754378877,\"playerShares\":6701034,\"playerAvgPx\":14556.05626188421,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":true,\"otlkMag\":5.080238206052154,\"otlkMagForecast\":54.39225193928731,\"cap\":61399556,\"spreadPerc\":0.6,\"shareTxForMovement\":121398,\"shareTxUntilMovement\":97414,\"totalShares\":44000000,\"maxShares\":8800000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":26073.603767636483,\"lastPrice\":26018.65937222461,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":8.569285637243956,\"otlkMagForecast\":42.26353559167994,\"cap\":94313608,\"spreadPerc\":0.8,\"shareTxForMovement\":78265,\"shareTxUntilMovement\":78265,\"totalShares\":27400000,\"maxShares\":5500000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":39012.07669201477,\"lastPrice\":38942.824692912785,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":false,\"otlkMag\":10.31129369360604,\"otlkMagForecast\":38.91329072997474,\"cap\":214369852,\"spreadPerc\":0.8,\"shareTxForMovement\":48054,\"shareTxUntilMovement\":48054,\"totalShares\":28000000,\"maxShares\":5600000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":27549.29325152193,\"lastPrice\":27607.469933113185,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":5.385633703041532,\"otlkMagForecast\":44.11190527201898,\"cap\":50859159,\"spreadPerc\":0.4,\"shareTxForMovement\":64092,\"shareTxUntilMovement\":64092,\"totalShares\":24600000,\"maxShares\":4900000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":9253.255176639215,\"lastPrice\":9316.76141414347,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.47,\"b\":false,\"otlkMag\":1.7873659376869064,\"otlkMagForecast\":44.144735860614865,\"cap\":36352928,\"spreadPerc\":0.8,\"shareTxForMovement\":15378,\"shareTxUntilMovement\":15378,\"totalShares\":61700000,\"maxShares\":12300000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":5880.901080255771,\"lastPrice\":5902.470710323743,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.32,\"b\":false,\"otlkMag\":5.793609557445998,\"otlkMagForecast\":43.68258994935134,\"cap\":98867847,\"spreadPerc\":1,\"shareTxForMovement\":67801,\"shareTxUntilMovement\":67801,\"totalShares\":40400000,\"maxShares\":8100000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":2257.2381867594654,\"lastPrice\":2261.126793005905,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":false,\"otlkMag\":2.652865796555609,\"otlkMagForecast\":45.95064570702048,\"cap\":56310796,\"spreadPerc\":0.3,\"shareTxForMovement\":111985,\"shareTxUntilMovement\":111985,\"totalShares\":73100000,\"maxShares\":14600000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":30824.493928207947,\"lastPrice\":30990.65243328786,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.94,\"b\":false,\"otlkMag\":6.816165735833017,\"otlkMagForecast\":41.77860583384402,\"cap\":169674852,\"spreadPerc\":0.6,\"shareTxForMovement\":53419,\"shareTxUntilMovement\":41064,\"totalShares\":29100000,\"maxShares\":5800000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":6437.057939700749,\"lastPrice\":6464.06574267071,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.51,\"b\":false,\"otlkMag\":2.311986636713226,\"otlkMagForecast\":44.58829076869846,\"cap\":7056386,\"spreadPerc\":0.7,\"shareTxForMovement\":25691,\"shareTxUntilMovement\":25691,\"totalShares\":34900000,\"maxShares\":7000000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":1394.8785597212946,\"lastPrice\":1391.0520443295181,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.99,\"b\":false,\"otlkMag\":5.626295612037995,\"otlkMagForecast\":45.78366720284281,\"cap\":36025418,\"spreadPerc\":0.8,\"shareTxForMovement\":91636,\"shareTxUntilMovement\":91636,\"totalShares\":124200000,\"maxShares\":24800000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":453.79757514522265,\"lastPrice\":448.90803142669216,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.92,\"b\":false,\"otlkMag\":1.2033593858991687,\"otlkMagForecast\":44.67637538146867,\"cap\":23315149,\"spreadPerc\":2,\"shareTxForMovement\":24173,\"shareTxUntilMovement\":24173,\"totalShares\":14300000,\"maxShares\":2900000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":7444.598605710145,\"lastPrice\":7424.58759792233,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.97,\"b\":true,\"otlkMag\":2.4334568022085197,\"otlkMagForecast\":49.361198483762244,\"cap\":138357185,\"spreadPerc\":0.9,\"shareTxForMovement\":47620,\"shareTxUntilMovement\":47620,\"totalShares\":8700000,\"maxShares\":1700000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":2438.8056136947775,\"lastPrice\":2443.616891410327,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":false,\"otlkMag\":1.527825974785368,\"otlkMagForecast\":49.455066764519806,\"cap\":51615964,\"spreadPerc\":0.6,\"shareTxForMovement\":143666,\"shareTxUntilMovement\":143666,\"totalShares\":15000000,\"maxShares\":3000000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":2985.595602486774,\"lastPrice\":2994.5550169802386,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.08,\"b\":true,\"otlkMag\":3.603450464670524,\"otlkMagForecast\":47.63170962937766,\"cap\":30909536,\"spreadPerc\":0.6,\"shareTxForMovement\":40535,\"shareTxUntilMovement\":40535,\"totalShares\":9100000,\"maxShares\":1800000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":1016.0274910981553,\"lastPrice\":1022.0972132336807,\"playerShares\":10100000,\"playerAvgPx\":957.9325157785403,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.15,\"b\":true,\"otlkMag\":5.1188380348143765,\"otlkMagForecast\":59.888469462180936,\"cap\":5759233,\"spreadPerc\":0.6,\"shareTxForMovement\":21810,\"shareTxUntilMovement\":4582,\"totalShares\":50500000,\"maxShares\":10100000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":2711.873306341629,\"lastPrice\":2699.870362193862,\"playerShares\":22600000,\"playerAvgPx\":2697.4116035943002,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.6,\"b\":true,\"otlkMag\":5.210546877662682,\"otlkMagForecast\":62.944380846148846,\"cap\":11808662,\"spreadPerc\":0.9,\"shareTxForMovement\":28463,\"shareTxUntilMovement\":14860,\"totalShares\":112900000,\"maxShares\":22600000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":17593.67629667871,\"lastPrice\":17555.627943687065,\"playerShares\":2400000,\"playerAvgPx\":17268.621116717295,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":true,\"otlkMag\":6.884867920439286,\"otlkMagForecast\":58.032286622955816,\"cap\":675537752,\"spreadPerc\":0.8,\"shareTxForMovement\":204500,\"shareTxUntilMovement\":54160,\"totalShares\":12100000,\"maxShares\":2400000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":18712.851986696798,\"lastPrice\":18681.70667436939,\"playerShares\":3800000,\"playerAvgPx\":18333.402043210488,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":9.871381607171296,\"otlkMagForecast\":60.64247906951544,\"cap\":153133626,\"spreadPerc\":0.5,\"shareTxForMovement\":136453,\"shareTxUntilMovement\":20844,\"totalShares\":19200000,\"maxShares\":3800000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":0,\"lastUpdate\":1724987594437,\"ticksUntilCycle\":59}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutoexecScript\":\"\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":5,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"EnableHistorySearch\":false,\"GoTraditionalStyle\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":500,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiAddress\":\"localhost\",\"RemoteFileApiPort\":12525,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":true,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":true,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"TailRenderInterval\":1000,\"theme\":{\"primarylight\":\"#EA9062\",\"primary\":\"#DD7B4A\",\"primarydark\":\"#D3591C\",\"successlight\":\"#6ACF6A\",\"success\":\"#43BF43\",\"successdark\":\"#3E913E\",\"errorlight\":\"#C15757\",\"error\":\"#B34141\",\"errordark\":\"#752525\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#E6E69D\",\"warning\":\"#DADA56\",\"warningdark\":\"#A1A106\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#AD84CF\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#76C6B7\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\",\"maplocation\":\"#ffffff\",\"bnlvl0\":\"#ffff00\",\"bnlvl1\":\"#ff0000\",\"bnlvl2\":\"#48d1cc\",\"bnlvl3\":\"#0000ff\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"JetBrainsMono, \\\"Courier New\\\", monospace\"},\"overview\":{\"x\":-39,\"y\":1035,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":2,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"JetBrainsMono\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoDefaultToVim\":false,\"MonacoWordWrap\":\"off\",\"MonacoCursorStyle\":\"line\",\"MonacoCursorBlinking\":\"blink\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"40","AllGangsSave":"","LastExportBonus":"1724979341600","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}","GoSave":"{\"previousGame\":null,\"currentGame\":{\"ai\":\"Netburners\",\"board\":[\".......\",\".......\",\".......\",\".......\",\".......\",\".......\",\".......\"],\"previousPlayer\":\"White\",\"cheatCount\":0,\"passCount\":0},\"stats\":{},\"storedCycles\":0}"}}